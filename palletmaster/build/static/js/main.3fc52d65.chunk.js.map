{"version":3,"sources":["PM_Desine.png","components/NavBar.tsx","states/settings/index.ts","states/settings/SetDiscordUrl.ts","states/settings/SetDiceUrl.ts","states/characters/index.ts","states/characters/SetCharacter.ts","states/characters/SetSkills.ts","states/characters/SetAbilityValues.ts","states/characters/SetCharacterInfos.ts","states/characters/SetCharacterName.ts","states/characters/SetHP.ts","states/characters/SetMP.ts","states/characters/SetSAN.ts","states/characters/SetCharacterBackground.ts","states/index.ts","modules/sendDiscord.ts","components/DiceDialog.tsx","pages/Skill.tsx","containers/Skill.tsx","pages/Character.tsx","containers/Character.tsx","modules/getAbilityValue.ts","pages/Ability.tsx","containers/Ability.tsx","modules/shakeNDNDice.ts","components/DiceNDNDialog.tsx","pages/SAN.tsx","containers/SAN.tsx","pages/Battle.tsx","components/ImportPMJDialog.tsx","modules/importPMJ.js","components/SideBar.tsx","containers/SideBar.tsx","pages/Home.tsx","modules/firebase.ts","pages/Login.tsx","pages/Main.tsx","pages/Setting.tsx","containers/Setting.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","createStyles","root","position","zIndex","navBar","left","right","margin","width","menuButton","marginRight","spacing","title","login","NavBar","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","value","setValue","react_default","a","createElement","AppBar","className","Toolbar","Typography","variant","BottomNavigation","onChange","event","newValue","BottomNavigationAction","component","Link","to","label","icon","ColorLens_default","OfflinePin_default","Settings_default","Create_default","Button","color","actionCreator","setDiscordUrl","payload","type","setDiceUrl","setCharacter","setSkills","setAbilityValues","setCharacterInfos","setCharacterName","setHP","setMP","setSAN","setCharacterBackground","rootReducer","combineReducers","setting","state","arguments","length","undefined","discordUrl","diceUrl","action","objectSpread","url","character","skills","characterBackground","abilityValues","STR","CON","POW","DEX","APP","SIZ","INT","EDU","characterInfos","characterName","HP","MP","SAN","damageBonus","job","age","sex","height","weight","origin","assign","chara","hp","mp","san","background","Settings","Characters","ShakeDice","item","result","ok","_1d100Value","Math","round","random","name","AlertDialog","props","handleClose","setOpen","open","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","onClick","autoFocus","marginTop","overflowX","table","minWidth","numberInfoField","marginLeft","fab","chip","connect","dispatch","category","setCategory","_React$useState3","_React$useState4","skill","setSkill","_React$useState5","_React$useState6","_React$useState7","_React$useState8","_React$useState9","_React$useState10","openDialog","setOpenDialog","_React$useState11","user","_React$useState12","setItem","setItems","ability","Paper","clsx","Chip","TextField","defaultValue","target","placeholder","Fab","aria-label","Add_default","addSkill","skillName","skillValue","skillType","skillUnique","skillWorkValue","skillInterestValue","newSkills","JSON","parse","stringify","cSkill","find","s","concat","toConsumableArray","console","log","InputLabel","htmlFor","Select","onOpen","inputProps","MenuItem","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","_","String","handleClick","scope","button","input","display","textField","numberAbilityField","dense","menu","paper","padding","card","Character","multiline","rowsMax","Card","newAbilityValues","match","val","on","pred","fn","otherwise","when","chain","getAbilityValue","abilityValue","power","eq","val1","val2","getAbility","Ability","setPower","showLabels","FlashOn_default","Favorite_default","Visibility_default","DirectionsRun_default","Face_default","AccessibilityNewOutlined_default","WbIncandescentOutlined_default","LocalLibrary_default","ShakeNDNDice","diceResults","count","number","i","push","reduce","total","data","SANValue","diffSAN","setDiffSAN","SANFunc","countDice","setCountDice","numberDice","setNumberDice","_React$useState13","_React$useState14","DiceNDNDialog_AlertDialog","SANIdea","_React$useState15","_React$useState16","_React$useState17","_React$useState18","idea","SAN_SANValue","SAN_SANFunc","SAN_SANIdea","marginBottom","tableWrapper","visuallyHidden","border","clip","overflow","top","createData","rows","desc","b","orderBy","headRows","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","Checkbox","indeterminate","checked","sortDirection","TableSortLabel","active","direction","property","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","spacer","flex","actions","EnhancedTableToolbar","defineProperty","Tooltip","IconButton","Delete_default","FilterList_default","EnhancedTable","setOrder","setOrderBy","selected","setSelected","page","setPage","setDense","rowsPerPage","setRowsPerPage","emptyRows","min","Battle_EnhancedTableToolbar","size","newSelecteds","n","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","role","aria-checked","tabIndex","style","colSpan","TablePagination","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","FormControlLabel","control","Switch","FormDialog","File","file","setFile","setChara","e","files","handleChangeFile","func","reader","FileReader","onerror","alert","readAsText","addEventListener","json","onSubmit","maxWidth","List","ListItem","ListItemIcon","Assignment_default","ListItemText","Info_default","OfflineBolt_default","Security_default","Divider","AssignmentReturnedRounded_default","drawer","breakpoints","up","flexShrink","toolbar","mixins","drawerPaper","content","flexGrow","ResponsiveDrawer","container","useTheme","mobileOpen","setMobileOpen","SideBar","CssBaseline","Drawer","anchor","ModalProps","keepMounted","react_router","exact","path","Skill","document","getElementById","Abillity","Battle","require","config","apiKey","process","authDomain","databaseURL","projectId","REACT_APP_PROJECT_ID","storageBucket","messagingSenderId","appId","firebase","Login","userName","setUserName","password","setPassword","auth","currentUser","signOut","then","email","signInWithEmailAndPassword","Main","react","src","logo","alt","Setting","nDiscord","setDisordValue","nDice","setDiceValue","newDiceURL","newDiscordURL","App","react_router_dom","components_NavBar","Home","Boolean","window","location","hostname","store","createStore","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fc52d65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PM_Desine.02fe71ee.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport PalletIcon from '@material-ui/icons/ColorLens';\r\nimport FavoriteIcon from '@material-ui/icons/OfflinePin';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'fixed',\r\n      zIndex: 1,\r\n    },\r\n    navBar:{\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      margin: 'auto',\r\n      width: 500,\r\n      zIndex: 2,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      //flexGrow: 1,\r\n    },\r\n    login: {\r\n      margin: '0 0 0 auto', \r\n    }\r\n  })\r\n);\r\n\r\nconst NavBar: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    \r\n    <AppBar\r\n    className={classes.root}>\r\n    <Toolbar>\r\n      {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n        <MenuIcon />\r\n      </IconButton> */}\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n        Palletmaster\r\n      </Typography>\r\n\r\n      <BottomNavigation value={value} onChange={handleChange} \r\n        className={classes.navBar}>\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/home\" label=\"Pallet\" value=\"pallet\" icon={<PalletIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/login\" label=\"Login\" value=\"login\" icon={<FavoriteIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/setting\" label=\"Setting\" value=\"setting\" icon={<SettingIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/create\" label=\"Create\" value=\"create\" icon={<CreateIcon />} />\r\n      </BottomNavigation>\r\n      \r\n      <Button color=\"inherit\" className={classes.login}>Login</Button>\r\n    </Toolbar>\r\n  </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import { setDiscordUrl, SetDiscordUrlAction } from './SetDiscordUrl';\r\nimport { setDiceUrl, SetDiceUrlAction } from './SetDiceUrl';\r\n\r\ntype Actions\r\n    = SetDiscordUrlAction\r\n    | SetDiceUrlAction;\r\n\r\nexport type State = {    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n    discordUrl: string;\r\n    diceUrl: string;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        discordUrl: \"\",\r\n        diceUrl: \"\",\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_DISCORD_URL_SETTING':\r\n            return {\r\n                ...state,\r\n                discordUrl: action.payload.url,\r\n            };\r\n        case 'SET_DICE_URL_SETTING':\r\n            return{\r\n                ...state,\r\n                diceUrl: action.payload.url,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setDiscordUrl,\r\n    setDiceUrl,\r\n};","import { Action } from 'redux';\r\n\r\nexport type SetDiscordUrlPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiscordUrlAction extends Action {\r\n    type: 'SET_DISCORD_URL_SETTING';\r\n    payload: SetDiscordUrlPayload;\r\n}\r\n\r\nexport const setDiscordUrl = (payload: SetDiscordUrlPayload): SetDiscordUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DISCORD_URL_SETTING',\r\n    };\r\n};","import { Action } from 'redux';\r\n\r\nexport type SetDiceUrlPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiceUrlAction extends Action {\r\n    type: 'SET_DICE_URL_SETTING';\r\n    payload: SetDiceUrlPayload;\r\n}\r\n\r\nexport const setDiceUrl = (payload: SetDiceUrlPayload): SetDiceUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DICE_URL_SETTING',\r\n    };\r\n};","import { setCharacter, SetCharacterAction } from './SetCharacter';\r\nimport { setSkills, SetSkillsAction } from './SetSkills';\r\nimport { setAbilityValues, SetAbilityValuesAction } from './SetAbilityValues';\r\nimport { setCharacterInfos, SetCharacterInfosAction } from './SetCharacterInfos';\r\nimport { setCharacterName, SetCharacterNameAction } from './SetCharacterName';\r\nimport { setHP, SetHPAction } from './SetHP';\r\nimport { setMP, SetMPAction } from './SetMP';\r\nimport { setSAN, SetSANAction } from './SetSAN';\r\nimport { setCharacterBackground, SetCharacterBackgroundAction } from './SetCharacterBackground';\r\n\r\ntype Actions\r\n    = SetCharacterAction | \r\n    SetSkillsAction| \r\n    SetAbilityValuesAction| \r\n    SetCharacterInfosAction| \r\n    SetCharacterNameAction| \r\n    SetHPAction| \r\n    SetMPAction|\r\n    SetSANAction|\r\n    SetCharacterBackgroundAction ;\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\nexport type State = {    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n    character: character;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        character: {\r\n            skills: [],\r\n            characterBackground: \"\",\r\n            abilityValues: {\r\n                STR: 0,\r\n                CON: 0,\r\n                POW: 0,\r\n                DEX: 0,\r\n                APP: 0,\r\n                SIZ: 0,\r\n                INT: 0,\r\n                EDU: 0\r\n            },\r\n            characterInfos: {\r\n                characterName: \"\",\r\n                HP: 0,\r\n                MP: 0,\r\n                SAN: 0,\r\n                damageBonus: \"\",\r\n                job: \"\",\r\n                age: 0,\r\n                sex: \"\",\r\n                height: 0,\r\n                weight: 0,\r\n                origin: \"\"\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_CHARACTER':\r\n            return Object.assign({}, state, {\r\n                character: action.payload.chara,\r\n              });\r\n        case 'SET_SKILLS':\r\n            return{\r\n                ...state,\r\n                character:{\r\n                    ...state.character,\r\n                    skills: action.payload.skills,\r\n                }\r\n            };\r\n        case 'SET_ABILITY_VALUES':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    abilityValues: action.payload.abilityValues,\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_INFOS':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: action.payload.characterInfos,\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_NAME':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        characterName: action.payload.characterName,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_HP':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        HP: action.payload.hp,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_MP':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        MP: action.payload.mp,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_SAN':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        SAN: action.payload.san,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_BACKGROUND':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterBackground: action.payload.background,\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setCharacter,\r\n    setSkills,\r\n    setAbilityValues,\r\n    setCharacterInfos,\r\n    setCharacterName,\r\n    setHP,\r\n    setMP,\r\n    setSAN,\r\n    setCharacterBackground\r\n};","import { Action } from 'redux';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\n\r\nexport type SetCharacterPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    chara: character\r\n};\r\n\r\nexport interface SetCharacterAction extends Action {\r\n    type: 'SET_CHARACTER';\r\n    payload: SetCharacterPayload;\r\n}\r\n\r\nexport const setCharacter = (payload: SetCharacterPayload): SetCharacterAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_CHARACTER',\r\n    };\r\n};","import { Action } from 'redux';\n\ntype skill = {\n    skillName: string,\n    skillValue: number,\n    skillType: string,\n    skillUnique: boolean,\n    skillWorkValue: number,\n    skillInterestValue: number,\n    defaultValue: number\n};\n\nexport type SetSkillsPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    skills: skill[];\n};\n\nexport interface SetSkillsAction extends Action {\n    type: 'SET_SKILLS';\n    payload: SetSkillsPayload;\n}\n\nexport const setSkills = (payload: SetSkillsPayload): SetSkillsAction => {\n    return {\n        payload,\n        type: 'SET_SKILLS',\n    };\n};","import { Action } from 'redux';\n\ntype AbilityValues = {\n    STR: number,\n    CON: number,\n    POW: number,\n    DEX: number,\n    APP: number,\n    SIZ: number,\n    INT: number,\n    EDU: number,\n};\n\nexport type SetAbilityValuesPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    abilityValues: AbilityValues;\n};\n\nexport interface SetAbilityValuesAction extends Action {\n    type: 'SET_ABILITY_VALUES';\n    payload: SetAbilityValuesPayload;\n}\n\nexport const setAbilityValues = (payload: SetAbilityValuesPayload): SetAbilityValuesAction => {\n    return {\n        payload,\n        type: 'SET_ABILITY_VALUES',\n    };\n};","import { Action } from 'redux';\n\ntype CharacterInfos = {\n    characterName: string,\n    HP: number,\n    MP: number,\n    SAN: number,\n    damageBonus: string,\n    job: string,\n    age: number,\n    sex: string,\n    height: number,\n    weight: number,\n    origin: string,\n};\n\nexport type SetCharacterInfosPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    characterInfos: CharacterInfos;\n};\n\nexport interface SetCharacterInfosAction extends Action {\n    type: 'SET_CHARACTER_INFOS';\n    payload: SetCharacterInfosPayload;\n}\n\nexport const setCharacterInfos = (payload: SetCharacterInfosPayload): SetCharacterInfosAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_INFOS',\n    };\n};","import { Action } from 'redux';\n\nexport type SetCharacterNamePayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    characterName: string;\n};\n\nexport interface SetCharacterNameAction extends Action {\n    type: 'SET_CHARACTER_NAME';\n    payload: SetCharacterNamePayload;\n}\n\nexport const setCharacterName = (payload: SetCharacterNamePayload): SetCharacterNameAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_NAME',\n    };\n};","import { Action } from 'redux';\n\nexport type SetHPPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    hp: number;\n};\n\nexport interface SetHPAction extends Action {\n    type: 'SET_HP';\n    payload: SetHPPayload;\n}\n\nexport const setHP = (payload: SetHPPayload): SetHPAction => {\n    return {\n        payload,\n        type: 'SET_HP',\n    };\n};","import { Action } from 'redux';\n\nexport type SetMPPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    mp: number;\n};\n\nexport interface SetMPAction extends Action {\n    type: 'SET_MP';\n    payload: SetMPPayload;\n}\n\nexport const setMP = (payload: SetMPPayload): SetMPAction => {\n    return {\n        payload,\n        type: 'SET_MP',\n    };\n};","import { Action } from 'redux';\n\nexport type SetSANPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    san: number;\n};\n\nexport interface SetSANAction extends Action {\n    type: 'SET_SAN';\n    payload: SetSANPayload;\n}\n\nexport const setSAN = (payload: SetSANPayload): SetSANAction => {\n    return {\n        payload,\n        type: 'SET_SAN',\n    };\n};","import { Action } from 'redux';\n\nexport type SetCharacterBackgroundPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    background: string;\n};\n\nexport interface SetCharacterBackgroundAction extends Action {\n    type: 'SET_CHARACTER_BACKGROUND';\n    payload: SetCharacterBackgroundPayload;\n}\n\nexport const setCharacterBackground = (payload: SetCharacterBackgroundPayload): SetCharacterBackgroundAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_BACKGROUND',\n    };\n};","import { combineReducers } from 'redux';\r\nimport * as Settings from './settings';\r\nimport * as Characters from './characters';\r\n\r\nexport type RootState = {\r\n    setting: Settings.State;\r\n    character: Characters.State;\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    setting: Settings.reducer,\r\n    character: Characters.reducer,\r\n});\r\n\r\nexport const actionCreator = {\r\n    setting: Settings.actionCreator,\r\n    character: Characters.actionCreator,\r\n};","interface Item {\r\n  name: string;\r\n  url: string;\r\n  user: string;\r\n  value: string;\r\n}\r\n\r\ninterface Result {\r\n  ok: string;\r\n  result: string;\r\n}\r\n\r\nexport function sendBCDice(item: Item) \r\n{\r\n  sendDice(sendDiscordText, item);\r\n}\r\n\r\nfunction ShakeDice(item: Item): Result\r\n{\r\n  let result: Result = {\r\n    ok :\"\",\r\n    result : \"\",\r\n  };\r\n  let _1d100Value: number = Math.round(Math.random() * 100) + 1;\r\n  if(_1d100Value <= 5){\r\n    result.ok = \"クリティカル\"\r\n  }else if(_1d100Value <= +item.value){\r\n    result.ok = \"成功\"\r\n  }else{\r\n    result.ok = \"失敗\"\r\n  }\r\n\r\n  result.result = \"技能:\" + item.name + \" \" + _1d100Value\r\n   + \" <= \" + item.value;\r\n\r\n   return result;\r\n}\r\n\r\nfunction sendDiscordText(result: Result, item: Item) {\r\n  if (result.ok) {\r\n    const webhook = require(\"webhook-discord\");\r\n\r\n    const Hook = new webhook.Webhook(item.url);\r\n    Hook.info(item.user, item.name + \" \" + result.result);\r\n  }\r\n}\r\n\r\nasync function sendDice(func: (json: Result, item: Item) => void, item: Item) {\r\n  const url =\r\n    \"https://www.taruki.com/bcdice-api\" +\r\n    \"/v1/diceroll?system=Cthulhu&command=\" +\r\n    \"CCB<=\" +\r\n    item.value; // リクエスト先URL\r\n\r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then(response => {\r\n      let json = response;\r\n      const jsonLog = JSON.stringify(json);\r\n      if (response.ok) {\r\n        return func(json, item);\r\n      }\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nexport function goodbye(name: string) {\r\n  return `Goodbye ${name}`;\r\n}\r\n\r\nexport default ShakeDice;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ShakeDice from '../modules/sendDiscord';\r\n\r\ninterface Item {\r\n    name: string;\r\n    url: string;\r\n    user: string;\r\n    value: string;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    item: Item;\r\n    setOpen(open :boolean) : void;\r\n};\r\n\r\nexport default function AlertDialog(props: Props) {\r\n  let result :Result = {\r\n    ok: \"\",\r\n    result: \"\",\r\n  }\r\n  if(props.open){\r\n    result = ShakeDice(props.item);\r\n  }\r\n\r\n  function handleClickOpen() {\r\n    props.setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Dice Result\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.ok }\r\n          </DialogContentText><br />\r\n          \r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.result }\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport clsx from 'clsx';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { setSkills } from '../states/characters/SetSkills';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '75%',\r\n      margin: 'auto',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 500,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    fab: {\r\n      marginLeft: theme.spacing(5),\r\n      margin: theme.spacing(1),\r\n    },\r\n    chip: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n  \r\nfunction createData(name: string, calories: number, fat: number, carbs: number, protein: number) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\ntype Props = {\r\n    skills: skill[];\r\n    setSkills(skills: skill[]) : void;\r\n};\r\n\r\nexport default function SimpleTable(props: Props) {\r\n  const classes = useStyles();\r\n  const [category, setCategory] = React.useState<string>(\"unique\");\r\n  const [skill, setSkill] = React.useState<string>(\"\");\r\n  const [value, setValue] = React.useState<number>(0);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const handleClick = (skillName: string ): void =>\r\n  {\r\n    const skill: skill | undefined = props.skills.find(s =>(s.skillName === skillName));\r\n    if(skill == null) return;\r\n    setItems(skillName, String(skill.skillValue));\r\n  }\r\n\r\n  function handleChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n    setCategory(event.target.value as string);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  const setSkills = (skill: string, value: number): void =>\r\n  {\r\n    const addSkill : skill = {\r\n      skillName: \"\",\r\n      skillValue: 0,\r\n      skillType: \"追加\",\r\n      skillUnique: true,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: 0\r\n  };\r\n  \r\n    const newSkills = JSON.parse(JSON.stringify(props.skills));\r\n\r\n    const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n      undefined : \r\n      newSkills.find((s: { skillName: string; }) => s.skillName === skill);\r\n\r\n    if(cSkill == null){\r\n      addSkill.skillName = skill;\r\n      addSkill.skillValue = value;\r\n      props.setSkills([...props.skills, addSkill]);\r\n    }else{\r\n      console.log(\"UPDATE\");\r\n      cSkill.skillValue = value;\r\n      props.setSkills(newSkills);\r\n    }\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    <Paper className={clsx(classes.root)}>\r\n      <br />\r\n      <Chip color=\"primary\" label=\"Skill\" />        \r\n      <TextField\r\n        id=\"san\"\r\n        label=\"Skill\"\r\n        type=\"text\"\r\n        defaultValue={skill}\r\n        className={classes.numberInfoField}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setSkill(event.target.value)}}\r\n        placeholder=\"Skill\"\r\n        margin=\"normal\"\r\n        />      \r\n        <Chip color=\"primary\" label=\"Value\" className={classes.chip}　/>    \r\n        <TextField\r\n          id=\"san\"\r\n          label=\"Value\"\r\n          type=\"number\"\r\n          defaultValue={value}\r\n          className={classes.numberInfoField}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setValue(+event.target.value)}}\r\n          placeholder=\"Value\"\r\n          margin=\"normal\"\r\n          />\r\n\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <AddIcon onClick={() => {setSkills(skill, value)}}/>\r\n        </Fab>\r\n      <br />\r\n      <br />\r\n\r\n      <InputLabel htmlFor=\"demo-controlled-open-select\">Category</InputLabel>\r\n      <Select\r\n        open={open}\r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        value={category}\r\n        onChange={handleChange}\r\n        inputProps={{\r\n          name: 'category',\r\n          id: 'demo-controlled-open-select',\r\n        }}\r\n      >\r\n        <MenuItem value=\"unique\">\r\n          <em>Unique</em>\r\n        </MenuItem>\r\n        <MenuItem value={\"戦闘\"}>Fight</MenuItem>\r\n        <MenuItem value={\"探索\"}>Search</MenuItem>\r\n        <MenuItem value={\"知識\"}>Wisdom</MenuItem>\r\n        <MenuItem value={\"行動\"}>Act</MenuItem>\r\n        <MenuItem value={\"交渉\"}>Negotiation</MenuItem>\r\n        <MenuItem value={\"all\"}>ALL</MenuItem>\r\n      </Select>\r\n      <br />\r\n      <br />\r\n    </Paper>\r\n\r\n    <Paper className={classes.root}>\r\n\r\n\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Skill</TableCell>\r\n            <TableCell align=\"right\">Value</TableCell>\r\n            <TableCell align=\"right\">Type</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.skills.map(row => {\r\n            if(category === \"unique\" && !row.skillUnique){ return };\r\n            if(category !== \"unique\" && category !== \"all\" && row.skillType !== category){ return };\r\n\r\n            return <TableRow key={row.skillName} \r\n              onClick={_ => {\r\n                console.log(\"onclick\");\r\n                handleClick(row.skillName)\r\n                setOpenDialog(true);}\r\n              }>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.skillName}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.skillValue}</TableCell>\r\n              <TableCell align=\"right\">{row.skillType}</TableCell>\r\n            </TableRow>\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <DiceDialog open={openDialog} setOpen={setOpenDialog} item={item} />\r\n    </Paper>\r\n    </div>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Skill from '../pages/Skill';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return { \r\n        skills: state.character.character.skills,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSkills: (skills: skill[]) => {\r\n            dispatch(actionCreator.character.setSkills({skills}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Skill);","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 360,\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: 78,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: 600,\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: 500,\r\n    }\r\n  }),\r\n);\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype Props = {\r\n  characterInfos: characterInfo;\r\n  abilityValues: abilityValue;\r\n  characterBackground: string | undefined;\r\n  setCharacterName: (characterName: string) => void;\r\n  setHP: (hp: number) => void;\r\n  setMP: (mp: number) => void;\r\n  setSAN: (san: number) => void;\r\n  setCharacterBackground: (background: string) => void;\r\n  setCharacterInfos: (characterInfos: characterInfo) => void;\r\n  setAbilityValues: (abilityValues: abilityValue) => void;\r\n};\r\n\r\nconst Character: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Infomation</h2>\r\n\r\n      <TextField\r\n        id=\"characterName\"\r\n        label=\"Character Name\"\r\n        defaultValue={props.characterInfos.characterName}\r\n        className={clsx(classes.textField, classes.dense)}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {props.setCharacterName(event.target.value);}}\r\n        margin=\"dense\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        id=\"background\"\r\n        label=\"Background\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        defaultValue={props.characterBackground}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setCharacterBackground(event.target.value)}}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        physical value\r\n        <br />\r\n        \r\n        <TextField\r\n        id=\"hp\"\r\n        label=\"HP\"\r\n        type=\"number\"\r\n        defaultValue={props.characterInfos.HP}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setHP(+event.target.value)}}\r\n        placeholder=\"HP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"mp\"\r\n        label=\"MP\"\r\n        type=\"number\"\r\n        defaultValue={props.characterInfos.MP}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setMP(+event.target.value)}}\r\n        placeholder=\"MP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"san\"\r\n        label=\"SAN\"\r\n        type=\"number\"\r\n        defaultValue={props.characterInfos.SAN}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setSAN(+event.target.value)}}\r\n        placeholder=\"SAN\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n      <br />\r\n\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        ability value\r\n        <br />\r\n        <TextField\r\n        id=\"str\"\r\n        label=\"STR\"\r\n        type=\"number\"\r\n        defaultValue={props.abilityValues.STR}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={\r\n          (event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.STR = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);\r\n        }}\r\n        placeholder=\"STR\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"con\"\r\n        label=\"CON\"\r\n        type=\"number\"\r\n        defaultValue={props.abilityValues.CON}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={\r\n          (event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.CON = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"CON\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"pow\"\r\n        label=\"POW\"\r\n        type=\"number\"\r\n        defaultValue={props.abilityValues.POW}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.POW = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"POW\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"dex\"\r\n        label=\"DEX\"\r\n        type=\"number\"\r\n        defaultValue={props.abilityValues.DEX}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.DEX = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"DEX\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n\r\n        <TextField\r\n        id=\"app\"\r\n        label=\"APP\"\r\n        type=\"number\"\r\n        defaultValue={props.abilityValues.APP}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.APP = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"APP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"siz\"\r\n        label=\"SIZ\"\r\n        type=\"number\"\r\n        defaultValue={props.abilityValues.SIZ}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.SIZ = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"SIZ\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"int\"\r\n        label=\"INT\"\r\n        type=\"number\"\r\n        defaultValue={props.abilityValues.INT}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.INT = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"INT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"edu\"\r\n        label=\"EDU\"\r\n        type=\"number\"\r\n        defaultValue={props.abilityValues.EDU}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.EDU = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"EDU\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n\r\n      <br />\r\n    </Paper>\r\n  );\r\n}\r\nexport default Character;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Character from '../pages/Character';\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state.character);\r\n    return {\r\n        characterInfos: state.character.character.characterInfos,\r\n        abilityValues: state.character.character.abilityValues,\r\n        characterBackground: state.character.character.characterBackground,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacterName: (characterName: string) => {\r\n            dispatch(actionCreator.character.setCharacterName({characterName}));\r\n        },\r\n        setHP: (hp: number) => {\r\n            dispatch(actionCreator.character.setHP({hp}));\r\n        },\r\n        setMP: (mp: number) => {\r\n            dispatch(actionCreator.character.setMP({mp}));\r\n        },\r\n        setSAN: (san: number) => {\r\n            dispatch(actionCreator.character.setSAN({san}));\r\n        },\r\n        setCharacterBackground: (background: string) => {\r\n            dispatch(actionCreator.character.setCharacterBackground({background}));\r\n        },\r\n        setCharacterInfos: (characterInfos: characterInfo) => {\r\n            dispatch(actionCreator.character.setCharacterInfos({characterInfos}));\r\n        },\r\n        setAbilityValues: (abilityValues: abilityValue) => {\r\n            dispatch(actionCreator.character.setAbilityValues({abilityValues}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Character);","type abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n  };\r\n\r\nfunction getAbilityValue(item: string, abilityValue: abilityValue, power: number) : string{\r\n\r\n    return String(getAbility(item, abilityValue) * power);\r\n};\r\n\r\nfunction getAbility(item: string, abilityValue: abilityValue) : number{\r\n    const eq = <T>(val1: T) => (val2: T) => val1 === val2;\r\n        \r\n    const result = when(item)\r\n    .on(eq(\"STR\"), () => abilityValue.STR)\r\n    .on(eq(\"CON\"), () => abilityValue.CON)\r\n    .on(eq(\"POW\"), () => abilityValue.POW)\r\n    .on(eq(\"DEX\"), () => abilityValue.DEX)\r\n    .on(eq(\"APP\"), () => abilityValue.APP)\r\n    .on(eq(\"SIZ\"), () => abilityValue.SIZ)\r\n    .on(eq(\"INT\"), () => abilityValue.INT)\r\n    .on(eq(\"EDU\"), () => abilityValue.EDU)\r\n    .otherwise(() => -1)\r\n\r\n    return result;\r\n};\r\n\r\ntype ChainedWhen<T, R> = {\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) => ChainedWhen<T, R | A>;\r\n    otherwise: <A>(fn: () => A) => R | A;\r\n};\r\n\r\nconst match = <T, R>(val: any): ChainedWhen<T, R> => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) => match<T, R | A>(val),\r\n    otherwise: <A>(fn: () => A): A | R => val\r\n});\r\n\r\nconst chain = <T, R>(val: T): ChainedWhen<T, R> => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) =>\r\n        pred(val) ? match(fn()) : chain<T, A | R>(val),\r\n    otherwise: <A>(fn: () => A) => fn()\r\n});\r\n\r\nconst when = <T>(val: T) => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) =>\r\n        pred(val) ? match<T, A>(fn()) : chain<T, A>(val)\r\n});\r\n\r\nexport default getAbilityValue;","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport STRIcon from '@material-ui/icons/FlashOn';\r\nimport CONIcon from '@material-ui/icons/Favorite';\r\nimport POWIcon from '@material-ui/icons/Visibility';\r\nimport DEXIcon from '@material-ui/icons/DirectionsRun';\r\nimport APPIcon from '@material-ui/icons/Face';\r\nimport SIZIcon from '@material-ui/icons/AccessibilityNewOutlined';\r\nimport INTIcon from '@material-ui/icons/WbIncandescentOutlined';\r\nimport EDUIcon from '@material-ui/icons/LocalLibrary';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Paper } from '@material-ui/core/';\r\n\r\nimport getAbilityValue from '../modules/getAbilityValue';\r\nimport DiceDialog from '../components/DiceDialog';\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ninterface Item {\r\n  name: string;\r\n  url: string;\r\n  user: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 500,\r\n      margin: \"auto\"\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: 78,\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      width:600,\r\n      padding: theme.spacing(3, 2),\r\n    }\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  abilityValues: abilityValue;\r\n};\r\n\r\nconst Ability: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"STR\");\r\n  const [power, setPower] = React.useState(5);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Ability Role</h2>\r\n\r\n      <Paper className = {classes.paper}>\r\n      ability\r\n      <BottomNavigation\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction value={\"STR\"} label=\"STR\" icon={<STRIcon />} />\r\n        <BottomNavigationAction value={\"CON\"} label=\"CON\" icon={<CONIcon />} />\r\n        <BottomNavigationAction value={\"POW\"} label=\"POW\" icon={<POWIcon />} />\r\n        <BottomNavigationAction value={\"DEX\"} label=\"DEX\" icon={<DEXIcon />} />\r\n      </BottomNavigation>\r\n      <BottomNavigation\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction value={\"APP\"} label=\"APP\" icon={<APPIcon />} />\r\n        <BottomNavigationAction value={\"SIZ\"} label=\"SIZ\" icon={<SIZIcon />} />\r\n        <BottomNavigationAction value={\"INT\"} label=\"INT\" icon={<INTIcon />} />\r\n        <BottomNavigationAction value={\"EDU\"} label=\"EDU\" icon={<EDUIcon />} />\r\n      </BottomNavigation>\r\n\r\n      <TextField\r\n        id=\"power\"\r\n        label=\"Power\"\r\n        type=\"number\"\r\n        defaultValue={power}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={\r\n          (event: React.ChangeEvent<HTMLInputElement>) => {setPower(+event.target.value);}}\r\n        placeholder=\"Power\"\r\n        margin=\"normal\"\r\n        />\r\n        </Paper>\r\n\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{\r\n          setItems(value, getAbilityValue(value, props.abilityValues, power));\r\n          setOpen(true);\r\n          }}>\r\n          Send\r\n        </Button>\r\n\r\n        <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n    </div>\r\n  );\r\n}\r\nexport default Ability;","import { connect } from 'react-redux';\r\n\r\nimport { RootState  } from '../states';\r\nimport Ability from '../pages/Ability';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state.character);\r\n    return {\r\n        abilityValues: state.character.character.abilityValues,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Ability);","interface ItemNDN {\r\n  count: number;\r\n  number: number;\r\n}\r\n\r\ninterface Result {\r\n  ok: string;\r\n  result: string;\r\n}\r\n\r\nfunction ShakeNDNDice(item: ItemNDN): Result\r\n{\r\n  let diceResults: number[] = [];\r\n\r\n  let result: Result = {\r\n    ok : String(item.count) + \"D\" + String(item.number),\r\n    result : \"\",\r\n  };\r\n\r\n  for(var i = 0; i < item.count ; i++){\r\n    diceResults.push(Math.round(Math.random() * item.number) + 1);\r\n  }\r\n\r\n  result.result = String(diceResults.reduce(function(total, data){return total + data}));\r\n\r\n  return result;\r\n}\r\n\r\nexport default ShakeNDNDice;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\n\r\ninterface ItemNDN {\r\n  count: number;\r\n  number: number;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    item: ItemNDN;\r\n    setOpen(open :boolean) : void;\r\n};\r\n\r\nexport default function AlertDialog(props: Props) {\r\n  let result :Result = {\r\n    ok: \"\",\r\n    result: \"\",\r\n  }\r\n  if(props.open){\r\n    result = ShakeNDNDice(props.item);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Dice Result\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.ok }\r\n          </DialogContentText><br />\r\n          \r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.result }\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport DiceNDNDialog from '../components/DiceNDNDialog';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: 600,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(10),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    fab: {\r\n      marginLeft: theme.spacing(5),\r\n      margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype Props = {\r\n  skills: skill[],\r\n  SAN: number,\r\n  characterName: string,\r\n  setSAN: (san: number) => void,\r\n};\r\n\r\ntype PropsSAN = {\r\n  SAN: number,\r\n  characterName: string,\r\n  setSAN: (san: number) => void,\r\n};\r\n\r\ntype PropsIdea = {\r\n  skills: skill[],\r\n};\r\n\r\nconst SANValue: React.SFC<PropsSAN> = (props: PropsSAN) => {\r\n  const classes = useStyles();\r\n  const [diffSAN, setDiffSAN] = React.useState(1);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <Chip color=\"primary\" label=\"SAN\" /> {props.SAN}        \r\n      <TextField\r\n        id=\"san\"\r\n        label=\"SAN\"\r\n        type=\"number\"\r\n        defaultValue={diffSAN}\r\n        className={classes.numberInfoField}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setDiffSAN(+event.target.value)}}\r\n        placeholder=\"SAN\"\r\n        margin=\"normal\"\r\n        />\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <AddIcon onClick={() => {props.setSAN(props.SAN + diffSAN)}}/>\r\n        </Fab>\r\n\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{\r\n          setItems(\"SANチェック\", String(props.SAN));\r\n          setOpen(true);\r\n          }}>\r\n          SAN Check\r\n        </Button>\r\n\r\n        <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SANFunc: React.SFC<PropsSAN> = (props: PropsSAN) => {\r\n  const classes = useStyles();\r\n  const [countDice, setCountDice] = React.useState(1);\r\n  const [numberDice, setNumberDice] = React.useState(2);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    count: 0,\r\n    number: 0,\r\n  });\r\n\r\n  const setItems = (cou: number, num: number): void =>\r\n  {\r\n    setItem({\r\n      count: cou,\r\n      number: num,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Paper className = {clsx(classes.paper, classes.dense)}>       \r\n    <TextField\r\n      id=\"san\"\r\n      label=\"Count\"\r\n      type=\"number\"\r\n      defaultValue={countDice}\r\n      className={classes.numberInfoField}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setCountDice(+event.target.value)}}\r\n      placeholder=\"SAN\"\r\n      margin=\"normal\"\r\n    />       \r\n    <TextField\r\n      id=\"san\"\r\n      label=\"Number\"\r\n      type=\"number\"\r\n      defaultValue={numberDice}\r\n      className={classes.numberInfoField}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setNumberDice(+event.target.value)}}\r\n      placeholder=\"SAN\"\r\n      margin=\"normal\"\r\n    />\r\n\r\n<br />\r\n      <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n      onClick = {():void =>{\r\n        setItems(countDice, numberDice);\r\n        setOpen(true);\r\n        }}>\r\n        Judge\r\n      </Button>\r\n\r\n    <DiceNDNDialog open={open} setOpen={setOpen} item={item} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SANIdea: React.SFC<PropsIdea> = (props: PropsIdea) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Paper className = {clsx(classes.paper, classes.dense)}>      \r\n\r\n    <br />\r\n    <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n    onClick = {():void =>{\r\n      let idea: skill | undefined = props.skills.find(s => s.skillName === 'アイデア');\r\n      if(idea == null) return;\r\n\r\n      setItems(\"アイデア\", String(idea.skillValue));\r\n      setOpen(true);\r\n      }}>\r\n      SAN Check\r\n    </Button>\r\n\r\n    <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SAN: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <SANValue SAN={props.SAN} characterName={props.characterName} setSAN={props.setSAN}/>\r\n      <SANFunc SAN={props.SAN} characterName={props.characterName} setSAN={props.setSAN} />\r\n      <SANIdea skills={props.skills}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SAN;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport SAN from '../pages/SAN';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        SAN: state.character.character.characterInfos.SAN,\r\n        characterName: state.character.character.characterInfos.characterName, \r\n        skills: state.character.character.skills,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSAN: (san: number) => {\r\n            dispatch(actionCreator.character.setSAN({san}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SAN);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    tableWrapper: {\r\n      overflowX: 'auto',\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface Data {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\nfunction createData(\r\n  name: string,\r\n  value: number,\r\n): Data {\r\n  return { name, value };\r\n}\r\n\r\nconst rows = [\r\n  createData('Marshmallow', 318),\r\n  createData('Nougat', 360),\r\n  createData('Oreo', 437),\r\n];\r\n\r\nfunction desc<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort<T>(array: T[], cmp: (a: T, b: T) => number) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getSorting<K extends keyof any>(\r\n  order: Order,\r\n  orderBy: K,\r\n): (a: { [key in K]: number | string }, b: { [key in K]: number | string }) => number {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\ninterface HeadRow {\r\n  disablePadding: boolean;\r\n  id: keyof Data;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headRows: HeadRow[] = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Skill Name' },\r\n  { id: 'value', numeric: true, disablePadding: false, label: 'Skill Value' },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  classes: ReturnType<typeof useStyles>;\r\n  numSelected: number;\r\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n  rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headRows.map(row => (\r\n          <TableCell\r\n            key={row.id}\r\n            align={row.numeric ? 'right' : 'left'}\r\n            padding={row.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === row.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === row.id}\r\n              direction={order}\r\n              onClick={createSortHandler(row.id)}\r\n            >\r\n              {row.label}\r\n              {orderBy === row.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n          }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n          },\r\n    spacer: {\r\n      flex: '1 1 100%',\r\n    },\r\n    actions: {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    title: {\r\n      flex: '0 0 auto',\r\n    },\r\n  }),\r\n);\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  numSelected: number;\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Skill\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('value');\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  function handleRequestSort(event: React.MouseEvent<unknown>, property: keyof Data) {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  }\r\n\r\n  function handleSelectAllClick(event: React.ChangeEvent<HTMLInputElement>) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }\r\n\r\n  function handleClick(event: React.MouseEvent<unknown>, name: string) {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  }\r\n\r\n  function handleChangePage(event: unknown, newPage: number) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event: React.ChangeEvent<HTMLInputElement>) {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  }\r\n\r\n  function handleChangeDense(event: React.ChangeEvent<HTMLInputElement>) {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.value}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'previous page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'next page',\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport onSubmit from '../modules/importPMJ.js';\r\nimport { Redirect } from 'react-router';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    setOpen(open :boolean) : void;\r\n    setCharacter(character: character) : void;\r\n};\r\n\r\nexport default function FormDialog(props: Props) {\r\n  const [file, setFile] = React.useState(new File([],\"\"));\r\n\r\n  function handleChangeFile(e: any) {\r\n    const target: HTMLInputElement = e.target as HTMLInputElement;\r\n    if(target == null) return;\r\n    if(target.files == null) return;\r\n\r\n    const file: File| null = target.files.item(0);\r\n    if(file == null) return;\r\n    setFile(file);\r\n  }\r\n\r\n  function setChara(character: any){\r\n    let chara: character = {\r\n        skills: character.skills,\r\n        characterBackground: character.characterBackground,\r\n        abilityValues: character.abilityValues,\r\n        characterInfos: character.characterInfos\r\n    };\r\n        \r\n    console.log(chara);\r\n    props.setCharacter(chara);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Import Character</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Import .pmj file\r\n          </DialogContentText>\r\n            <input type=\"file\" onChange={(e) => \r\n            {handleChangeFile(e)}\r\n        }/>\r\n\r\n            <button onClick={() => {\r\n                onSubmit(setChara, file);\r\n                handleClose();\r\n                }}>set</button>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","\r\nexport default function onSubmit(func, item) {\r\n    if(item == null) return;\r\n    let reader = new FileReader();\r\n\r\n    // CSVファイル以外は処理を止める\r\n    if(!item.name.match(\".json$\") && !item.name.match(\".pmj$\")) \r\n    {\r\n        alert('jsonファイル、またはchpファイルを選択してください');\r\n        return;\r\n    }\r\n\r\n        // ファイル読み取りに失敗したとき\r\n    reader.onerror = function() {\r\n        alert('ファイル読み取りに失敗しました')\r\n    }\r\n        //読み込んだファイルの中身を取得する\r\n    reader.readAsText( item , 'Shift_JIS');\r\n\r\n    // PMJファイル以外は処理を止める\r\n    if(!item.name.match(\".json$\") && !item.name.match(\".pmj$\")) {\r\n        alert('jsonファイル、またはchpファイルを選択してください');\r\n        return;\r\n    }\r\n    //ファイルの中身を取得後に処理を行う\r\n    if( item != null ){\r\n        reader.addEventListener( 'load', function() {\r\n            let json = JSON.parse(reader.result);\r\n            func(json);\r\n        })\r\n    }\r\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SkillIcon from '@material-ui/icons/Assignment';\nimport CharacterIcon from '@material-ui/icons/Info';\nimport AbillityIcon from '@material-ui/icons/Face';\nimport SANIcon from '@material-ui/icons/OfflineBolt';\nimport BattleIcon from '@material-ui/icons/Security';\nimport ImportIcon from '@material-ui/icons/AssignmentReturnedRounded';\n\nimport ImportPMJ from './ImportPMJDialog';\nimport Divider from '@material-ui/core/Divider';\n\ntype Props = {\n  setCharacter: (character: any) => void,\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nexport default function SimpleList(props: Props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem button \n          component={Link}\n          to=\"/home/skill\">\n          <ListItemIcon>\n            <SkillIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Skill\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/character\">\n          <ListItemIcon>\n            <CharacterIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Character\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/abillity\">\n          <ListItemIcon>\n            <AbillityIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Abillity\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/san\">\n          <ListItemIcon>\n            <SANIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"SAN\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/battle\">\n          <ListItemIcon>\n            <BattleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Battle\" />\n        </ListItem>\n\n        <Divider />\n\n        <ListItem button\n          onClick={()=>{\n            setOpen(true);\n          }}>\n          <ListItemIcon>\n            <ImportIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </ListItem>\n      </List>\n\n      <ImportPMJ open={open} setOpen={setOpen} setCharacter={props.setCharacter}/>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport SideBar from '../components/SideBar';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\n//空でも良いので、mapStateToPropsを記述\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacter: (chara: character) => {\r\n            dispatch(actionCreator.character.setCharacter({chara}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps, //ここでconnectするのも忘れない\r\n    mapDispatchToProps\r\n)(SideBar);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nimport Skill from '../containers/Skill';\r\nimport Character from '../containers/Character';\r\nimport Abillity from '../containers/Ability';\r\nimport SAN from '../containers/SAN';\r\nimport Battle from './Battle';\r\nimport SideBar from '../containers/SideBar';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'relative',\r\n      display: 'flex',\r\n      zIndex: 0,\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ResponsiveDrawerProps {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  container?: Element;\r\n}\r\n\r\nexport default function ResponsiveDrawer(props: ResponsiveDrawerProps) {\r\n  const { container } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  function handleDrawerToggle() {\r\n    setMobileOpen(!mobileOpen);\r\n  }\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      {/* <Divider /> */}\r\n      <SideBar />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        \r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Drawer\r\n            container={container}\r\n            variant=\"permanent\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />   \r\n          <Switch>     \r\n            <Route exact path='/home/skill' component={Skill} container={document.getElementById(\"app-main\")}/>\r\n            <Route path='/home/character' component={Character} />\r\n            <Route path='/home/abillity' component={Abillity} />\r\n            <Route path='/home/san' component={SAN} />\r\n            <Route path='/home/battle' component={Battle} />\r\n          </Switch>  \r\n      </main>\r\n    </div>\r\n  );\r\n}","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth'\r\nrequire('dotenv').config();\r\n\r\nconst config = {\r\n    apiKey:  process.env.REACT_APP_API_KEY,\r\n    authDomain:  process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL:  process.env.REACT_APP_DATABASE_URL,\r\n    projectId:  process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId:  process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport default firebase","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport firebase from '../modules/firebase'\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      width:450,\r\n      padding: theme.spacing(3, 2),\r\n    }\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setUserName: (url: string) => void;\r\n  setPassword: (url: string) => void;\r\n};\r\n\r\nconst Login: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = React.useState(props.discordUrl);\r\n  const [password, setPassword] = React.useState(props.diceUrl);\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  const login = (email: string, password: string) => {\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then(\r\n      ()=>{setValue('login');}\r\n    );\r\n  }\r\n\r\n  const logout = ():void =>{\r\n    firebase.auth().signOut().then(\r\n      ()=>{setValue('logout');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id='login'>\r\n    {(() => {\r\n        const user = firebase.auth().currentUser;\r\n        if (user) {\r\n            return <div>\r\n              { value }\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n              onClick = {():void =>{logout()}}>\r\n                Logout\r\n              </Button>\r\n            </div>;\r\n        }\r\n        return <div>\r\n        <h2>Login</h2>\r\n        <Paper className = {classes.paper}>\r\n        <TextField\r\n          id=\"userName\"\r\n          label=\"User Name\"\r\n          defaultValue={props.diceUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setUserName(event.target.value);}}\r\n          margin=\"dense\"\r\n        /><br />\r\n        <TextField\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          defaultValue={props.discordUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setPassword(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{login(userName, password)}}>\r\n          Login\r\n        </Button>\r\n        </Paper>\r\n        </div>;\r\n    })()}\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import * as React from 'react';\r\nimport logo from '../PM_Desine.png';\r\n\r\nconst Main: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n        <img\r\n        src={logo}\r\n        alt=\"\" width=\"500\" height=\"400\"\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 360,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 360,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      width:450,\r\n      padding: theme.spacing(3, 2),\r\n    }\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setDiceUrl: (url: string) => void;\r\n  setDiscordUrl: (url: string) => void;\r\n};\r\n\r\nconst Setting: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [nDiscord, setDisordValue] = React.useState(props.discordUrl);\r\n  const [nDice, setDiceValue] = React.useState(props.diceUrl);\r\n\r\n  const setUrl = (newDiceURL: string, newDiscordURL: string):void => {\r\n    props.setDiceUrl(newDiceURL);\r\n    props.setDiscordUrl(newDiscordURL);\r\n    console.log(newDiceURL);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Setting</h2>\r\n      <Paper className = {classes.paper}>\r\n        <TextField\r\n          id=\"diceURL\"\r\n          label=\"Dice API URL\"\r\n          defaultValue={props.diceUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setDiceValue(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <TextField\r\n          id=\"discordURL\"\r\n          label=\"Discord URL\"\r\n          defaultValue={props.discordUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setDisordValue(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{setUrl(nDice, nDiscord)}}>\r\n          SET\r\n        </Button>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Setting;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Setting from '../pages/Setting';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        discordUrl: state.setting.discordUrl,\r\n        diceUrl: state.setting.diceUrl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setDiceUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiceUrl({url}));\r\n        },\r\n        setDiscordUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiscordUrl({url}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Setting);","import * as React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Main from './pages/Main';\nimport Setting from './containers/Setting';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <header className=\"App-header\">\n          <NavBar />\n        </header>\n\n        <div className='App-main' id='app-main'>\n          <Route exact path='/' component={Main}/>\n          \n          <Route path='/home' component={Home} container={document.getElementById(\"app-main\")}/>\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/setting' component={Setting} />\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport './index.css';\n\nimport App from './App';\nimport { rootReducer } from './states';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App />\n    </Provider>,\n     document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}