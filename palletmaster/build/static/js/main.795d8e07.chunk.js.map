{"version":3,"sources":["components/NavBar.tsx","pages/Skill.tsx","pages/Character.tsx","modules/firebase.ts","pages/Abillity.tsx","pages/SAN.tsx","pages/Battle.tsx","components/SideBar.tsx","pages/Home.tsx","pages/Login.tsx","pages/Main.tsx","states/settings/index.ts","states/settings/SetDiscordUrl.ts","states/settings/SetDiceUrl.ts","states/index.ts","states/characters/index.ts","pages/Setting.tsx","containers/Setting.tsx","App.tsx","serviceWorker.ts","index.tsx","PM_Desine.png"],"names":["useStyles","makeStyles","theme","createStyles","root","position","zIndex","navBar","left","right","margin","width","menuButton","marginRight","spacing","title","login","NavBar","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","value","setValue","react_default","a","createElement","AppBar","className","Toolbar","Typography","variant","BottomNavigation","onChange","event","newValue","BottomNavigationAction","component","Link","to","label","icon","ColorLens_default","OfflinePin_default","Settings_default","Create_default","Button","color","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","visuallyHidden","border","clip","height","overflow","padding","top","createData","name","rows","desc","b","orderBy","headRows","id","numeric","disablePadding","EnhancedTableHead","props","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","aria-label","map","row","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","spacer","flex","actions","EnhancedTableToolbar","clsx","defineProperty","Tooltip","IconButton","Delete_default","FilterList_default","EnhancedTable","setOrder","_React$useState3","_React$useState4","setOrderBy","_React$useState5","_React$useState6","selected","setSelected","_React$useState7","_React$useState8","page","setPage","_React$useState9","_React$useState10","dense","setDense","_React$useState11","_React$useState12","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","Skill_EnhancedTableToolbar","Table","aria-labelledby","size","target","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","isItemSelected","indexOf","labelId","concat","hover","selectedIndex","newSelected","handleClick","role","aria-checked","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","FormControlLabel","control","Switch","button","input","display","textField","marginLeft","numberField","menu","Character","console","log","character","TextField","defaultValue","characterInfos","characterName","setCharacterName","HP","setHP","placeholder","MP","setMP","SAN","setSAN","abilityValues","STR","newAbilityValues","setAbilityValues","CON","POW","DEX","APP","SIZ","INT","EDU","multiline","rowsMax","characterBackground","setCharacterBackground","require","config","apiKey","process","authDomain","databaseURL","projectId","REACT_APP_PROJECT_ID","storageBucket","messagingSenderId","appId","firebase","Skills","discordUrl","userName","setUserName","diceUrl","password","setPassword","auth","currentUser","signOut","then","email","signInWithEmailAndPassword","maxWidth","background","ListItemLink","ListItem","assign","SimpleList","List","ListItemIcon","Assignment_default","ListItemText","Info_default","Face_default","OfflineBolt_default","Security_default","Divider","href","drawer","breakpoints","up","flexShrink","toolbar","mixins","drawerPaper","content","flexGrow","ResponsiveDrawer","container","useTheme","mobileOpen","setMobileOpen","CssBaseline","Drawer","anchor","open","onClose","ModalProps","keepMounted","react_router","exact","path","Skill","document","getElementById","Abillity","Battle","Login","Main","react","src","logo","alt","actionCreator","setDiscordUrl","payload","setDiceUrl","rootReducer","combineReducers","setting","state","arguments","undefined","action","objectSpread","url","skills","damageBonus","job","age","sex","weight","origin","hp","mp","Settings","Setting","nDiscord","setDisordValue","nDice","setDiceValue","newDiceURL","newDiscordURL","connect","dispatch","App","react_router_dom","components_NavBar","Home","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"4YAgBMA,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,SAAU,QACVC,OAAQ,GAEVC,OAAO,CACLF,SAAU,WACVG,KAAM,EACNC,MAAO,EACPC,OAAQ,OACRC,MAAO,IACPL,OAAQ,GAEVM,WAAY,CACVC,YAAaX,EAAMY,QAAQ,IAE7BC,MAAO,GAGPC,MAAO,CACLN,OAAQ,kBA+CCO,EA1CU,WACvB,IAAMC,EAAUlB,IADamB,EAEHC,IAAMC,SAAS,WAFZC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEtBM,EAFsBH,EAAA,GAEfI,EAFeJ,EAAA,GAQ7B,OAEEK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACAC,UAAWb,EAAQd,MACnBuB,EAAAC,EAAAC,cAACG,EAAA,EAAD,KAIEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWb,EAAQH,OAA5C,gBAIAY,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAkBV,MAAOA,EAAOW,SAhBpC,SAAsBC,EAA8BC,GAClDZ,EAASY,IAgBLP,UAAWb,EAAQX,QACnBoB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,UAAWC,IACXC,GAAG,QAAQC,MAAM,SAASlB,MAAM,SAASmB,KAAMjB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,QACjDD,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,UAAWC,IACXC,GAAG,SAASC,MAAM,QAAQlB,MAAM,QAAQmB,KAAMjB,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,QAChDD,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,UAAWC,IACXC,GAAG,WAAWC,MAAM,UAAUlB,MAAM,UAAUmB,KAAMjB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,QACtDD,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,UAAWC,IACXC,GAAG,UAAUC,MAAM,SAASlB,MAAM,SAASmB,KAAMjB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,SAGrDD,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQC,MAAM,UAAUnB,UAAWb,EAAQF,OAA3C,oNCzDAhB,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJO,MAAO,OACPwC,UAAWjD,EAAMY,QAAQ,IAE3BsC,MAAO,CACLzC,MAAO,OACP0C,aAAcnD,EAAMY,QAAQ,IAE9BwC,MAAO,CACLC,SAAU,KAEZC,aAAc,CACZC,UAAW,QAEbC,eAAgB,CACdC,OAAQ,EACRC,KAAM,gBACNC,OAAQ,EACRnD,QAAS,EACToD,SAAU,SACVC,QAAS,EACT1D,SAAU,WACV2D,IAAK,GACLrD,MAAO,OAUb,SAASsD,EACPC,EACAzC,GAEA,MAAO,CAAEyC,OAAMzC,SAGjB,IAAM0C,GAAO,CACXF,EAAW,cAAe,KAC1BA,EAAW,SAAU,KACrBA,EAAW,OAAQ,MAGrB,SAASG,GAAQxC,EAAMyC,EAAMC,GAC3B,OAAID,EAAEC,GAAW1C,EAAE0C,IACT,EAEND,EAAEC,GAAW1C,EAAE0C,GACV,EAEF,EA6BT,IAAMC,GAAsB,CAC1B,CAAEC,GAAI,OAAQC,SAAS,EAAOC,gBAAgB,EAAM/B,MAAO,cAC3D,CAAE6B,GAAI,QAASC,SAAS,EAAMC,gBAAgB,EAAO/B,MAAO,gBAa9D,SAASgC,GAAkBC,GAA2B,IAC5C1D,EAAoF0D,EAApF1D,QAAS2D,EAA2ED,EAA3EC,iBAAkBC,EAAyDF,EAAzDE,MAAOR,EAAkDM,EAAlDN,QAASS,EAAyCH,EAAzCG,YAAaC,EAA4BJ,EAA5BI,SAAUC,EAAkBL,EAAlBK,cAK1E,OACEtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,KACExD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAWrB,QAAQ,YACjBpC,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CACEC,cAAeP,EAAc,GAAKA,EAAcC,EAChDO,QAASR,IAAgBC,EACzB5C,SAAUyC,EACVW,WAAY,CAAEC,aAAc,0BAG/BlB,GAASmB,IAAI,SAAAC,GAAG,OACfhE,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEQ,IAAKD,EAAInB,GACTqB,MAAOF,EAAIlB,QAAU,QAAU,OAC/BV,QAAS4B,EAAIjB,eAAiB,OAAS,UACvCoB,cAAexB,IAAYqB,EAAInB,IAAKM,GAEpCnD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEC,OAAQ1B,IAAYqB,EAAInB,GACxByB,UAAWnB,EACXoB,SAzBeC,EAyBYR,EAAInB,GAzBS,SAACnC,GACnD4C,EAAc5C,EAAO8D,MA0BVR,EAAIhD,MACJ2B,IAAYqB,EAAInB,GACf7C,EAAAC,EAAAC,cAAA,QAAME,UAAWb,EAAQwC,gBACZ,SAAVoB,EAAmB,oBAAsB,oBAE1C,OAhCU,IAACqB,MAyC7B,IAAMC,GAAmBnG,YAAW,SAACC,GAAD,OAClCC,YAAa,CACXC,KAAM,CACJiG,YAAanG,EAAMY,QAAQ,GAC3BwF,aAAcpG,EAAMY,QAAQ,IAE9ByF,UACyB,UAAvBrG,EAAMsG,QAAQC,KACV,CACEvD,MAAOhD,EAAMsG,QAAQE,UAAUC,KAC/BC,gBAAiBC,YAAQ3G,EAAMsG,QAAQE,UAAUI,MAAO,MAE1D,CACE5D,MAAOhD,EAAMsG,QAAQO,KAAKC,QAC1BJ,gBAAiB1G,EAAMsG,QAAQE,UAAUO,MAEjDC,OAAQ,CACNC,KAAM,YAERC,QAAS,CACPlE,MAAOhD,EAAMsG,QAAQO,KAAKL,WAE5B3F,MAAO,CACLoG,KAAM,gBASNE,GAAuB,SAACzC,GAC5B,IAAM1D,EAAUkF,KACRrB,EAAgBH,EAAhBG,YAER,OACEpD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACED,UAAWuF,YAAKpG,EAAQd,KAATmB,OAAAgG,EAAA,EAAAhG,CAAA,GACZL,EAAQqF,UAAYxB,EAAc,KAGrCpD,EAAAC,EAAAC,cAAA,OAAKE,UAAWb,EAAQH,OACrBgE,EAAc,EACbpD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYiB,MAAM,UAAUhB,QAAQ,aACjC6C,EADH,aAIApD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,QAAQ,KAAKsC,GAAG,cAA5B,UAKJ7C,EAAAC,EAAAC,cAAA,OAAKE,UAAWb,EAAQgG,SACxBvF,EAAAC,EAAAC,cAAA,OAAKE,UAAWb,EAAQkG,SACrBrC,EAAc,EACbpD,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAASzG,MAAM,UACbY,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAYhC,aAAW,UACrB9D,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,QAIJD,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAASzG,MAAM,eACbY,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAYhC,aAAW,eACrB9D,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAD,WASC,SAASgG,KACtB,IAAM1G,EAAUlB,IADsBmB,EAEZC,IAAMC,SAAgB,OAFVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE/B2D,EAF+BxD,EAAA,GAExBuG,EAFwBvG,EAAA,GAAAwG,EAGR1G,IAAMC,SAAqB,SAHnB0G,EAAAxG,OAAAC,EAAA,EAAAD,CAAAuG,EAAA,GAG/BxD,EAH+ByD,EAAA,GAGtBC,EAHsBD,EAAA,GAAAE,EAIN7G,IAAMC,SAAmB,IAJnB6G,EAAA3G,OAAAC,EAAA,EAAAD,CAAA0G,EAAA,GAI/BE,EAJ+BD,EAAA,GAIrBE,EAJqBF,EAAA,GAAAG,EAKdjH,IAAMC,SAAS,GALDiH,EAAA/G,OAAAC,EAAA,EAAAD,CAAA8G,EAAA,GAK/BE,EAL+BD,EAAA,GAKzBE,EALyBF,EAAA,GAAAG,EAMZrH,IAAMC,UAAS,GANHqH,EAAAnH,OAAAC,EAAA,EAAAD,CAAAkH,EAAA,GAM/BE,EAN+BD,EAAA,GAMxBE,EANwBF,EAAA,GAAAG,EAOAzH,IAAMC,SAAS,GAPfyH,EAAAvH,OAAAC,EAAA,EAAAD,CAAAsH,EAAA,GAO/BE,EAP+BD,EAAA,GAOlBE,EAPkBF,EAAA,GAyDtC,IAEMG,EAAYF,EAAcG,KAAKC,IAAIJ,EAAa5E,GAAKiF,OAASb,EAAOQ,GAE3E,OACEpH,EAAAC,EAAAC,cAAA,OAAKE,UAAWb,EAAQd,MACtBuB,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOtH,UAAWb,EAAQkC,OACxBzB,EAAAC,EAAAC,cAACyH,GAAD,CAAsBvE,YAAaoD,EAASiB,SAC5CzH,EAAAC,EAAAC,cAAA,OAAKE,UAAWb,EAAQsC,cACtB7B,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CACExH,UAAWb,EAAQoC,MACnBkG,kBAAgB,aAChBC,KAAMd,EAAQ,QAAU,UAExBhH,EAAAC,EAAAC,cAAC8C,GAAD,CACEzD,QAASA,EACT6D,YAAaoD,EAASiB,OACtBtE,MAAOA,EACPR,QAASA,EACTO,iBA7DZ,SAA8BxC,GAC5B,GAAIA,EAAMqH,OAAOnE,QAAjB,CACE,IAAMoE,EAAexF,GAAKuB,IAAI,SAAAkE,GAAC,OAAIA,EAAE1F,OACrCkE,EAAYuB,QAGdvB,EAAY,KAwDFnD,cApEZ,SAA2B5C,EAAkC8D,GAE3D0B,EADevD,IAAY6B,GAAsB,SAAVrB,EACrB,MAAQ,QAC1BkD,EAAW7B,IAkEDnB,SAAUb,GAAKiF,SAEjBzH,EAAAC,EAAAC,cAACgI,EAAA,EAAD,KA7OZ,SAAuBC,EAAYC,GACjC,IAAMC,EAAiBF,EAAMpE,IAAI,SAACuE,EAAIC,GAAL,MAAe,CAACD,EAAIC,KAMrD,OALAF,EAAeG,KAAK,SAACvI,EAAGyC,GACtB,IAAMS,EAAQiF,EAAInI,EAAE,GAAIyC,EAAE,IAC1B,OAAc,IAAVS,EAAoBA,EACjBlD,EAAE,GAAKyC,EAAE,KAEX2F,EAAetE,IAAI,SAAAuE,GAAE,OAAIA,EAAG,KAuOtBG,CAAWjG,GAlO1B,SACEW,EACAR,GAEA,MAAiB,SAAVQ,EAAmB,SAAClD,EAAGyC,GAAJ,OAAUD,GAAKxC,EAAGyC,EAAGC,IAAW,SAAC1C,EAAGyC,GAAJ,OAAWD,GAAKxC,EAAGyC,EAAGC,IA8NlD+F,CAAWvF,EAAOR,IACjCgG,MAAM/B,EAAOQ,EAAaR,EAAOQ,EAAcA,GAC/CrD,IAAI,SAACC,EAAKuE,GACT,IA3BIhG,EA2BEqG,GA3BFrG,EA2B8ByB,EAAIzB,MA3BW,IAA5BiE,EAASqC,QAAQtG,IA4BhCuG,EAAO,2BAAAC,OAA8BR,GAE3C,OACEvI,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEwF,OAAK,EACLzE,QAAS,SAAA7D,GAAK,OAlElC,SAAqBA,EAAkC6B,GACrD,IAAM0G,EAAgBzC,EAASqC,QAAQtG,GACnC2G,EAAwB,IAEL,IAAnBD,EACFC,EAAcA,EAAYH,OAAOvC,EAAUjE,GAChB,IAAlB0G,EACTC,EAAcA,EAAYH,OAAOvC,EAASmC,MAAM,IACvCM,IAAkBzC,EAASiB,OAAS,EAC7CyB,EAAcA,EAAYH,OAAOvC,EAASmC,MAAM,GAAI,IAC3CM,EAAgB,IACzBC,EAAcA,EAAYH,OACxBvC,EAASmC,MAAM,EAAGM,GAClBzC,EAASmC,MAAMM,EAAgB,KAInCxC,EAAYyC,GAiDwBC,CAAYzI,EAAOsD,EAAIzB,OACzC6G,KAAK,WACLC,eAAcT,EACdU,UAAW,EACXrF,IAAKD,EAAIzB,KACTiE,SAAUoC,GAEV5I,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAWrB,QAAQ,YACjBpC,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CACEE,QAASgF,EACT/E,WAAY,CAAEgE,kBAAmBiB,MAGrC9I,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAW5C,UAAU,KAAKgC,GAAIiG,EAASS,MAAM,MAAMnH,QAAQ,QACxD4B,EAAIzB,MAEPvC,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAWS,MAAM,SAASF,EAAIlE,UAIrCwH,EAAY,GACXtH,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAUgG,MAAO,CAAEtH,OAAQ,GAAKoF,IAC9BtH,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAWgG,QAAS,QAM9BzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5B9I,UAAU,MACV+I,MAAOpH,GAAKiF,OACZL,YAAaA,EACbR,KAAMA,EACNiD,oBAAqB,CACnB/F,aAAc,iBAEhBgG,oBAAqB,CACnBhG,aAAc,aAEhBiG,aAtFR,SAA0BrJ,EAAgBsJ,GACxCnD,EAAQmD,IAsFFC,oBAnFR,SAAiCvJ,GAC/B2G,GAAgB3G,EAAMqH,OAAOjI,OAC7B+G,EAAQ,OAoFN7G,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CACEC,QAASnK,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAQxG,QAASoD,EAAOvG,SAlFvC,SAA2BC,GACzBuG,EAASvG,EAAMqH,OAAOnE,YAkFlB5C,MAAM,iCC7WR3C,GAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6L,OAAQ,CACNtL,OAAQR,EAAMY,QAAQ,IAExBmL,MAAO,CACLC,QAAS,QAEXC,UAAW,CACTC,WAAYlM,EAAMY,QAAQ,GAC1BD,YAAaX,EAAMY,QAAQ,GAC3BH,MAAO,KAET0L,YAAa,CACXD,WAAYlM,EAAMY,QAAQ,GAC1BD,YAAaX,EAAMY,QAAQ,GAC3BH,MAAO,IAETgI,MAAO,CACLxF,UAAW,IAEbmJ,KAAM,CACJ3L,MAAO,SAsOE4L,GA5KqB,SAAC3H,GACnC,IAAM1D,EAAUlB,KAGhB,OAFAwM,QAAQC,IAAI7H,EAAM8H,WAGhB/K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEnI,GAAG,gBACH7B,MAAM,iBACNiK,aAAchI,EAAM8H,UAAUG,eAAeC,cAC7C/K,UAAWuF,YAAKpG,EAAQiL,UAAWjL,EAAQyH,OAC3CvG,SAAY,SAACC,GAAgDuC,EAAMmI,iBAAiB1K,EAAMqH,OAAOjI,QACjGf,OAAO,UAETiB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACAnI,GAAG,KACH7B,MAAM,KACN8D,KAAK,SACLhF,MAAOmD,EAAM8H,UAAUG,eAAeG,GACtCjL,UAAWuF,YAAKpG,EAAQmL,YAAanL,EAAQyH,OAC7CvG,SAAU,SAACC,GAAgDuC,EAAMqI,OAAO5K,EAAMqH,OAAOjI,QACrFyL,YAAY,KACZxM,OAAO,WAEPiB,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACAnI,GAAG,KACH7B,MAAM,KACN8D,KAAK,SACLhF,MAAOmD,EAAM8H,UAAUG,eAAeM,GACtCpL,UAAWuF,YAAKpG,EAAQmL,YAAanL,EAAQyH,OAC7CvG,SAAU,SAACC,GAAgDuC,EAAMwI,OAAO/K,EAAMqH,OAAOjI,QACrFyL,YAAY,KACZxM,OAAO,WAEPiB,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACAnI,GAAG,MACH7B,MAAM,MACN8D,KAAK,SACLhF,MAAOmD,EAAM8H,UAAUG,eAAeQ,IACtCtL,UAAWuF,YAAKpG,EAAQmL,YAAanL,EAAQyH,OAC7CvG,SAAU,SAACC,GAAgDuC,EAAM0I,QAAQjL,EAAMqH,OAAOjI,QACtFyL,YAAY,MACZxM,OAAO,WAEPiB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACAnI,GAAG,MACH7B,MAAM,MACN8D,KAAK,SACLhF,MAAOmD,EAAM8H,UAAUa,cAAcC,IACrCzL,UAAWuF,YAAKpG,EAAQmL,YAAanL,EAAQyH,OAC7CvG,SACE,SAACC,GACD,IAAIoL,EAAkC7I,EAAM8H,UAAUa,cACtDE,EAAiBD,KAAOnL,EAAMqH,OAAOjI,MACrCmD,EAAM8I,iBAAiBD,IAEzBP,YAAY,MACZxM,OAAO,WAEPiB,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACAnI,GAAG,MACH7B,MAAM,MACN8D,KAAK,SACLhF,MAAOmD,EAAM8H,UAAUa,cAAcI,IACrC5L,UAAWuF,YAAKpG,EAAQmL,YAAanL,EAAQyH,OAC7CvG,SACE,SAACC,GACD,IAAIoL,EAAkC7I,EAAM8H,UAAUa,cACtDE,EAAiBE,KAAOtL,EAAMqH,OAAOjI,MACrCmD,EAAM8I,iBAAiBD,IACzBP,YAAY,MACZxM,OAAO,WAEPiB,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACAnI,GAAG,MACH7B,MAAM,MACN8D,KAAK,SACLhF,MAAOmD,EAAM8H,UAAUa,cAAcK,IACrC7L,UAAWuF,YAAKpG,EAAQmL,YAAanL,EAAQyH,OAC7CvG,SAAU,SAACC,GACT,IAAIoL,EAAkC7I,EAAM8H,UAAUa,cACtDE,EAAiBG,KAAOvL,EAAMqH,OAAOjI,MACrCmD,EAAM8I,iBAAiBD,IACzBP,YAAY,MACZxM,OAAO,WAEPiB,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACAnI,GAAG,MACH7B,MAAM,MACN8D,KAAK,SACLhF,MAAOmD,EAAM8H,UAAUa,cAAcM,IACrC9L,UAAWuF,YAAKpG,EAAQmL,YAAanL,EAAQyH,OAC7CvG,SAAU,SAACC,GACT,IAAIoL,EAAkC7I,EAAM8H,UAAUa,cACtDE,EAAiBI,KAAOxL,EAAMqH,OAAOjI,MACrCmD,EAAM8I,iBAAiBD,IACzBP,YAAY,MACZxM,OAAO,WAEPiB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACAnI,GAAG,MACH7B,MAAM,MACN8D,KAAK,SACLhF,MAAOmD,EAAM8H,UAAUa,cAAcO,IACrC/L,UAAWuF,YAAKpG,EAAQmL,YAAanL,EAAQyH,OAC7CvG,SAAU,SAACC,GACT,IAAIoL,EAAkC7I,EAAM8H,UAAUa,cACtDE,EAAiBK,KAAOzL,EAAMqH,OAAOjI,MACrCmD,EAAM8I,iBAAiBD,IACzBP,YAAY,MACZxM,OAAO,WAEPiB,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACAnI,GAAG,MACH7B,MAAM,MACN8D,KAAK,SACLhF,MAAOmD,EAAM8H,UAAUa,cAAcQ,IACrChM,UAAWuF,YAAKpG,EAAQmL,YAAanL,EAAQyH,OAC7CvG,SAAU,SAACC,GACT,IAAIoL,EAAkC7I,EAAM8H,UAAUa,cACtDE,EAAiBM,KAAO1L,EAAMqH,OAAOjI,MACrCmD,EAAM8I,iBAAiBD,IACzBP,YAAY,MACZxM,OAAO,WAEPiB,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACAnI,GAAG,MACH7B,MAAM,MACN8D,KAAK,SACLhF,MAAOmD,EAAM8H,UAAUa,cAAcS,IACrCjM,UAAWuF,YAAKpG,EAAQmL,YAAanL,EAAQyH,OAC7CvG,SAAU,SAACC,GACT,IAAIoL,EAAkC7I,EAAM8H,UAAUa,cACtDE,EAAiBO,KAAO3L,EAAMqH,OAAOjI,MACrCmD,EAAM8I,iBAAiBD,IACzBP,YAAY,MACZxM,OAAO,WAEPiB,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACAnI,GAAG,MACH7B,MAAM,MACN8D,KAAK,SACLhF,MAAOmD,EAAM8H,UAAUa,cAAcU,IACrClM,UAAWuF,YAAKpG,EAAQmL,YAAanL,EAAQyH,OAC7CvG,SAAU,SAACC,GACT,IAAIoL,EAAkC7I,EAAM8H,UAAUa,cACtDE,EAAiBQ,KAAO5L,EAAMqH,OAAOjI,MACrCmD,EAAM8I,iBAAiBD,IACzBP,YAAY,MACZxM,OAAO,WAGPiB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEnI,GAAG,aACH7B,MAAM,aACNuL,WAAS,EACTC,QAAQ,IACR1M,MAAOmD,EAAM8H,UAAU0B,oBACvBhM,SAAU,SAACC,GAAgDuC,EAAMyJ,uBAAuBhM,EAAMqH,OAAOjI,QACrGM,UAAWb,EAAQiL,UACnBzL,OAAO,6BC5Pf4N,EAAQ,KAAUC,SAElB,IAAMA,GAAS,CACXC,OAASC,4CACTC,WAAaD,qCACbE,YAAcF,4CACdG,UAAYH,wZAAYI,qBACxBC,cAAgBL,KAChBM,kBAAoBN,iBACpBO,MAAQP,uCAGZQ,iBAAuBV,IAERU,UCPTjP,GAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6L,OAAQ,CACNtL,OAAQR,EAAMY,QAAQ,IAExBmL,MAAO,CACLC,QAAS,QAEXC,UAAW,CACTC,WAAYlM,EAAMY,QAAQ,GAC1BD,YAAaX,EAAMY,QAAQ,GAC3BH,MAAO,KAETgI,MAAO,CACLxF,UAAW,IAEbmJ,KAAM,CACJ3L,MAAO,SAyEEuO,GA7DkB,SAACtK,GAChC,IAAM1D,EAAUlB,KADiCmB,EAEjBC,IAAMC,SAASuD,EAAMuK,YAFJ7N,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE1CiO,EAF0C9N,EAAA,GAEhC+N,EAFgC/N,EAAA,GAAAwG,EAGjB1G,IAAMC,SAASuD,EAAM0K,SAHJvH,EAAAxG,OAAAC,EAAA,EAAAD,CAAAuG,EAAA,GAG1CyH,EAH0CxH,EAAA,GAGhCyH,EAHgCzH,EAAA,GAAAE,EAIvB7G,IAAMC,SAAS,WAJQ6G,EAAA3G,OAAAC,EAAA,EAAAD,CAAA0G,EAAA,GAI1CxG,EAJ0CyG,EAAA,GAInCxG,EAJmCwG,EAAA,GAkBjD,OACEvG,EAAAC,EAAAC,cAAA,OAAK2C,GAAG,SAESyK,GAASQ,OAAOC,YAElB/N,EAAAC,EAAAC,cAAA,WACHJ,EACFE,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQf,QAAQ,YAAYgB,MAAM,UAAUnB,UAAWb,EAAQ8K,OAC/D9F,QAAW,WAbrB+I,GAASQ,OAAOE,UAAUC,KACxB,WAAKlO,EAAS,cAWN,WAMCC,EAAAC,EAAAC,cAAA,WACPF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEnI,GAAG,WACH7B,MAAM,YACNiK,aAAchI,EAAM0K,QACpBvN,UAAWuF,YAAKpG,EAAQiL,UAAWjL,EAAQyH,OAC3CvG,SAAY,SAACC,GAAgDgN,EAAYhN,EAAMqH,OAAOjI,QACtFf,OAAO,UACPiB,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEnI,GAAG,WACH7B,MAAM,WACN8D,KAAK,WACLmG,aAAchI,EAAMuK,WACpBpN,UAAWuF,YAAKpG,EAAQiL,UAAWjL,EAAQyH,OAC3CvG,SAAY,SAACC,GAAgDmN,EAAYnN,EAAMqH,OAAOjI,QACtFf,OAAO,UAETiB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQf,QAAQ,YAAYgB,MAAM,UAAUnB,UAAWb,EAAQ8K,OAC/D9F,QAAW,YA9CH,SAAC2J,EAAeN,GAC5BN,GAASQ,OAAOK,2BAA2BD,EAAON,GAAUK,KAC1D,WAAKlO,EAAS,WA4CUV,CAAMoO,EAAUG,KADtC,YChFFvP,GAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6L,OAAQ,CACNtL,OAAQR,EAAMY,QAAQ,IAExBmL,MAAO,CACLC,QAAS,QAEXC,UAAW,CACTC,WAAYlM,EAAMY,QAAQ,GAC1BD,YAAaX,EAAMY,QAAQ,GAC3BH,MAAO,KAETgI,MAAO,CACLxF,UAAW,IAEbmJ,KAAM,CACJ3L,MAAO,SAyEEuO,GA7DkB,SAACtK,GAChC,IAAM1D,EAAUlB,KADiCmB,EAEjBC,IAAMC,SAASuD,EAAMuK,YAFJ7N,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE1CiO,EAF0C9N,EAAA,GAEhC+N,EAFgC/N,EAAA,GAAAwG,EAGjB1G,IAAMC,SAASuD,EAAM0K,SAHJvH,EAAAxG,OAAAC,EAAA,EAAAD,CAAAuG,EAAA,GAG1CyH,EAH0CxH,EAAA,GAGhCyH,EAHgCzH,EAAA,GAAAE,EAIvB7G,IAAMC,SAAS,WAJQ6G,EAAA3G,OAAAC,EAAA,EAAAD,CAAA0G,EAAA,GAI1CxG,EAJ0CyG,EAAA,GAInCxG,EAJmCwG,EAAA,GAkBjD,OACEvG,EAAAC,EAAAC,cAAA,OAAK2C,GAAG,SAESyK,GAASQ,OAAOC,YAElB/N,EAAAC,EAAAC,cAAA,WACHJ,EACFE,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQf,QAAQ,YAAYgB,MAAM,UAAUnB,UAAWb,EAAQ8K,OAC/D9F,QAAW,WAbrB+I,GAASQ,OAAOE,UAAUC,KACxB,WAAKlO,EAAS,cAWN,WAMCC,EAAAC,EAAAC,cAAA,WACPF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEnI,GAAG,WACH7B,MAAM,YACNiK,aAAchI,EAAM0K,QACpBvN,UAAWuF,YAAKpG,EAAQiL,UAAWjL,EAAQyH,OAC3CvG,SAAY,SAACC,GAAgDgN,EAAYhN,EAAMqH,OAAOjI,QACtFf,OAAO,UACPiB,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEnI,GAAG,WACH7B,MAAM,WACN8D,KAAK,WACLmG,aAAchI,EAAMuK,WACpBpN,UAAWuF,YAAKpG,EAAQiL,UAAWjL,EAAQyH,OAC3CvG,SAAY,SAACC,GAAgDmN,EAAYnN,EAAMqH,OAAOjI,QACtFf,OAAO,UAETiB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQf,QAAQ,YAAYgB,MAAM,UAAUnB,UAAWb,EAAQ8K,OAC/D9F,QAAW,YA9CH,SAAC2J,EAAeN,GAC5BN,GAASQ,OAAOK,2BAA2BD,EAAON,GAAUK,KAC1D,WAAKlO,EAAS,WA4CUV,CAAMoO,EAAUG,KADtC,YChFFvP,GAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6L,OAAQ,CACNtL,OAAQR,EAAMY,QAAQ,IAExBmL,MAAO,CACLC,QAAS,QAEXC,UAAW,CACTC,WAAYlM,EAAMY,QAAQ,GAC1BD,YAAaX,EAAMY,QAAQ,GAC3BH,MAAO,KAETgI,MAAO,CACLxF,UAAW,IAEbmJ,KAAM,CACJ3L,MAAO,SAyEEuO,GA7DkB,SAACtK,GAChC,IAAM1D,EAAUlB,KADiCmB,EAEjBC,IAAMC,SAASuD,EAAMuK,YAFJ7N,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE1CiO,EAF0C9N,EAAA,GAEhC+N,EAFgC/N,EAAA,GAAAwG,EAGjB1G,IAAMC,SAASuD,EAAM0K,SAHJvH,EAAAxG,OAAAC,EAAA,EAAAD,CAAAuG,EAAA,GAG1CyH,EAH0CxH,EAAA,GAGhCyH,EAHgCzH,EAAA,GAAAE,EAIvB7G,IAAMC,SAAS,WAJQ6G,EAAA3G,OAAAC,EAAA,EAAAD,CAAA0G,EAAA,GAI1CxG,EAJ0CyG,EAAA,GAInCxG,EAJmCwG,EAAA,GAkBjD,OACEvG,EAAAC,EAAAC,cAAA,OAAK2C,GAAG,SAESyK,GAASQ,OAAOC,YAElB/N,EAAAC,EAAAC,cAAA,WACHJ,EACFE,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQf,QAAQ,YAAYgB,MAAM,UAAUnB,UAAWb,EAAQ8K,OAC/D9F,QAAW,WAbrB+I,GAASQ,OAAOE,UAAUC,KACxB,WAAKlO,EAAS,cAWN,WAMCC,EAAAC,EAAAC,cAAA,WACPF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEnI,GAAG,WACH7B,MAAM,YACNiK,aAAchI,EAAM0K,QACpBvN,UAAWuF,YAAKpG,EAAQiL,UAAWjL,EAAQyH,OAC3CvG,SAAY,SAACC,GAAgDgN,EAAYhN,EAAMqH,OAAOjI,QACtFf,OAAO,UACPiB,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEnI,GAAG,WACH7B,MAAM,WACN8D,KAAK,WACLmG,aAAchI,EAAMuK,WACpBpN,UAAWuF,YAAKpG,EAAQiL,UAAWjL,EAAQyH,OAC3CvG,SAAY,SAACC,GAAgDmN,EAAYnN,EAAMqH,OAAOjI,QACtFf,OAAO,UAETiB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQf,QAAQ,YAAYgB,MAAM,UAAUnB,UAAWb,EAAQ8K,OAC/D9F,QAAW,YA9CH,SAAC2J,EAAeN,GAC5BN,GAASQ,OAAOK,2BAA2BD,EAAON,GAAUK,KAC1D,WAAKlO,EAAS,WA4CUV,CAAMoO,EAAUG,KADtC,kKC1EFvP,GAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJO,MAAO,OACPoP,SAAU,IACVnJ,gBAAiB1G,EAAMsG,QAAQwJ,WAAW5M,WAKhD,SAAS6M,GAAarL,GACpB,OAAOjD,EAAAC,EAAAC,cAACqO,GAAA,EAAD3O,OAAA4O,OAAA,CAAUnE,QAAM,EAACxJ,UAAU,KAAQoC,IAG7B,SAASwL,KACtB,IAAMlP,EAAUlB,KAEhB,OACE2B,EAAAC,EAAAC,cAAA,OAAKE,UAAWb,EAAQd,MACtBuB,EAAAC,EAAAC,cAACwO,GAAA,EAAD,CAAM7N,UAAU,MAAMiD,aAAW,wBAC/B9D,EAAAC,EAAAC,cAACqO,GAAA,EAAD,CAAUlE,QAAM,EACdxJ,UAAWC,IACXC,GAAG,eACHf,EAAAC,EAAAC,cAACyO,GAAA,EAAD,KACE3O,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,OAEFD,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcxJ,QAAQ,WAExBrF,EAAAC,EAAAC,cAACqO,GAAA,EAAD,CAAUlE,QAAM,EACdxJ,UAAWC,IACXC,GAAG,mBACHf,EAAAC,EAAAC,cAACyO,GAAA,EAAD,KACE3O,EAAAC,EAAAC,cAAC4O,GAAA7O,EAAD,OAEFD,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcxJ,QAAQ,eAExBrF,EAAAC,EAAAC,cAACqO,GAAA,EAAD,CAAUlE,QAAM,EACdxJ,UAAWC,IACXC,GAAG,kBACHf,EAAAC,EAAAC,cAACyO,GAAA,EAAD,KACE3O,EAAAC,EAAAC,cAAC6O,GAAA9O,EAAD,OAEFD,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcxJ,QAAQ,cAExBrF,EAAAC,EAAAC,cAACqO,GAAA,EAAD,CAAUlE,QAAM,EACdxJ,UAAWC,IACXC,GAAG,aACHf,EAAAC,EAAAC,cAACyO,GAAA,EAAD,KACE3O,EAAAC,EAAAC,cAAC8O,GAAA/O,EAAD,OAEFD,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcxJ,QAAQ,SAExBrF,EAAAC,EAAAC,cAACqO,GAAA,EAAD,CAAUlE,QAAM,EACdxJ,UAAWC,IACXC,GAAG,gBACHf,EAAAC,EAAAC,cAACyO,GAAA,EAAD,KACE3O,EAAAC,EAAAC,cAAC+O,GAAAhP,EAAD,OAEFD,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcxJ,QAAQ,aAG1BrF,EAAAC,EAAAC,cAACgP,GAAA,EAAD,MACAlP,EAAAC,EAAAC,cAACwO,GAAA,EAAD,CAAM7N,UAAU,MAAMiD,aAAW,6BAC/B9D,EAAAC,EAAAC,cAACqO,GAAA,EAAD,CAAUlE,QAAM,GACdrK,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcxJ,QAAQ,WAExBrF,EAAAC,EAAAC,cAACoO,GAAD,CAAca,KAAK,gBACjBnP,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAcxJ,QAAQ,YCpEhC,IACMhH,GAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,SAAU,WACV6L,QAAS,OACT5L,OAAQ,GAEVyQ,OAAOxP,OAAAgG,EAAA,EAAAhG,CAAA,GACJrB,EAAM8Q,YAAYC,GAAG,MAAQ,CAC5BtQ,MAVY,IAWZuQ,WAAY,IAGhBtQ,WAAWW,OAAAgG,EAAA,EAAAhG,CAAA,CACTV,YAAaX,EAAMY,QAAQ,IAC1BZ,EAAM8Q,YAAYC,GAAG,MAAQ,CAC5B/E,QAAS,SAGbiF,QAASjR,EAAMkR,OAAOD,QACtBE,YAAa,CACX1Q,MAtBc,KAwBhB2Q,QAAS,CACPC,SAAU,EACVxN,QAAS7D,EAAMY,QAAQ,QAad,SAAS0Q,GAAiB5M,GAA8B,IAC7D6M,EAAc7M,EAAd6M,UACFvQ,EAAUlB,KACVE,EAAQwR,cAHuDvQ,EAIjCC,IAAMC,UAAS,GAJkBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAI9DwQ,EAJ8DrQ,EAAA,GAIlDsQ,EAJkDtQ,EAAA,GAUrE,IAAMyP,EACJpP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAWb,EAAQiQ,UAExBxP,EAAAC,EAAAC,cAACuO,GAAD,OAIJ,OACEzO,EAAAC,EAAAC,cAAA,OAAKE,UAAWb,EAAQd,MACtBuB,EAAAC,EAAAC,cAACgQ,EAAA,EAAD,MACAlQ,EAAAC,EAAAC,cAAA,OAAKE,UAAWb,EAAQ6P,OAAQtL,aAAW,mBAGvC9D,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CACEL,UAAWA,EACXvP,QAAQ,YACR6P,OAA4B,QAApB7R,EAAM+F,UAAsB,QAAU,OAC9C+L,KAAML,EACNM,QAvBV,WACEL,GAAeD,IAuBPzQ,QAAS,CACPkC,MAAOlC,EAAQmQ,aAEjBa,WAAY,CACVC,aAAa,IAGdpB,IAGPpP,EAAAC,EAAAC,cAAA,QAAME,UAAWb,EAAQoQ,SACvB3P,EAAAC,EAAAC,cAAA,OAAKE,UAAWb,EAAQiQ,UACtBxP,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,KACEzQ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAc9P,UAAW+P,GAAOd,UAAWe,SAASC,eAAe,cACrF9Q,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAOE,KAAK,kBAAkB9P,UAAW+J,KACzC5K,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAOE,KAAK,iBAAiB9P,UAAWkQ,KACxC/Q,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAOE,KAAK,YAAY9P,UAAW6K,KACnC1L,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAOE,KAAK,eAAe9P,UAAWmQ,QC3FlD,IAAM3S,GAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6L,OAAQ,CACNtL,OAAQR,EAAMY,QAAQ,IAExBmL,MAAO,CACLC,QAAS,QAEXC,UAAW,CACTC,WAAYlM,EAAMY,QAAQ,GAC1BD,YAAaX,EAAMY,QAAQ,GAC3BH,MAAO,KAETgI,MAAO,CACLxF,UAAW,IAEbmJ,KAAM,CACJ3L,MAAO,SAyEEiS,GA7DiB,SAAChO,GAC/B,IAAM1D,EAAUlB,KADgCmB,EAEhBC,IAAMC,SAASuD,EAAMuK,YAFL7N,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEzCiO,EAFyC9N,EAAA,GAE/B+N,EAF+B/N,EAAA,GAAAwG,EAGhB1G,IAAMC,SAASuD,EAAM0K,SAHLvH,EAAAxG,OAAAC,EAAA,EAAAD,CAAAuG,EAAA,GAGzCyH,EAHyCxH,EAAA,GAG/ByH,EAH+BzH,EAAA,GAAAE,EAItB7G,IAAMC,SAAS,WAJO6G,EAAA3G,OAAAC,EAAA,EAAAD,CAAA0G,EAAA,GAIzCxG,EAJyCyG,EAAA,GAIlCxG,EAJkCwG,EAAA,GAkBhD,OACEvG,EAAAC,EAAAC,cAAA,OAAK2C,GAAG,SAESyK,GAASQ,OAAOC,YAElB/N,EAAAC,EAAAC,cAAA,WACHJ,EACFE,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQf,QAAQ,YAAYgB,MAAM,UAAUnB,UAAWb,EAAQ8K,OAC/D9F,QAAW,WAbrB+I,GAASQ,OAAOE,UAAUC,KACxB,WAAKlO,EAAS,cAWN,WAMCC,EAAAC,EAAAC,cAAA,WACPF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEnI,GAAG,WACH7B,MAAM,YACNiK,aAAchI,EAAM0K,QACpBvN,UAAWuF,YAAKpG,EAAQiL,UAAWjL,EAAQyH,OAC3CvG,SAAY,SAACC,GAAgDgN,EAAYhN,EAAMqH,OAAOjI,QACtFf,OAAO,UACPiB,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEnI,GAAG,WACH7B,MAAM,WACN8D,KAAK,WACLmG,aAAchI,EAAMuK,WACpBpN,UAAWuF,YAAKpG,EAAQiL,UAAWjL,EAAQyH,OAC3CvG,SAAY,SAACC,GAAgDmN,EAAYnN,EAAMqH,OAAOjI,QACtFf,OAAO,UAETiB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQf,QAAQ,YAAYgB,MAAM,UAAUnB,UAAWb,EAAQ8K,OAC/D9F,QAAW,YA9CH,SAAC2J,EAAeN,GAC5BN,GAASQ,OAAOK,2BAA2BD,EAAON,GAAUK,KAC1D,WAAKlO,EAAS,WA4CUV,CAAMoO,EAAUG,KADtC,gCC3EOsD,GAXQ,WACrB,OACEC,EAAA,qBAAK/Q,UAAU,OACX+Q,EAAA,qBACAC,IAAKC,KACLC,IAAI,GAAGtS,MAAM,MAAMkD,OAAO,4BC4BrBqP,GAAgB,CACzBC,cC1ByB,SAACC,GAC1B,MAAO,CACHA,UACA3M,KAAM,4BDwBV4M,WE3BsB,SAACD,GACvB,MAAO,CACHA,UACA3M,KAAM,0BCLD6M,GAAcC,YAAgB,CACvCC,QHSmB,WAA4C,IAA3CC,EAA2CC,UAAAtK,OAAA,QAAAuK,IAAAD,UAAA,GAAAA,UAAA,GANxD,CACHvE,WAAY,GACZG,QAAS,IAI8BsE,EAAoBF,UAAAtK,OAAA,EAAAsK,UAAA,QAAAC,EAC/D,OAAQC,EAAOnN,MACX,IAAK,0BACD,OAAOlF,OAAAsS,GAAA,EAAAtS,CAAA,GACAkS,EADP,CAEItE,WAAYyE,EAAOR,QAAQU,MAEnC,IAAK,uBACD,OAAAvS,OAAAsS,GAAA,EAAAtS,CAAA,GACOkS,EADP,CAEInE,QAASsE,EAAOR,QAAQU,MAEhC,QACI,OAAOL,IGrBf/G,UCwFmB,WAA4C,IAA3C+G,EAA2CC,UAAAtK,OAAA,QAAAuK,IAAAD,UAAA,GAAAA,UAAA,GA/BxD,CACHhH,UAAW,CACPqH,OAAQ,GACR3F,oBAAqB,GACrBb,cAAe,CACXC,IAAK,EACLG,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GAETpB,eAAgB,CACZC,cAAe,GACfE,GAAI,EACJG,GAAI,EACJE,IAAK,EACL2G,YAAa,GACbC,IAAK,GACLC,IAAK,EACLC,IAAK,GACLtQ,OAAQ,EACRuQ,OAAQ,EACRC,OAAQ,MAMuBT,EAAoBF,UAAAtK,OAAA,EAAAsK,UAAA,QAAAC,EAC/D,OAAQC,EAAOnN,MACX,IAAK,gBACD,OAAAlF,OAAAsS,GAAA,EAAAtS,CAAA,GACOkS,EADP,CAEI/G,UAAWkH,EAAOR,QAAQ1G,YAElC,IAAK,aACD,OAAAnL,OAAAsS,GAAA,EAAAtS,CAAA,GACOkS,EADP,CAEI/G,UAAUnL,OAAAsS,GAAA,EAAAtS,CAAA,GACHkS,EAAM/G,UADJ,CAELqH,OAAQH,EAAOR,QAAQW,WAGnC,IAAK,qBACD,OAAAxS,OAAAsS,GAAA,EAAAtS,CAAA,GACOkS,EADP,CAEI/G,UAAUnL,OAAAsS,GAAA,EAAAtS,CAAA,GAEHkS,EAAM/G,UAFJ,CAGLa,cAAeqG,EAAOR,QAAQ7F,kBAG1C,IAAK,sBACD,OAAAhM,OAAAsS,GAAA,EAAAtS,CAAA,GACOkS,EADP,CAEI/G,UAAUnL,OAAAsS,GAAA,EAAAtS,CAAA,GAEHkS,EAAM/G,UAFJ,CAGLG,eAAgB+G,EAAOR,QAAQvG,mBAG3C,IAAK,qBACD,OAAAtL,OAAAsS,GAAA,EAAAtS,CAAA,GACOkS,EADP,CAEI/G,UAAUnL,OAAAsS,GAAA,EAAAtS,CAAA,GAEHkS,EAAM/G,UAFJ,CAGLG,eAAetL,OAAAsS,GAAA,EAAAtS,CAAA,GACRkS,EAAM/G,UAAUG,eADT,CAEVC,cAAe8G,EAAOR,QAAQtG,oBAI9C,IAAK,SACD,OAAAvL,OAAAsS,GAAA,EAAAtS,CAAA,GACOkS,EADP,CAEI/G,UAAUnL,OAAAsS,GAAA,EAAAtS,CAAA,GAEHkS,EAAM/G,UAFJ,CAGLG,eAAetL,OAAAsS,GAAA,EAAAtS,CAAA,GACRkS,EAAM/G,UAAUG,eADT,CAEVG,GAAI4G,EAAOR,QAAQkB,SAInC,IAAK,SACD,OAAA/S,OAAAsS,GAAA,EAAAtS,CAAA,GACOkS,EADP,CAEI/G,UAAUnL,OAAAsS,GAAA,EAAAtS,CAAA,GAEHkS,EAAM/G,UAFJ,CAGLG,eAAetL,OAAAsS,GAAA,EAAAtS,CAAA,GACRkS,EAAM/G,UAAUG,eADT,CAEVM,GAAIyG,EAAOR,QAAQmB,SAInC,IAAK,2BACD,OAAAhT,OAAAsS,GAAA,EAAAtS,CAAA,GACOkS,EADP,CAEI/G,UAAUnL,OAAAsS,GAAA,EAAAtS,CAAA,GAEHkS,EAAM/G,UAFJ,CAGLG,eAAetL,OAAAsS,GAAA,EAAAtS,CAAA,GACRkS,EAAM/G,UAAUG,eADT,CAEVuB,oBAAqBwF,EAAOR,QAAQpD,iBAIpD,QACI,OAAOyD,MDvKNP,GACAsB,GEPPxU,GAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6L,OAAQ,CACNtL,OAAQR,EAAMY,QAAQ,IAExBmL,MAAO,CACLC,QAAS,QAEXC,UAAW,CACTC,WAAYlM,EAAMY,QAAQ,GAC1BD,YAAaX,EAAMY,QAAQ,GAC3BH,MAAO,KAETgI,MAAO,CACLxF,UAAW,IAEbmJ,KAAM,CACJ3L,MAAO,SAmDE8T,GAvCmB,SAAC7P,GACjC,IAAM1D,EAAUlB,KADkCmB,EAEfC,IAAMC,SAASuD,EAAMuK,YAFN7N,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE3CuT,EAF2CpT,EAAA,GAEjCqT,EAFiCrT,EAAA,GAAAwG,EAGpB1G,IAAMC,SAASuD,EAAM0K,SAHDvH,EAAAxG,OAAAC,EAAA,EAAAD,CAAAuG,EAAA,GAG3C8M,EAH2C7M,EAAA,GAGpC8M,EAHoC9M,EAAA,GAWlD,OACEpG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEnI,GAAG,UACH7B,MAAM,eACNiK,aAAchI,EAAM0K,QACpBvN,UAAWuF,YAAKpG,EAAQiL,UAAWjL,EAAQyH,OAC3CvG,SAAY,SAACC,GAAgDwS,EAAaxS,EAAMqH,OAAOjI,QACvFf,OAAO,UAETiB,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEnI,GAAG,aACH7B,MAAM,cACNiK,aAAchI,EAAMuK,WACpBpN,UAAWuF,YAAKpG,EAAQiL,UAAWjL,EAAQyH,OAC3CvG,SAAY,SAACC,GAAgDsS,EAAetS,EAAMqH,OAAOjI,QACzFf,OAAO,UAETiB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQf,QAAQ,YAAYgB,MAAM,UAAUnB,UAAWb,EAAQ8K,OAC/D9F,QAAW,WA3BA,IAAC4O,EAAoBC,EAApBD,EA2BiBF,EA3BGG,EA2BIL,EA1BtC9P,EAAMyO,WAAWyB,GACjBlQ,EAAMuO,cAAc4B,GACpBvI,QAAQC,IAAIqI,KAuBV,SC5CSE,gBAlBS,SAACvB,GACrB,MAAO,CACHtE,WAAYsE,EAAMD,QAAQrE,WAC1BG,QAASmE,EAAMD,QAAQlE,UAIJ,SAAC2F,GACxB,MAAO,CACH5B,WAAY,SAACS,GACTmB,EAAS/B,GAAsBG,WAAW,CAACS,UAE/CX,cAAe,SAACW,GACZmB,EAAS/B,GAAsBC,cAAc,CAACW,YAK3CkB,CAGbP,ICGaS,WApBO,WACpB,OACEpC,EAAA,qBAAK/Q,UAAU,OACb+Q,EAAA,cAACqC,EAAA,EAAD,KACErC,EAAA,wBAAQ/Q,UAAU,cAChB+Q,EAAA,cAACsC,EAAD,OAGFtC,EAAA,qBAAK/Q,UAAU,WAAWyC,GAAG,YAC3BsO,EAAA,cAACV,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAI9P,UAAWqQ,KAEjCC,EAAA,cAACV,EAAA,EAAD,CAAOE,KAAK,QAAQ9P,UAAW6S,GAAM5D,UAAWe,SAASC,eAAe,cACxEK,EAAA,cAACV,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAAS9P,UAAWoQ,KACtCE,EAAA,cAACV,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAW9P,UAAWiS,UCX9Ba,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRN,IAAMC,GAAQC,YAAYtC,IAE1BuC,IAASC,OACLnU,EAAAC,EAAAC,cAACkU,GAAA,EAAD,CAAUJ,MAASA,IACfhU,EAAAC,EAAAC,cAACmU,GAAD,OAEHxD,SAASC,eAAe,SDyHvB,kBAAmBwD,WACrBA,UAAUC,cAAcC,MAAMvG,KAAK,SAAAwG,GACjCA,EAAaC,mCE3InBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.795d8e07.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport PalletIcon from '@material-ui/icons/ColorLens';\r\nimport FavoriteIcon from '@material-ui/icons/OfflinePin';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'fixed',\r\n      zIndex: 1,\r\n    },\r\n    navBar:{\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      margin: 'auto',\r\n      width: 500,\r\n      zIndex: 2,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      //flexGrow: 1,\r\n    },\r\n    login: {\r\n      margin: '0 0 0 auto', \r\n    }\r\n  })\r\n);\r\n\r\nconst NavBar: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    \r\n    <AppBar\r\n    className={classes.root}>\r\n    <Toolbar>\r\n      {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n        <MenuIcon />\r\n      </IconButton> */}\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n        Palletmaster\r\n      </Typography>\r\n\r\n      <BottomNavigation value={value} onChange={handleChange} \r\n        className={classes.navBar}>\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/home\" label=\"Pallet\" value=\"pallet\" icon={<PalletIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/login\" label=\"Login\" value=\"login\" icon={<FavoriteIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/setting\" label=\"Setting\" value=\"setting\" icon={<SettingIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/create\" label=\"Create\" value=\"create\" icon={<CreateIcon />} />\r\n      </BottomNavigation>\r\n      \r\n      <Button color=\"inherit\" className={classes.login}>Login</Button>\r\n    </Toolbar>\r\n  </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    tableWrapper: {\r\n      overflowX: 'auto',\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface Data {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\nfunction createData(\r\n  name: string,\r\n  value: number,\r\n): Data {\r\n  return { name, value };\r\n}\r\n\r\nconst rows = [\r\n  createData('Marshmallow', 318),\r\n  createData('Nougat', 360),\r\n  createData('Oreo', 437),\r\n];\r\n\r\nfunction desc<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort<T>(array: T[], cmp: (a: T, b: T) => number) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getSorting<K extends keyof any>(\r\n  order: Order,\r\n  orderBy: K,\r\n): (a: { [key in K]: number | string }, b: { [key in K]: number | string }) => number {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\ninterface HeadRow {\r\n  disablePadding: boolean;\r\n  id: keyof Data;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headRows: HeadRow[] = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Skill Name' },\r\n  { id: 'value', numeric: true, disablePadding: false, label: 'Skill Value' },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  classes: ReturnType<typeof useStyles>;\r\n  numSelected: number;\r\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n  rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headRows.map(row => (\r\n          <TableCell\r\n            key={row.id}\r\n            align={row.numeric ? 'right' : 'left'}\r\n            padding={row.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === row.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === row.id}\r\n              direction={order}\r\n              onClick={createSortHandler(row.id)}\r\n            >\r\n              {row.label}\r\n              {orderBy === row.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n          }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n          },\r\n    spacer: {\r\n      flex: '1 1 100%',\r\n    },\r\n    actions: {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    title: {\r\n      flex: '0 0 auto',\r\n    },\r\n  }),\r\n);\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  numSelected: number;\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Skill\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('value');\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  function handleRequestSort(event: React.MouseEvent<unknown>, property: keyof Data) {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  }\r\n\r\n  function handleSelectAllClick(event: React.ChangeEvent<HTMLInputElement>) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }\r\n\r\n  function handleClick(event: React.MouseEvent<unknown>, name: string) {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  }\r\n\r\n  function handleChangePage(event: unknown, newPage: number) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event: React.ChangeEvent<HTMLInputElement>) {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  }\r\n\r\n  function handleChangeDense(event: React.ChangeEvent<HTMLInputElement>) {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.value}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'previous page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'next page',\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    numberField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 50,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n  skills: skill[],\r\n  characterBackground: string | undefined,\r\n  abilityValues: abilityValue,\r\n  characterInfos: characterInfo,\r\n};\r\n\r\ntype Props = {\r\n  character: character;\r\n  setCharacterName: (characterName: string) => void;\r\n  setHP: (hp: number) => void;\r\n  setMP: (mp: number) => void;\r\n  setSAN: (san: number) => void;\r\n  setCharacterBackground: (background: string) => void;\r\n  setCharacterInfos: (characterInfos: characterInfo) => void;\r\n  setAbilityValues: (abilityValues: abilityValue) => void;\r\n};\r\n\r\nconst Character: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  console.log(props.character);\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        id=\"characterName\"\r\n        label=\"Character Name\"\r\n        defaultValue={props.character.characterInfos.characterName}\r\n        className={clsx(classes.textField, classes.dense)}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {props.setCharacterName(event.target.value);}}\r\n        margin=\"dense\"\r\n      />\r\n      <br />\r\n\r\n      <TextField\r\n      id=\"hp\"\r\n      label=\"HP\"\r\n      type=\"number\"\r\n      value={props.character.characterInfos.HP}\r\n      className={clsx(classes.numberField, classes.dense)}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setHP(+event.target.value)}}\r\n      placeholder=\"HP\"\r\n      margin=\"normal\"\r\n      />\r\n      <TextField\r\n      id=\"mp\"\r\n      label=\"MP\"\r\n      type=\"number\"\r\n      value={props.character.characterInfos.MP}\r\n      className={clsx(classes.numberField, classes.dense)}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setMP(+event.target.value)}}\r\n      placeholder=\"MP\"\r\n      margin=\"normal\"\r\n      />\r\n      <TextField\r\n      id=\"san\"\r\n      label=\"SAN\"\r\n      type=\"number\"\r\n      value={props.character.characterInfos.SAN}\r\n      className={clsx(classes.numberField, classes.dense)}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setSAN(+event.target.value)}}\r\n      placeholder=\"SAN\"\r\n      margin=\"normal\"\r\n      />\r\n      <br />\r\n\r\n      <TextField\r\n      id=\"str\"\r\n      label=\"STR\"\r\n      type=\"number\"\r\n      value={props.character.abilityValues.STR}\r\n      className={clsx(classes.numberField, classes.dense)}\r\n      onChange={\r\n        (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newAbilityValues : abilityValue = props.character.abilityValues;\r\n        newAbilityValues.STR = +event.target.value;\r\n        props.setAbilityValues(newAbilityValues);\r\n      }}\r\n      placeholder=\"STR\"\r\n      margin=\"normal\"\r\n      />\r\n      <TextField\r\n      id=\"con\"\r\n      label=\"CON\"\r\n      type=\"number\"\r\n      value={props.character.abilityValues.CON}\r\n      className={clsx(classes.numberField, classes.dense)}\r\n      onChange={\r\n        (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newAbilityValues : abilityValue = props.character.abilityValues;\r\n        newAbilityValues.CON = +event.target.value;\r\n        props.setAbilityValues(newAbilityValues);}}\r\n      placeholder=\"CON\"\r\n      margin=\"normal\"\r\n      />\r\n      <TextField\r\n      id=\"pow\"\r\n      label=\"POW\"\r\n      type=\"number\"\r\n      value={props.character.abilityValues.POW}\r\n      className={clsx(classes.numberField, classes.dense)}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newAbilityValues : abilityValue = props.character.abilityValues;\r\n        newAbilityValues.POW = +event.target.value;\r\n        props.setAbilityValues(newAbilityValues);}}\r\n      placeholder=\"POW\"\r\n      margin=\"normal\"\r\n      />\r\n      <TextField\r\n      id=\"dex\"\r\n      label=\"DEX\"\r\n      type=\"number\"\r\n      value={props.character.abilityValues.DEX}\r\n      className={clsx(classes.numberField, classes.dense)}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newAbilityValues : abilityValue = props.character.abilityValues;\r\n        newAbilityValues.DEX = +event.target.value;\r\n        props.setAbilityValues(newAbilityValues);}}\r\n      placeholder=\"DEX\"\r\n      margin=\"normal\"\r\n      />\r\n      <br />\r\n\r\n      <TextField\r\n      id=\"app\"\r\n      label=\"APP\"\r\n      type=\"number\"\r\n      value={props.character.abilityValues.APP}\r\n      className={clsx(classes.numberField, classes.dense)}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newAbilityValues : abilityValue = props.character.abilityValues;\r\n        newAbilityValues.APP = +event.target.value;\r\n        props.setAbilityValues(newAbilityValues);}}\r\n      placeholder=\"APP\"\r\n      margin=\"normal\"\r\n      />\r\n      <TextField\r\n      id=\"siz\"\r\n      label=\"SIZ\"\r\n      type=\"number\"\r\n      value={props.character.abilityValues.SIZ}\r\n      className={clsx(classes.numberField, classes.dense)}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newAbilityValues : abilityValue = props.character.abilityValues;\r\n        newAbilityValues.SIZ = +event.target.value;\r\n        props.setAbilityValues(newAbilityValues);}}\r\n      placeholder=\"SIZ\"\r\n      margin=\"normal\"\r\n      />\r\n      <TextField\r\n      id=\"int\"\r\n      label=\"INT\"\r\n      type=\"number\"\r\n      value={props.character.abilityValues.INT}\r\n      className={clsx(classes.numberField, classes.dense)}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newAbilityValues : abilityValue = props.character.abilityValues;\r\n        newAbilityValues.INT = +event.target.value;\r\n        props.setAbilityValues(newAbilityValues);}}\r\n      placeholder=\"INT\"\r\n      margin=\"normal\"\r\n      />\r\n      <TextField\r\n      id=\"edu\"\r\n      label=\"EDU\"\r\n      type=\"number\"\r\n      value={props.character.abilityValues.EDU}\r\n      className={clsx(classes.numberField, classes.dense)}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newAbilityValues : abilityValue = props.character.abilityValues;\r\n        newAbilityValues.EDU = +event.target.value;\r\n        props.setAbilityValues(newAbilityValues);}}\r\n      placeholder=\"EDU\"\r\n      margin=\"normal\"\r\n      />\r\n\r\n      <br />\r\n      <TextField\r\n        id=\"background\"\r\n        label=\"Background\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={props.character.characterBackground}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setCharacterBackground(event.target.value)}}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Character;","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth'\r\nrequire('dotenv').config();\r\n\r\nconst config = {\r\n    apiKey:  process.env.REACT_APP_API_KEY,\r\n    authDomain:  process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL:  process.env.REACT_APP_DATABASE_URL,\r\n    projectId:  process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId:  process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport default firebase","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport firebase from '../modules/firebase'\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setUserName: (url: string) => void;\r\n  setPassword: (url: string) => void;\r\n};\r\n\r\nconst Skills: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = React.useState(props.discordUrl);\r\n  const [password, setPassword] = React.useState(props.diceUrl);\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  const login = (email: string, password: string) => {\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then(\r\n      ()=>{setValue('login');}\r\n    );\r\n  }\r\n\r\n  const logout = ():void =>{\r\n    firebase.auth().signOut().then(\r\n      ()=>{setValue('logout');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id='login'>\r\n    {(() => {\r\n        const user = firebase.auth().currentUser;\r\n        if (user) {\r\n            return <div>\r\n              { value }\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n              onClick = {():void =>{logout()}}>\r\n                Logout\r\n              </Button>\r\n            </div>;\r\n        }\r\n        return <div>\r\n        <h2>Login</h2>\r\n        <TextField\r\n          id=\"userName\"\r\n          label=\"User Name\"\r\n          defaultValue={props.diceUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setUserName(event.target.value);}}\r\n          margin=\"dense\"\r\n        /><br />\r\n        <TextField\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          defaultValue={props.discordUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setPassword(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{login(userName, password)}}>\r\n          Login\r\n        </Button>\r\n        </div>;\r\n    })()}\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Skills;","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport firebase from '../modules/firebase'\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setUserName: (url: string) => void;\r\n  setPassword: (url: string) => void;\r\n};\r\n\r\nconst Skills: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = React.useState(props.discordUrl);\r\n  const [password, setPassword] = React.useState(props.diceUrl);\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  const login = (email: string, password: string) => {\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then(\r\n      ()=>{setValue('login');}\r\n    );\r\n  }\r\n\r\n  const logout = ():void =>{\r\n    firebase.auth().signOut().then(\r\n      ()=>{setValue('logout');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id='login'>\r\n    {(() => {\r\n        const user = firebase.auth().currentUser;\r\n        if (user) {\r\n            return <div>\r\n              { value }\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n              onClick = {():void =>{logout()}}>\r\n                Logout\r\n              </Button>\r\n            </div>;\r\n        }\r\n        return <div>\r\n        <h2>Login</h2>\r\n        <TextField\r\n          id=\"userName\"\r\n          label=\"User Name\"\r\n          defaultValue={props.diceUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setUserName(event.target.value);}}\r\n          margin=\"dense\"\r\n        /><br />\r\n        <TextField\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          defaultValue={props.discordUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setPassword(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{login(userName, password)}}>\r\n          Login\r\n        </Button>\r\n        </div>;\r\n    })()}\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Skills;","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport firebase from '../modules/firebase'\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setUserName: (url: string) => void;\r\n  setPassword: (url: string) => void;\r\n};\r\n\r\nconst Skills: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = React.useState(props.discordUrl);\r\n  const [password, setPassword] = React.useState(props.diceUrl);\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  const login = (email: string, password: string) => {\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then(\r\n      ()=>{setValue('login');}\r\n    );\r\n  }\r\n\r\n  const logout = ():void =>{\r\n    firebase.auth().signOut().then(\r\n      ()=>{setValue('logout');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id='login'>\r\n    {(() => {\r\n        const user = firebase.auth().currentUser;\r\n        if (user) {\r\n            return <div>\r\n              { value }\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n              onClick = {():void =>{logout()}}>\r\n                Logout\r\n              </Button>\r\n            </div>;\r\n        }\r\n        return <div>\r\n        <h2>Login</h2>\r\n        <TextField\r\n          id=\"userName\"\r\n          label=\"User Name\"\r\n          defaultValue={props.diceUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setUserName(event.target.value);}}\r\n          margin=\"dense\"\r\n        /><br />\r\n        <TextField\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          defaultValue={props.discordUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setPassword(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{login(userName, password)}}>\r\n          Login\r\n        </Button>\r\n        </div>;\r\n    })()}\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Skills;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport SkillIcon from '@material-ui/icons/Assignment';\nimport CharacterIcon from '@material-ui/icons/Info';\nimport AbillityIcon from '@material-ui/icons/Face';\nimport SANIcon from '@material-ui/icons/OfflineBolt';\nimport BattleIcon from '@material-ui/icons/Security';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nfunction ListItemLink(props: ListItemProps<'a', { button?: true }>) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\nexport default function SimpleList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem button \n          component={Link}\n          to=\"/home/skill\">\n          <ListItemIcon>\n            <SkillIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Skill\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/character\">\n          <ListItemIcon>\n            <CharacterIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Character\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/abillity\">\n          <ListItemIcon>\n            <AbillityIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Abillity\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/san\">\n          <ListItemIcon>\n            <SANIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"SAN\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/battle\">\n          <ListItemIcon>\n            <BattleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Battle\" />\n        </ListItem>\n      </List>\n      <Divider />\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n        <ListItem button>\n          <ListItemText primary=\"Trash\" />\n        </ListItem>\n        <ListItemLink href=\"#simple-list\">\n          <ListItemText primary=\"Spam\" />\n        </ListItemLink>\n      </List>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nimport Skill from './Skill';\r\nimport Character from './Character';\r\nimport Abillity from './Abillity';\r\nimport SAN from './SAN';\r\nimport Battle from './Battle';\r\nimport SideBar from '../components/SideBar';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'relative',\r\n      display: 'flex',\r\n      zIndex: 0,\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ResponsiveDrawerProps {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  container?: Element;\r\n}\r\n\r\nexport default function ResponsiveDrawer(props: ResponsiveDrawerProps) {\r\n  const { container } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  function handleDrawerToggle() {\r\n    setMobileOpen(!mobileOpen);\r\n  }\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      {/* <Divider /> */}\r\n      <SideBar />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        \r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Drawer\r\n            container={container}\r\n            variant=\"permanent\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />   \r\n          <Switch>     \r\n            <Route exact path='/home/skill' component={Skill} container={document.getElementById(\"app-main\")}/>\r\n            <Route path='/home/character' component={Character} />\r\n            <Route path='/home/abillity' component={Abillity} />\r\n            <Route path='/home/san' component={SAN} />\r\n            <Route path='/home/battle' component={Battle} />\r\n          </Switch>  \r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport firebase from '../modules/firebase'\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setUserName: (url: string) => void;\r\n  setPassword: (url: string) => void;\r\n};\r\n\r\nconst Login: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = React.useState(props.discordUrl);\r\n  const [password, setPassword] = React.useState(props.diceUrl);\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  const login = (email: string, password: string) => {\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then(\r\n      ()=>{setValue('login');}\r\n    );\r\n  }\r\n\r\n  const logout = ():void =>{\r\n    firebase.auth().signOut().then(\r\n      ()=>{setValue('logout');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id='login'>\r\n    {(() => {\r\n        const user = firebase.auth().currentUser;\r\n        if (user) {\r\n            return <div>\r\n              { value }\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n              onClick = {():void =>{logout()}}>\r\n                Logout\r\n              </Button>\r\n            </div>;\r\n        }\r\n        return <div>\r\n        <h2>Login</h2>\r\n        <TextField\r\n          id=\"userName\"\r\n          label=\"User Name\"\r\n          defaultValue={props.diceUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setUserName(event.target.value);}}\r\n          margin=\"dense\"\r\n        /><br />\r\n        <TextField\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          defaultValue={props.discordUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setPassword(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{login(userName, password)}}>\r\n          Login\r\n        </Button>\r\n        </div>;\r\n    })()}\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import * as React from 'react';\r\nimport logo from '../PM_Desine.png';\r\n\r\nconst Main: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n        <img\r\n        src={logo}\r\n        alt=\"\" width=\"500\" height=\"400\"\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { setDiscordUrl, SetDiscordUrlAction } from './SetDiscordUrl';\r\nimport { setDiceUrl, SetDiceUrlAction } from './SetDiceUrl';\r\n\r\ntype Actions\r\n    = SetDiscordUrlAction\r\n    | SetDiceUrlAction;\r\n\r\nexport type State = {    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n    discordUrl: string;\r\n    diceUrl: string;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        discordUrl: \"\",\r\n        diceUrl: \"\",\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_DISCORD_URL_SETTING':\r\n            return {\r\n                ...state,\r\n                discordUrl: action.payload.url,\r\n            };\r\n        case 'SET_DICE_URL_SETTING':\r\n            return{\r\n                ...state,\r\n                diceUrl: action.payload.url,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setDiscordUrl,\r\n    setDiceUrl,\r\n};","import { Action } from 'redux';\r\n\r\nexport type SetDiscordUrlPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiscordUrlAction extends Action {\r\n    type: 'SET_DISCORD_URL_SETTING';\r\n    payload: SetDiscordUrlPayload;\r\n}\r\n\r\nexport const setDiscordUrl = (payload: SetDiscordUrlPayload): SetDiscordUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DISCORD_URL_SETTING',\r\n    };\r\n};","import { Action } from 'redux';\r\n\r\nexport type SetDiceUrlPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiceUrlAction extends Action {\r\n    type: 'SET_DICE_URL_SETTING';\r\n    payload: SetDiceUrlPayload;\r\n}\r\n\r\nexport const setDiceUrl = (payload: SetDiceUrlPayload): SetDiceUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DICE_URL_SETTING',\r\n    };\r\n};","import { combineReducers } from 'redux';\r\nimport * as Settings from './settings';\r\nimport * as Characters from './characters';\r\n\r\nexport type RootState = {\r\n    setting: Settings.State;\r\n    character: Characters.State;\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    setting: Settings.reducer,\r\n    character: Characters.reducer,\r\n});\r\n\r\nexport const actionCreator = {\r\n    setting: Settings.actionCreator,\r\n    character: Characters.actionCreator,\r\n};","import { setCharacter, SetCharacterAction } from './SetCharacter';\r\nimport { setSkills, SetSkillsAction } from './SetSkills';\r\nimport { setAbilityValues, SetAbilityValuesAction } from './SetAbilityValues';\r\nimport { setCharacterInfos, SetCharacterInfosAction } from './SetCharacterInfos';\r\nimport { setCharacterName, SetCharacterNameAction } from './SetCharacterName';\r\nimport { setHP, SetHPAction } from './SetHP';\r\nimport { setMP, SetMPAction } from './SetMP';\r\nimport { setSAN, SetSANAction } from './SetSAN';\r\nimport { setCharacterBackground, SetCharacterBackgroundAction } from './SetCharacterBackground';\r\n\r\ntype Actions\r\n    = SetCharacterAction | \r\n    SetSkillsAction| \r\n    SetAbilityValuesAction| \r\n    SetCharacterInfosAction| \r\n    SetCharacterNameAction| \r\n    SetHPAction| \r\n    SetMPAction|\r\n    SetSANAction|\r\n    SetCharacterBackgroundAction ;\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\nexport type State = {    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n    character: character;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        character: {\r\n            skills: [],\r\n            characterBackground: \"\",\r\n            abilityValues: {\r\n                STR: 0,\r\n                CON: 0,\r\n                POW: 0,\r\n                DEX: 0,\r\n                APP: 0,\r\n                SIZ: 0,\r\n                INT: 0,\r\n                EDU: 0\r\n            },\r\n            characterInfos: {\r\n                characterName: \"\",\r\n                HP: 0,\r\n                MP: 0,\r\n                SAN: 0,\r\n                damageBonus: \"\",\r\n                job: \"\",\r\n                age: 0,\r\n                sex: \"\",\r\n                height: 0,\r\n                weight: 0,\r\n                origin: \"\"\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_CHARACTER':\r\n            return{\r\n                ...state,\r\n                character: action.payload.character,\r\n            };\r\n        case 'SET_SKILLS':\r\n            return{\r\n                ...state,\r\n                character:{\r\n                    ...state.character,\r\n                    skills: action.payload.skills,\r\n                }\r\n            };\r\n        case 'SET_ABILITY_VALUES':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    abilityValues: action.payload.abilityValues,\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_INFOS':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: action.payload.characterInfos,\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_NAME':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        characterName: action.payload.characterName,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_HP':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        HP: action.payload.hp,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_MP':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        MP: action.payload.mp,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_BACKGROUND':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        characterBackground: action.payload.background,\r\n                    }\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setCharacter,\r\n    setSkills,\r\n    setAbilityValues,\r\n    setCharacterInfos,\r\n    setCharacterName,\r\n    setHP,\r\n    setMP,\r\n    setSAN,\r\n    setCharacterBackground\r\n};","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setDiceUrl: (url: string) => void;\r\n  setDiscordUrl: (url: string) => void;\r\n};\r\n\r\nconst Setting: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [nDiscord, setDisordValue] = React.useState(props.discordUrl);\r\n  const [nDice, setDiceValue] = React.useState(props.diceUrl);\r\n\r\n  const setUrl = (newDiceURL: string, newDiscordURL: string):void => {\r\n    props.setDiceUrl(newDiceURL);\r\n    props.setDiscordUrl(newDiscordURL);\r\n    console.log(newDiceURL);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Setting</h2>\r\n      <TextField\r\n        id=\"diceURL\"\r\n        label=\"Dice API URL\"\r\n        defaultValue={props.diceUrl}\r\n        className={clsx(classes.textField, classes.dense)}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setDiceValue(event.target.value);}}\r\n        margin=\"dense\"\r\n      />\r\n      <TextField\r\n        id=\"discordURL\"\r\n        label=\"Discord URL\"\r\n        defaultValue={props.discordUrl}\r\n        className={clsx(classes.textField, classes.dense)}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setDisordValue(event.target.value);}}\r\n        margin=\"dense\"\r\n      />\r\n      <br />\r\n      <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n      onClick = {():void =>{setUrl(nDice, nDiscord)}}>\r\n        SET\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Setting;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Setting from '../pages/Setting';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        discordUrl: state.setting.discordUrl,\r\n        diceUrl: state.setting.diceUrl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setDiceUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiceUrl({url}));\r\n        },\r\n        setDiscordUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiscordUrl({url}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Setting);","import * as React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Main from './pages/Main';\nimport Setting from './containers/Setting';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <header className=\"App-header\">\n          <NavBar />\n        </header>\n\n        <div className='App-main' id='app-main'>\n          <Route exact path='/' component={Main}/>\n          \n          <Route path='/home' component={Home} container={document.getElementById(\"app-main\")}/>\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/setting' component={Setting} />\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport './index.css';\n\nimport App from './App';\nimport { rootReducer } from './states';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App />\n    </Provider>,\n     document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/PM_Desine.02fe71ee.png\";"],"sourceRoot":""}