{"version":3,"sources":["PM_Desine.png","components/NavBar_PC.tsx","components/NavBar_Mobile.tsx","components/NavBar.tsx","states/settings/index.ts","states/settings/SetDiscordUrl.ts","states/settings/SetDiceUrl.ts","states/characters/index.ts","states/characters/SetCharacter.ts","states/characters/SetSkills.ts","states/characters/SetAbilityValues.ts","states/characters/SetCharacterInfos.ts","states/characters/SetCharacterName.ts","states/characters/SetHP.ts","states/characters/SetMP.ts","states/characters/SetSAN.ts","states/characters/SetCharacterBackground.ts","states/index.ts","modules/ShakeDice.ts","components/DiceDialog.tsx","modules/sendDiscord.ts","pages/Skill.tsx","containers/Skill.tsx","pages/Character.tsx","containers/Character.tsx","modules/getAbilityValue.ts","pages/Ability.tsx","containers/Ability.tsx","modules/shakeNDNDice.ts","components/DiceNDNDialog.tsx","pages/SAN.tsx","containers/SAN.tsx","pages/Battle.tsx","containers/Battle.tsx","components/ImportPMJDialog.tsx","modules/importPMJ.js","components/SideBar_PC.tsx","components/SideBar_Mobile.tsx","components/SideBar.tsx","containers/SideBar.tsx","pages/Home.tsx","containers/Home.tsx","modules/firebase.ts","pages/Login.tsx","pages/Main.tsx","pages/Setting.tsx","containers/Setting.tsx","pages/CreateAbility.tsx","components/SkillList_PC.tsx","components/SkillList_Mobile.tsx","components/SkillList.tsx","components/SkillPoint.tsx","pages/CreateSkills.tsx","pages/CreateInfos.tsx","pages/Making.tsx","containers/Making.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","position","zIndex","navBar","left","right","margin","width","menuButton","marginRight","spacing","title","navBarAction","NavBar","classes","React","useState","value","setValue","AppBar","className","Toolbar","Typography","variant","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","component","Link","to","label","icon","color","props","Button","onClick","setOpen","open","Hidden","smUp","implementation","xsDown","actionCreator","setDiscordUrl","payload","type","setDiceUrl","setCharacter","setSkills","setAbilityValues","setCharacterInfos","setCharacterName","setHP","setMP","setSAN","setCharacterBackground","rootReducer","combineReducers","setting","state","discordUrl","diceUrl","action","url","character","skills","characterBackground","abilityValues","STR","CON","POW","DEX","APP","SIZ","INT","EDU","characterInfos","characterName","HP","MP","SAN","damageBonus","job","age","sex","height","weight","origin","Object","assign","chara","hp","mp","san","background","Settings","Characters","ShakeDice","item","result","ok","_1d100Value","Math","round","random","diceValue","name","chip","textAlign","AlertDialog","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","Chip","DialogActions","autoFocus","sendBCDice","info","getDiceResultAsync","then","require","Webhook","user","error","sendDiscordText","getDiceResult","a","fetch","method","catch","response","json","breakpoints","up","table","minWidth","numberInfoField","marginLeft","fab","down","connect","dispatch","category","setCategory","skill","setSkill","openDialog","setOpenDialog","handleClick","skillName","str","Promise","resolve","reject","getSkillValue","val","getItem","handleDialogOpen","setItem","err","console","log","find","s","String","skillValue","ability","addSkill","skillType","skillUnique","skillWorkValue","skillInterestValue","defaultValue","newSkills","JSON","parse","stringify","cSkill","length","undefined","Fragment","Paper","clsx","TextField","target","placeholder","Fab","aria-label","InputLabel","htmlFor","Select","onOpen","inputProps","MenuItem","Table","TableHead","TableRow","TableCell","align","TableBody","filter","row","map","index","key","_","scope","button","input","display","textField","numberAbilityField","dense","marginTop","paper","padding","card","Character","multiline","rowsMax","Card","newAbilityValues","getAbility","abilityValue","eq","val1","val2","when","on","otherwise","match","pred","fn","chain","Ability","power","setPower","setItems","getAbilityValue","IntSumToString","results","reduce","total","data","ShakeNDNDice","diceResults","count","number","i","push","SANValue","diffSAN","setDiffSAN","SANFunc","countDice","setCountDice","numberDice","setNumberDice","SANIdea","idea","overflowX","minwidth","HPDiff","setHPDiff","nputFileBtnHide","opacity","appearance","FormDialog","File","file","setFile","fileName","setFileName","setChara","e","files","handleChangeFile","func","reader","FileReader","onerror","alert","readAsText","addEventListener","onSubmit","maxWidth","backgroundColor","palette","SimpleList","List","ListItem","ListItemIcon","ListItemText","primary","Divider","blob","Blob","window","URL","createObjectURL","link","document","createElement","download","href","body","appendChild","click","removeChild","message","charaDownload","SideBar","paddingTop","drawer","flexShrink","toolbar","mixins","drawerPaper","content","flexGrow","container","useTheme","handleDrawerToggle","setOpenMobile","openMobile","CssBaseline","Drawer","anchor","direction","ModalProps","keepMounted","exact","path","Skill","getElementById","Abillity","Battle","config","apiKey","process","authDomain","databaseURL","projectId","REACT_APP_PROJECT_ID","storageBucket","messagingSenderId","appId","firebase","menu","mobile","Login","userName","setUserName","password","setPassword","auth","currentUser","signOut","email","signInWithEmailAndPassword","login","Main","src","logo","alt","Setting","nDiscord","setDisordValue","nDice","setDiceValue","newDiceURL","newDiscordURL","Making","itemNDN","newCharacter","ceil","setAbilityToDice","head","SkillsTableRow","skillWork","setSkillWork","skillInterest","setSkillInterest","rowSpan","checkSetSkillValue","onBlur","setSkillWorkValue","setSkillInterestValue","size","test","top","bottom","marginBottom","SkillPoint","workPoint","interestPoint","skillTypes","getSkillIndex","setSkillValue","remainPoint","interest","openTable","setOpenTable","isWork","getRemainingWorkPoint","getRemainingInterestPoint","getSkills","element","newOpen","instructions","defaultSkills","activeStep","setActiveStep","Set","skipped","setSkipped","steps","Stepper","Step","StepLabel","CreateAbility","CreateSkills","CreateInfos","forEach","setUniqueSkills","setLastCharacter","step","getStepContent","disabled","prevActiveStep","newSkipped","has","values","delete","App","render","Home","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","createStore","ReactDOM","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ec043b6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PM_Desine.02fe71ee.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport PalletIcon from '@material-ui/icons/ColorLens';\r\nimport FavoriteIcon from '@material-ui/icons/OfflinePin';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            position: 'fixed',\r\n            zIndex: 1,\r\n        },\r\n        navBar: {\r\n            position: 'absolute',\r\n            left: 0,\r\n            right: 0,\r\n            margin: 'auto',\r\n            width: '50%',\r\n            zIndex: 2,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        title: {\r\n            //flexGrow: 1,\r\n        },\r\n        navBarAction: {\r\n            width: '25%',\r\n        },\r\n    })\r\n);\r\n\r\nconst NavBar: React.SFC = () => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('recents');\r\n\r\n    function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\r\n        setValue(newValue);\r\n    }\r\n\r\n    return (\r\n        <AppBar className={classes.root}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Palletmaster\r\n                </Typography>\r\n\r\n                <BottomNavigation\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    className={classes.navBar}\r\n                    showLabels\r\n                >\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/home\"\r\n                        label=\"Pallet\"\r\n                        value=\"pallet\"\r\n                        title=\"セッションのデータ管理\"\r\n                        icon={<PalletIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/login\"\r\n                        label=\"Login\"\r\n                        value=\"login\"\r\n                        title=\"ログイン画面\"\r\n                        icon={<FavoriteIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/setting\"\r\n                        label=\"Setting\"\r\n                        value=\"setting\"\r\n                        title=\"ダイスとDiscordの設定\"\r\n                        icon={<SettingIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/making\"\r\n                        label=\"Create\"\r\n                        value=\"create\"\r\n                        title=\"キャラクターの作成\"\r\n                        icon={<CreateIcon />}\r\n                    />\r\n                </BottomNavigation>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport PalletIcon from '@material-ui/icons/ColorLens';\r\nimport FavoriteIcon from '@material-ui/icons/OfflinePin';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            position: 'fixed',\r\n            zIndex: 1,\r\n        },\r\n        navBar: {\r\n            position: 'absolute',\r\n            left: 0,\r\n            right: 0,\r\n            margin: 'auto',\r\n            width: '100%',\r\n            zIndex: 2,\r\n        },\r\n        title: {\r\n            //flexGrow: 1,\r\n        },\r\n        navBarAction: {\r\n            width: '20%',\r\n        },\r\n        icon: {\r\n            color: 'white',\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    setOpen: (open: boolean) => void;\r\n};\r\n\r\nconst NavBar: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('recents');\r\n\r\n    function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\r\n        setValue(newValue);\r\n    }\r\n\r\n    return (\r\n        <AppBar className={classes.root}>\r\n            <Toolbar>\r\n                <Button\r\n                    onClick={() => {\r\n                        props.setOpen(!props.open);\r\n                    }}\r\n                >\r\n                    <DehazeIcon className={classes.icon} />\r\n                </Button>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Palletmaster\r\n                </Typography>\r\n            </Toolbar>\r\n            <Toolbar>\r\n                <BottomNavigation\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    className={classes.navBar}\r\n                    showLabels\r\n                >\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/home\"\r\n                        label=\"Pallet\"\r\n                        value=\"pallet\"\r\n                        title=\"セッションのデータ管理\"\r\n                        icon={<PalletIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/login\"\r\n                        label=\"Login\"\r\n                        value=\"login\"\r\n                        title=\"ログイン画面\"\r\n                        icon={<FavoriteIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/setting\"\r\n                        label=\"Setting\"\r\n                        value=\"setting\"\r\n                        title=\"ダイスとDiscordの設定\"\r\n                        icon={<SettingIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/making\"\r\n                        label=\"Create\"\r\n                        value=\"create\"\r\n                        title=\"キャラクターの作成\"\r\n                        icon={<CreateIcon />}\r\n                    />\r\n                </BottomNavigation>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport NavBarPC from './NavBar_PC';\r\nimport NavBarMobile from './NavBar_Mobile';\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    setOpen: (open: boolean) => void;\r\n};\r\n\r\nconst NavBar: React.SFC<Props> = (props: Props) => {\r\n    return (\r\n        <div>\r\n            {/* タブレット以上なら隠す -- モバイル画面で表示 */}\r\n            <Hidden smUp implementation=\"css\">\r\n                <NavBarMobile open={props.open} setOpen={props.setOpen} />\r\n            </Hidden>\r\n\r\n            {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\r\n            <Hidden xsDown implementation=\"css\">\r\n                <NavBarPC />\r\n            </Hidden>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import { setDiscordUrl, SetDiscordUrlAction } from './SetDiscordUrl';\r\nimport { setDiceUrl, SetDiceUrlAction } from './SetDiceUrl';\r\n\r\ntype Actions = SetDiscordUrlAction | SetDiceUrlAction;\r\n\r\nexport type State = {\r\n    discordUrl: string;\r\n    diceUrl: string;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        discordUrl: '',\r\n        diceUrl: '',\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_DISCORD_URL_SETTING':\r\n            return {\r\n                ...state,\r\n                discordUrl: action.payload.url,\r\n            };\r\n        case 'SET_DICE_URL_SETTING':\r\n            return {\r\n                ...state,\r\n                diceUrl: action.payload.url,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setDiscordUrl,\r\n    setDiceUrl,\r\n};\r\n","import { Action } from 'redux';\r\n\r\nexport type SetDiscordUrlPayload = {\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiscordUrlAction extends Action {\r\n    type: 'SET_DISCORD_URL_SETTING';\r\n    payload: SetDiscordUrlPayload;\r\n}\r\n\r\nexport const setDiscordUrl = (\r\n    payload: SetDiscordUrlPayload\r\n): SetDiscordUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DISCORD_URL_SETTING',\r\n    };\r\n};\r\n","import { Action } from 'redux';\r\n\r\nexport type SetDiceUrlPayload = {\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiceUrlAction extends Action {\r\n    type: 'SET_DICE_URL_SETTING';\r\n    payload: SetDiceUrlPayload;\r\n}\r\n\r\nexport const setDiceUrl = (payload: SetDiceUrlPayload): SetDiceUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DICE_URL_SETTING',\r\n    };\r\n};\r\n","import { setCharacter, SetCharacterAction } from './SetCharacter';\r\nimport { setSkills, SetSkillsAction } from './SetSkills';\r\nimport { setAbilityValues, SetAbilityValuesAction } from './SetAbilityValues';\r\nimport {\r\n    setCharacterInfos,\r\n    SetCharacterInfosAction,\r\n} from './SetCharacterInfos';\r\nimport { setCharacterName, SetCharacterNameAction } from './SetCharacterName';\r\nimport { setHP, SetHPAction } from './SetHP';\r\nimport { setMP, SetMPAction } from './SetMP';\r\nimport { setSAN, SetSANAction } from './SetSAN';\r\nimport {\r\n    setCharacterBackground,\r\n    SetCharacterBackgroundAction,\r\n} from './SetCharacterBackground';\r\n\r\ntype Actions =\r\n    | SetCharacterAction\r\n    | SetSkillsAction\r\n    | SetAbilityValuesAction\r\n    | SetCharacterInfosAction\r\n    | SetCharacterNameAction\r\n    | SetHPAction\r\n    | SetMPAction\r\n    | SetSANAction\r\n    | SetCharacterBackgroundAction;\r\n\r\ntype skill = {\r\n    skillName: string;\r\n    skillValue: number;\r\n    skillType: string;\r\n    skillUnique: boolean;\r\n    skillWorkValue: number;\r\n    skillInterestValue: number;\r\n    defaultValue: number;\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number;\r\n    CON: number;\r\n    POW: number;\r\n    DEX: number;\r\n    APP: number;\r\n    SIZ: number;\r\n    INT: number;\r\n    EDU: number;\r\n};\r\n\r\ntype characterInfo = {\r\n    characterName: string;\r\n    HP: number;\r\n    MP: number;\r\n    SAN: number;\r\n    damageBonus: string;\r\n    job: string;\r\n    age: number;\r\n    sex: string;\r\n    height: number;\r\n    weight: number;\r\n    origin: string;\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n};\r\n\r\nexport type State = {\r\n    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n    character: character;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        character: {\r\n            skills: [],\r\n            characterBackground: '',\r\n            abilityValues: {\r\n                STR: 0,\r\n                CON: 0,\r\n                POW: 0,\r\n                DEX: 0,\r\n                APP: 0,\r\n                SIZ: 0,\r\n                INT: 0,\r\n                EDU: 0,\r\n            },\r\n            characterInfos: {\r\n                characterName: '',\r\n                HP: 0,\r\n                MP: 0,\r\n                SAN: 0,\r\n                damageBonus: '',\r\n                job: '',\r\n                age: 0,\r\n                sex: '',\r\n                height: 0,\r\n                weight: 0,\r\n                origin: '',\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_CHARACTER':\r\n            return Object.assign({}, state, {\r\n                character: action.payload.chara,\r\n            });\r\n        case 'SET_SKILLS':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    skills: action.payload.skills,\r\n                },\r\n            };\r\n        case 'SET_ABILITY_VALUES':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    abilityValues: action.payload.abilityValues,\r\n                },\r\n            };\r\n        case 'SET_CHARACTER_INFOS':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    characterInfos: action.payload.characterInfos,\r\n                },\r\n            };\r\n        case 'SET_CHARACTER_NAME':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        characterName: action.payload.characterName,\r\n                    },\r\n                },\r\n            };\r\n        case 'SET_HP':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        HP: action.payload.hp,\r\n                    },\r\n                },\r\n            };\r\n        case 'SET_MP':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        MP: action.payload.mp,\r\n                    },\r\n                },\r\n            };\r\n        case 'SET_SAN':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        SAN: action.payload.san,\r\n                    },\r\n                },\r\n            };\r\n        case 'SET_CHARACTER_BACKGROUND':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    characterBackground: action.payload.background,\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setCharacter,\r\n    setSkills,\r\n    setAbilityValues,\r\n    setCharacterInfos,\r\n    setCharacterName,\r\n    setHP,\r\n    setMP,\r\n    setSAN,\r\n    setCharacterBackground,\r\n};\r\n","import { Action } from 'redux';\r\n\r\ntype skill = {\r\n    skillName: string;\r\n    skillValue: number;\r\n    skillType: string;\r\n    skillUnique: boolean;\r\n    skillWorkValue: number;\r\n    skillInterestValue: number;\r\n    defaultValue: number;\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number;\r\n    CON: number;\r\n    POW: number;\r\n    DEX: number;\r\n    APP: number;\r\n    SIZ: number;\r\n    INT: number;\r\n    EDU: number;\r\n};\r\n\r\ntype characterInfo = {\r\n    characterName: string;\r\n    HP: number;\r\n    MP: number;\r\n    SAN: number;\r\n    damageBonus: string;\r\n    job: string;\r\n    age: number;\r\n    sex: string;\r\n    height: number;\r\n    weight: number;\r\n    origin: string;\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n};\r\n\r\nexport type SetCharacterPayload = {\r\n    // todoを追加する時に必要なのはtodoの内容くらい\r\n    chara: character;\r\n};\r\n\r\nexport interface SetCharacterAction extends Action {\r\n    type: 'SET_CHARACTER';\r\n    payload: SetCharacterPayload;\r\n}\r\n\r\nexport const setCharacter = (\r\n    payload: SetCharacterPayload\r\n): SetCharacterAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_CHARACTER',\r\n    };\r\n};\r\n","import { Action } from 'redux';\n\ntype skill = {\n    skillName: string;\n    skillValue: number;\n    skillType: string;\n    skillUnique: boolean;\n    skillWorkValue: number;\n    skillInterestValue: number;\n    defaultValue: number;\n};\n\nexport type SetSkillsPayload = {\n    skills: skill[];\n};\n\nexport interface SetSkillsAction extends Action {\n    type: 'SET_SKILLS';\n    payload: SetSkillsPayload;\n}\n\nexport const setSkills = (payload: SetSkillsPayload): SetSkillsAction => {\n    return {\n        payload,\n        type: 'SET_SKILLS',\n    };\n};\n","import { Action } from 'redux';\n\ntype AbilityValues = {\n    STR: number;\n    CON: number;\n    POW: number;\n    DEX: number;\n    APP: number;\n    SIZ: number;\n    INT: number;\n    EDU: number;\n};\n\nexport type SetAbilityValuesPayload = {\n    // todoを追加する時に必要なのはtodoの内容くらい\n    abilityValues: AbilityValues;\n};\n\nexport interface SetAbilityValuesAction extends Action {\n    type: 'SET_ABILITY_VALUES';\n    payload: SetAbilityValuesPayload;\n}\n\nexport const setAbilityValues = (\n    payload: SetAbilityValuesPayload\n): SetAbilityValuesAction => {\n    return {\n        payload,\n        type: 'SET_ABILITY_VALUES',\n    };\n};\n","import { Action } from 'redux';\n\ntype CharacterInfos = {\n    characterName: string;\n    HP: number;\n    MP: number;\n    SAN: number;\n    damageBonus: string;\n    job: string;\n    age: number;\n    sex: string;\n    height: number;\n    weight: number;\n    origin: string;\n};\n\nexport type SetCharacterInfosPayload = {\n    // todoを追加する時に必要なのはtodoの内容くらい\n    characterInfos: CharacterInfos;\n};\n\nexport interface SetCharacterInfosAction extends Action {\n    type: 'SET_CHARACTER_INFOS';\n    payload: SetCharacterInfosPayload;\n}\n\nexport const setCharacterInfos = (\n    payload: SetCharacterInfosPayload\n): SetCharacterInfosAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_INFOS',\n    };\n};\n","import { Action } from 'redux';\n\nexport type SetCharacterNamePayload = {\n    // todoを追加する時に必要なのはtodoの内容くらい\n    characterName: string;\n};\n\nexport interface SetCharacterNameAction extends Action {\n    type: 'SET_CHARACTER_NAME';\n    payload: SetCharacterNamePayload;\n}\n\nexport const setCharacterName = (\n    payload: SetCharacterNamePayload\n): SetCharacterNameAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_NAME',\n    };\n};\n","import { Action } from 'redux';\n\nexport type SetHPPayload = {\n    hp: number;\n};\n\nexport interface SetHPAction extends Action {\n    type: 'SET_HP';\n    payload: SetHPPayload;\n}\n\nexport const setHP = (payload: SetHPPayload): SetHPAction => {\n    return {\n        payload,\n        type: 'SET_HP',\n    };\n};\n","import { Action } from 'redux';\n\nexport type SetMPPayload = {\n    mp: number;\n};\n\nexport interface SetMPAction extends Action {\n    type: 'SET_MP';\n    payload: SetMPPayload;\n}\n\nexport const setMP = (payload: SetMPPayload): SetMPAction => {\n    return {\n        payload,\n        type: 'SET_MP',\n    };\n};\n","import { Action } from 'redux';\n\nexport type SetSANPayload = {\n    san: number;\n};\n\nexport interface SetSANAction extends Action {\n    type: 'SET_SAN';\n    payload: SetSANPayload;\n}\n\nexport const setSAN = (payload: SetSANPayload): SetSANAction => {\n    return {\n        payload,\n        type: 'SET_SAN',\n    };\n};\n","import { Action } from 'redux';\n\nexport type SetCharacterBackgroundPayload = {\n    // todoを追加する時に必要なのはtodoの内容くらい\n    background: string;\n};\n\nexport interface SetCharacterBackgroundAction extends Action {\n    type: 'SET_CHARACTER_BACKGROUND';\n    payload: SetCharacterBackgroundPayload;\n}\n\nexport const setCharacterBackground = (\n    payload: SetCharacterBackgroundPayload\n): SetCharacterBackgroundAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_BACKGROUND',\n    };\n};\n","import { combineReducers } from 'redux';\r\nimport * as Settings from './settings';\r\nimport * as Characters from './characters';\r\n\r\nexport type RootState = {\r\n    setting: Settings.State;\r\n    character: Characters.State;\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    setting: Settings.reducer,\r\n    character: Characters.reducer,\r\n});\r\n\r\nexport const actionCreator = {\r\n    setting: Settings.actionCreator,\r\n    character: Characters.actionCreator,\r\n};\r\n","interface Item {\r\n    name: string;\r\n    url: string;\r\n    user: string;\r\n    diceValue: string;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\nfunction ShakeDice(item: Item): Result {\r\n    let result: Result = {\r\n        ok: '',\r\n        result: '',\r\n    };\r\n\r\n    let _1d100Value: number = Math.round(Math.random() * 100) + 1;\r\n\r\n    if (_1d100Value <= 5) {\r\n        result.ok = 'クリティカル';\r\n    } else if (_1d100Value <= +item.diceValue) {\r\n        result.ok = '成功';\r\n    } else {\r\n        result.ok = '失敗';\r\n    }\r\n\r\n    result.result =\r\n        '技能:' + item.name + ' ' + _1d100Value + ' <= ' + item.diceValue;\r\n\r\n    return result;\r\n}\r\n\r\nexport default ShakeDice;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ShakeDice from '../modules/ShakeDice';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chip: {\r\n            textAlign: 'center',\r\n        },\r\n    })\r\n);\r\n\r\ninterface Item {\r\n    name: string;\r\n    url: string;\r\n    user: string;\r\n    diceValue: string;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    item: Item;\r\n    setOpen(open: boolean): void;\r\n};\r\n\r\nexport default function AlertDialog(props: Props) {\r\n    const classes = useStyles();\r\n\r\n    let result: Result = {\r\n        ok: '',\r\n        result: '',\r\n    };\r\n\r\n    if (props.open) {\r\n        result = ShakeDice(props.item);\r\n    }\r\n\r\n    function handleClose() {\r\n        props.setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {'Dice Result'}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {result.ok === '失敗' ? (\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Chip\r\n                                color=\"default\"\r\n                                label={result.ok}\r\n                                className={classes.chip}\r\n                            />\r\n                        </DialogContentText>\r\n                    ) : result.ok === '成功' ? (\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Chip\r\n                                color=\"primary\"\r\n                                label={result.ok}\r\n                                className={classes.chip}\r\n                            />\r\n                        </DialogContentText>\r\n                    ) : (\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Chip\r\n                                color=\"secondary\"\r\n                                label={result.ok}\r\n                                className={classes.chip}\r\n                            />\r\n                        </DialogContentText>\r\n                    )}\r\n                    <br />\r\n\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {result.result}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","interface HookInfo {\r\n    name: string;\r\n    url: string;\r\n    user: string;\r\n    diceValue: string;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\nexport default function sendBCDice(info: HookInfo) {\r\n    getDiceResultAsync(info).then((result: Result) => {\r\n        sendDiscordText(result, info);\r\n    });\r\n}\r\n\r\nexport const getDiceResult = async (diceValue: string): Promise<any> => {\r\n    const url =\r\n        'https://www.taruki.com/bcdice-api' +\r\n        '/v1/diceroll?system=Cthulhu&command=' +\r\n        'CCB<=' +\r\n        diceValue; // リクエスト先URL\r\n    return await fetch(url, {\r\n        method: 'GET',\r\n    });\r\n};\r\n\r\nexport const getDiceResultAsync = async (info: HookInfo): Promise<Result> => {\r\n    const response = await getDiceResult(info.diceValue).catch(error => error);\r\n    const result = response.json();\r\n    return result;\r\n};\r\n\r\nfunction sendDiscordText(result: Result, item: HookInfo): boolean {\r\n    if (result.ok) {\r\n        try {\r\n            const webhook = require('webhook-discord');\r\n\r\n            const Hook = new webhook.Webhook(item.url);\r\n            Hook.info(item.user, item.name + ' ' + result.result);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport clsx from 'clsx';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport sendBCDice from '../modules/sendDiscord';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '75%',\r\n            },\r\n            margin: 'auto',\r\n            marginTop: theme.spacing(3),\r\n            overflowX: 'auto',\r\n        },\r\n        table: {\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                minWidth: 500,\r\n            },\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(5),\r\n            marginRight: 'auto',\r\n            width: 120,\r\n        },\r\n        fab: {\r\n            marginLeft: '5px',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(5),\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        chip: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(5),\r\n                margin: theme.spacing(1),\r\n            },\r\n            [theme.breakpoints.down('xs')]: {\r\n                textAlign: 'left',\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    skills: skill[];\r\n    characterName: string;\r\n    setSkills(skills: skill[]): void;\r\n    discordUrl: string;\r\n};\r\n\r\nexport default function SimpleTable(props: Props) {\r\n    const classes = useStyles();\r\n    const [category, setCategory] = React.useState<string>('unique');\r\n    const [skill, setSkill] = React.useState<string>('');\r\n    const [value, setValue] = React.useState<number>(0);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n    const handleClick = (skillName: string): void => {\r\n        var promise = (str: string): Promise<string> => {\r\n            return new Promise(function(resolve, reject) {\r\n                const skillValue = getSkillValue(str);\r\n                resolve(skillValue);\r\n            });\r\n        };\r\n        promise(skillName)\r\n            .then(val => {\r\n                const info = getItem(skillName, val);\r\n                handleDialogOpen(info);\r\n                setItem(info);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const getSkillValue = (skillName: string): string | undefined => {\r\n        const skill: skill | undefined = props.skills.find(\r\n            s => s.skillName === skillName\r\n        );\r\n        if (skill == null) return undefined;\r\n        return String(skill.skillValue);\r\n    };\r\n\r\n    function handleChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n        setCategory(event.target.value as string);\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleDialogOpen(info: any) {\r\n        props.discordUrl !== '' ? sendBCDice(info) : setOpenDialog(true);\r\n    }\r\n\r\n    const [item, setItem] = React.useState({\r\n        name: '',\r\n        url: '',\r\n        user: '',\r\n        diceValue: '',\r\n    });\r\n\r\n    const getItem = (ability: string, value: string): any => {\r\n        return {\r\n            name: ability,\r\n            url: props.discordUrl,\r\n            user: props.characterName,\r\n            diceValue: value,\r\n        };\r\n    };\r\n\r\n    const setSkills = (skill: string, value: number): void => {\r\n        const addSkill: skill = {\r\n            skillName: '',\r\n            skillValue: 0,\r\n            skillType: '追加',\r\n            skillUnique: true,\r\n            skillWorkValue: 0,\r\n            skillInterestValue: 0,\r\n            defaultValue: 0,\r\n        };\r\n\r\n        const newSkills = JSON.parse(JSON.stringify(props.skills));\r\n\r\n        const cSkill =\r\n            newSkills.length == null || newSkills.length === 0\r\n                ? undefined\r\n                : newSkills.find(\r\n                      (s: { skillName: string }) => s.skillName === skill\r\n                  );\r\n\r\n        if (cSkill == null) {\r\n            addSkill.skillName = skill;\r\n            addSkill.skillValue = value;\r\n            props.setSkills([...props.skills, addSkill]);\r\n        } else {\r\n            cSkill.skillValue = value;\r\n            props.setSkills(newSkills);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Paper className={clsx(classes.root)}>\r\n                <br />\r\n                {/* タブレット以上なら隠す -- モバイル画面で表示 */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Chip color=\"primary\" label=\"Skill\" />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Skill\"\r\n                        type=\"text\"\r\n                        defaultValue={skill}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setSkill(event.target.value);\r\n                        }}\r\n                        placeholder=\"Skill\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <br />\r\n                    <Chip\r\n                        color=\"primary\"\r\n                        label=\"Value\"\r\n                        className={classes.chip}\r\n                    />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Value\"\r\n                        type=\"number\"\r\n                        defaultValue={value}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setValue(+event.target.value);\r\n                        }}\r\n                        placeholder=\"Value\"\r\n                        margin=\"normal\"\r\n                    />\r\n\r\n                    <br />\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        aria-label=\"add\"\r\n                        className={classes.fab}\r\n                    >\r\n                        <AddIcon\r\n                            onClick={() => {\r\n                                setSkills(skill, value);\r\n                            }}\r\n                        />\r\n                    </Fab>\r\n                </Hidden>\r\n\r\n                {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Chip color=\"primary\" label=\"Skill\" />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Skill\"\r\n                        type=\"text\"\r\n                        defaultValue={skill}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setSkill(event.target.value);\r\n                        }}\r\n                        placeholder=\"Skill\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <Chip\r\n                        color=\"primary\"\r\n                        label=\"Value\"\r\n                        className={classes.chip}\r\n                    />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Value\"\r\n                        type=\"number\"\r\n                        defaultValue={value}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setValue(+event.target.value);\r\n                        }}\r\n                        placeholder=\"Value\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        aria-label=\"add\"\r\n                        className={classes.fab}\r\n                    >\r\n                        <AddIcon\r\n                            onClick={() => {\r\n                                setSkills(skill, value);\r\n                            }}\r\n                        />\r\n                    </Fab>\r\n                </Hidden>\r\n\r\n                <br />\r\n                <br />\r\n\r\n                <InputLabel htmlFor=\"demo-controlled-open-select\">\r\n                    Category\r\n                </InputLabel>\r\n                <Select\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    value={category}\r\n                    onChange={handleChange}\r\n                    inputProps={{\r\n                        name: 'category',\r\n                        id: 'demo-controlled-open-select',\r\n                    }}\r\n                >\r\n                    <MenuItem value=\"unique\">\r\n                        <em>Unique</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={'戦闘'}>Fight</MenuItem>\r\n                    <MenuItem value={'探索'}>Search</MenuItem>\r\n                    <MenuItem value={'知識'}>Wisdom</MenuItem>\r\n                    <MenuItem value={'行動'}>Act</MenuItem>\r\n                    <MenuItem value={'交渉'}>Negotiation</MenuItem>\r\n                    <MenuItem value={'all'}>ALL</MenuItem>\r\n                </Select>\r\n                <br />\r\n                <br />\r\n            </Paper>\r\n\r\n            <Paper className={classes.root}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Skill</TableCell>\r\n                            <TableCell align=\"right\">Value</TableCell>\r\n                            <TableCell align=\"right\">Type</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.skills\r\n                            .filter(row => {\r\n                                return (\r\n                                    (category === 'unique' &&\r\n                                        row.skillUnique) ||\r\n                                    (category !== 'unique' &&\r\n                                        row.skillType === category) ||\r\n                                    category === 'all'\r\n                                );\r\n                            })\r\n                            .map((row, index) => {\r\n                                return (\r\n                                    <TableRow\r\n                                        key={row.skillName + index}\r\n                                        onClick={_ => {\r\n                                            console.log('onclick');\r\n                                            handleClick(row.skillName);\r\n                                        }}\r\n                                    >\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.skillName}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            {row.skillValue}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            {row.skillType}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                <DiceDialog\r\n                    open={openDialog}\r\n                    setOpen={setOpenDialog}\r\n                    item={item}\r\n                />\r\n            </Paper>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Skill from '../pages/Skill';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return { \r\n        skills: state.character.character.skills,\r\n        discordUrl: state.setting.discordUrl,\r\n        characterName: state.character.character.characterInfos.characterName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSkills: (skills: skill[]) => {\r\n            dispatch(actionCreator.character.setSkills({skills}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Skill);","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '80%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 360,\r\n            },\r\n        },\r\n        numberAbilityField: {\r\n            marginLeft: 0,\r\n            marginRight: 6,\r\n            width: '20%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 78,\r\n            },\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '30%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 120,\r\n            },\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            padding: theme.spacing(3, 2),\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 600,\r\n            },\r\n        },\r\n        card: {\r\n            margin: 'auto',\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 500,\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    characterInfos: characterInfo;\r\n    abilityValues: abilityValue;\r\n    characterBackground: string | undefined;\r\n    setCharacterName: (characterName: string) => void;\r\n    setHP: (hp: number) => void;\r\n    setMP: (mp: number) => void;\r\n    setSAN: (san: number) => void;\r\n    setCharacterBackground: (background: string) => void;\r\n    setCharacterInfos: (characterInfos: characterInfo) => void;\r\n    setAbilityValues: (abilityValues: abilityValue) => void;\r\n};\r\n\r\nconst Character: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <h2>Character Infomation</h2>\r\n\r\n            <TextField\r\n                id=\"characterName\"\r\n                label=\"Character Name\"\r\n                value={props.characterInfos.characterName}\r\n                className={clsx(classes.textField, classes.dense)}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    props.setCharacterName(event.target.value);\r\n                }}\r\n                margin=\"dense\"\r\n            />\r\n            <br />\r\n            <TextField\r\n                id=\"background\"\r\n                label=\"Background\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                value={props.characterBackground}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    props.setCharacterBackground(event.target.value);\r\n                }}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n            />\r\n            <Card className={classes.card}>\r\n                <br />\r\n                physical value\r\n                <br />\r\n                <TextField\r\n                    id=\"hp\"\r\n                    label=\"HP\"\r\n                    type=\"number\"\r\n                    defaultValue={props.characterInfos.HP}\r\n                    className={clsx(classes.numberInfoField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setHP(+event.target.value);\r\n                    }}\r\n                    placeholder=\"HP\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"mp\"\r\n                    label=\"MP\"\r\n                    type=\"number\"\r\n                    defaultValue={props.characterInfos.MP}\r\n                    className={clsx(classes.numberInfoField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setMP(+event.target.value);\r\n                    }}\r\n                    placeholder=\"MP\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"san\"\r\n                    label=\"SAN\"\r\n                    type=\"number\"\r\n                    defaultValue={props.characterInfos.SAN}\r\n                    className={clsx(classes.numberInfoField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setSAN(+event.target.value);\r\n                    }}\r\n                    placeholder=\"SAN\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n            </Card>\r\n            <br />\r\n\r\n            <Card className={classes.card}>\r\n                <br />\r\n                ability value\r\n                <br />\r\n                <TextField\r\n                    id=\"str\"\r\n                    label=\"STR\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.STR}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.STR = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"STR\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"con\"\r\n                    label=\"CON\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.CON}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.CON = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"CON\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"pow\"\r\n                    label=\"POW\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.POW}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.POW = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"POW\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"dex\"\r\n                    label=\"DEX\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.DEX}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.DEX = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"DEX\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n                <TextField\r\n                    id=\"app\"\r\n                    label=\"APP\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.APP}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.APP = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"APP\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"siz\"\r\n                    label=\"SIZ\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.SIZ}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.SIZ = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"SIZ\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"int\"\r\n                    label=\"INT\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.INT}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.INT = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"INT\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"edu\"\r\n                    label=\"EDU\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.EDU}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.EDU = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"EDU\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n            </Card>\r\n\r\n            <br />\r\n        </Paper>\r\n    );\r\n};\r\nexport default Character;\r\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Character from '../pages/Character';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state.character);\r\n    return {\r\n        characterInfos: state.character.character.characterInfos,\r\n        abilityValues: state.character.character.abilityValues,\r\n        characterBackground: state.character.character.characterBackground,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacterName: (characterName: string) => {\r\n            dispatch(actionCreator.character.setCharacterName({characterName}));\r\n        },\r\n        setHP: (hp: number) => {\r\n            dispatch(actionCreator.character.setHP({hp}));\r\n        },\r\n        setMP: (mp: number) => {\r\n            dispatch(actionCreator.character.setMP({mp}));\r\n        },\r\n        setSAN: (san: number) => {\r\n            dispatch(actionCreator.character.setSAN({san}));\r\n        },\r\n        setCharacterBackground: (background: string) => {\r\n            dispatch(actionCreator.character.setCharacterBackground({background}));\r\n        },\r\n        setCharacterInfos: (characterInfos: characterInfo) => {\r\n            dispatch(actionCreator.character.setCharacterInfos({characterInfos}));\r\n        },\r\n        setAbilityValues: (abilityValues: abilityValue) => {\r\n            dispatch(actionCreator.character.setAbilityValues({abilityValues}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Character);","export const getAbilityValue = (\r\n    item: string,\r\n    abilityValue: abilityValue,\r\n    power: number\r\n): string => {\r\n    return String(getAbility(item, abilityValue) * power);\r\n};\r\n\r\nexport const getAbility = (\r\n    item: string,\r\n    abilityValue: abilityValue\r\n): number => {\r\n    const eq = <T>(val1: T) => (val2: T) => val1 === val2;\r\n\r\n    const result = when(item)\r\n        .on(eq('STR'), () => abilityValue.STR)\r\n        .on(eq('CON'), () => abilityValue.CON)\r\n        .on(eq('POW'), () => abilityValue.POW)\r\n        .on(eq('DEX'), () => abilityValue.DEX)\r\n        .on(eq('APP'), () => abilityValue.APP)\r\n        .on(eq('SIZ'), () => abilityValue.SIZ)\r\n        .on(eq('INT'), () => abilityValue.INT)\r\n        .on(eq('EDU'), () => abilityValue.EDU)\r\n        .otherwise(() => -1);\r\n\r\n    return result;\r\n};\r\n\r\ntype ChainedWhen<T, R> = {\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) => ChainedWhen<T, R | A>;\r\n    otherwise: <A>(fn: () => A) => R | A;\r\n};\r\n\r\nconst match = <T, R>(val: any): ChainedWhen<T, R> => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) => match<T, R | A>(val),\r\n    otherwise: <A>(fn: () => A): A | R => val,\r\n});\r\n\r\nconst chain = <T, R>(val: T): ChainedWhen<T, R> => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) =>\r\n        pred(val) ? match(fn()) : chain<T, A | R>(val),\r\n    otherwise: <A>(fn: () => A) => fn(),\r\n});\r\n\r\nconst when = <T>(val: T) => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) =>\r\n        pred(val) ? match<T, A>(fn()) : chain<T, A>(val),\r\n});\r\n","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport STRIcon from '@material-ui/icons/FlashOn';\r\nimport CONIcon from '@material-ui/icons/Favorite';\r\nimport POWIcon from '@material-ui/icons/Visibility';\r\nimport DEXIcon from '@material-ui/icons/DirectionsRun';\r\nimport APPIcon from '@material-ui/icons/Face';\r\nimport SIZIcon from '@material-ui/icons/AccessibilityNewOutlined';\r\nimport INTIcon from '@material-ui/icons/WbIncandescentOutlined';\r\nimport EDUIcon from '@material-ui/icons/LocalLibrary';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Paper } from '@material-ui/core/';\r\n\r\nimport { getAbilityValue } from '../modules/getAbilityValue';\r\nimport DiceDialog from '../components/DiceDialog';\r\n\r\nimport sendBCDice from '../modules/sendDiscord';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 500,\r\n            },\r\n            margin: 'auto',\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        numberAbilityField: {\r\n            marginLeft: 0,\r\n            marginRight: 6,\r\n            width: 78,\r\n        },\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 600,\r\n            },\r\n            padding: theme.spacing(3, 2),\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    abilityValues: abilityValue;\r\n    discordUrl: string;\r\n    characterName: string;\r\n};\r\n\r\nconst Ability: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('STR');\r\n    const [power, setPower] = React.useState(5);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [item, setItem] = React.useState({\r\n        name: '',\r\n        url: '',\r\n        user: '',\r\n        diceValue: '',\r\n    });\r\n\r\n    function handleOpen() {\r\n        props.discordUrl !== '' ? sendBCDice(item) : setOpen(true);\r\n    }\r\n\r\n    const setItems = (ability: string, value: string): void => {\r\n        setItem({\r\n            name: ability,\r\n            url: props.discordUrl,\r\n            user: props.characterName,\r\n            diceValue: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Ability Role</h2>\r\n\r\n            <Paper className={classes.paper}>\r\n                ability\r\n                <BottomNavigation\r\n                    value={value}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    showLabels\r\n                    className={classes.root}\r\n                >\r\n                    <BottomNavigationAction\r\n                        value={'STR'}\r\n                        label=\"STR\"\r\n                        icon={<STRIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        value={'CON'}\r\n                        label=\"CON\"\r\n                        icon={<CONIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        value={'POW'}\r\n                        label=\"POW\"\r\n                        icon={<POWIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        value={'DEX'}\r\n                        label=\"DEX\"\r\n                        icon={<DEXIcon />}\r\n                    />\r\n                </BottomNavigation>\r\n                <BottomNavigation\r\n                    value={value}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    showLabels\r\n                    className={classes.root}\r\n                >\r\n                    <BottomNavigationAction\r\n                        value={'APP'}\r\n                        label=\"APP\"\r\n                        icon={<APPIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        value={'SIZ'}\r\n                        label=\"SIZ\"\r\n                        icon={<SIZIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        value={'INT'}\r\n                        label=\"INT\"\r\n                        icon={<INTIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        value={'EDU'}\r\n                        label=\"EDU\"\r\n                        icon={<EDUIcon />}\r\n                    />\r\n                </BottomNavigation>\r\n                <TextField\r\n                    id=\"power\"\r\n                    label=\"Power\"\r\n                    type=\"number\"\r\n                    defaultValue={power}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setPower(+event.target.value);\r\n                    }}\r\n                    placeholder=\"Power\"\r\n                    margin=\"normal\"\r\n                />\r\n            </Paper>\r\n\r\n            <br />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={(): void => {\r\n                    setItems(\r\n                        value,\r\n                        getAbilityValue(value, props.abilityValues, power)\r\n                    );\r\n                    handleOpen();\r\n                }}\r\n            >\r\n                Send\r\n            </Button>\r\n\r\n            <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n        </div>\r\n    );\r\n};\r\nexport default Ability;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { RootState  } from '../states';\r\nimport Ability from '../pages/Ability';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state.character);\r\n    return {\r\n        abilityValues: state.character.character.abilityValues,\r\n        discordUrl: state.setting.discordUrl,\r\n        characterName: state.character.character.characterInfos.characterName,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Ability);","interface ItemNDN {\r\n    count: number;\r\n    number: number;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\nfunction ShakeNDNDice(item: ItemNDN): Result {\r\n    let diceResults: number[] = [];\r\n\r\n    let result: Result = {\r\n        ok: String(item.count) + 'D' + String(item.number),\r\n        result: '',\r\n    };\r\n\r\n    for (var i = 0; i < item.count; i++) {\r\n        diceResults.push(Math.round(Math.random() * item.number) + 1);\r\n    }\r\n\r\n    result.result = IntSumToString(diceResults);\r\n\r\n    return result;\r\n}\r\n\r\nexport const IntSumToString = (results: number[]): string => {\r\n    return String(\r\n        results.reduce((total, data) => {\r\n            return total + data;\r\n        })\r\n    );\r\n};\r\n\r\nexport default ShakeNDNDice;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\n\r\ninterface ItemNDN {\r\n    count: number;\r\n    number: number;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    item: ItemNDN;\r\n    setOpen(open: boolean): void;\r\n};\r\n\r\nexport default function AlertDialog(props: Props) {\r\n    let result: Result = {\r\n        ok: '',\r\n        result: '',\r\n    };\r\n    if (props.open) {\r\n        result = ShakeNDNDice(props.item);\r\n    }\r\n\r\n    function handleClose() {\r\n        props.setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {'Dice Result'}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {result.ok}\r\n                    </DialogContentText>\r\n                    <br />\r\n\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {result.result}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport DiceNDNDialog from '../components/DiceNDNDialog';\r\n\r\nimport sendBCDice from '../modules/sendDiscord';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            margin: 'auto',\r\n            padding: theme.spacing(3, 2),\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 600,\r\n            },\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(3),\r\n            marginRight: 'auto',\r\n            width: '20%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 120,\r\n                marginLeft: theme.spacing(10),\r\n            },\r\n        },\r\n        fab: {\r\n            marginLeft: theme.spacing(5),\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(1),\r\n            },\r\n            margin: theme.spacing(1),\r\n        },\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    characterName: string;\r\n    discordUrl: string;\r\n}\r\n\r\ninterface PropsMain extends Props {\r\n    skills: skill[];\r\n    SAN: number;\r\n    setSAN: (san: number) => void;\r\n}\r\n\r\ninterface PropsSAN extends Props {\r\n    SAN: number;\r\n    setSAN: (san: number) => void;\r\n}\r\n\r\ninterface PropsIdea extends Props {\r\n    skills: skill[];\r\n}\r\n\r\nconst SANValue: React.SFC<PropsSAN> = (props: PropsSAN) => {\r\n    const classes = useStyles();\r\n    const [diffSAN, setDiffSAN] = React.useState(1);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [item, setItem] = React.useState({\r\n        name: '',\r\n        url: '',\r\n        user: '',\r\n        diceValue: '',\r\n    });\r\n\r\n    const setItems = (ability: string, value: string): void => {\r\n        setItem({\r\n            name: ability,\r\n            url: props.discordUrl,\r\n            user: props.characterName,\r\n            diceValue: value,\r\n        });\r\n    };\r\n\r\n    function handleOpen() {\r\n        props.discordUrl !== '' ? sendBCDice(item) : setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Chip color=\"primary\" label=\"SAN\" /> {props.SAN}\r\n            <TextField\r\n                id=\"san\"\r\n                label=\"SAN\"\r\n                type=\"number\"\r\n                defaultValue={diffSAN}\r\n                className={classes.numberInfoField}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    setDiffSAN(+event.target.value);\r\n                }}\r\n                placeholder=\"SAN\"\r\n                margin=\"normal\"\r\n            />\r\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n                <AddIcon\r\n                    onClick={() => {\r\n                        props.setSAN(props.SAN + diffSAN);\r\n                    }}\r\n                />\r\n            </Fab>\r\n            <br />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={(): void => {\r\n                    setItems('SANチェック', String(props.SAN));\r\n                    handleOpen();\r\n                }}\r\n            >\r\n                SAN Check\r\n            </Button>\r\n            <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst SANFunc: React.SFC<PropsSAN> = (props: PropsSAN) => {\r\n    const classes = useStyles();\r\n    const [countDice, setCountDice] = React.useState(1);\r\n    const [numberDice, setNumberDice] = React.useState(2);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [item, setItem] = React.useState({\r\n        count: 0,\r\n        number: 0,\r\n    });\r\n\r\n    const setItems = (cou: number, num: number): void => {\r\n        setItem({\r\n            count: cou,\r\n            number: num,\r\n        });\r\n    };\r\n\r\n    function handleOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <Paper className={clsx(classes.paper, classes.dense)}>\r\n            <TextField\r\n                id=\"san\"\r\n                label=\"Count\"\r\n                type=\"number\"\r\n                defaultValue={countDice}\r\n                className={classes.numberInfoField}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    setCountDice(+event.target.value);\r\n                }}\r\n                placeholder=\"SAN\"\r\n                margin=\"normal\"\r\n            />\r\n            <TextField\r\n                id=\"san\"\r\n                label=\"Number\"\r\n                type=\"number\"\r\n                defaultValue={numberDice}\r\n                className={classes.numberInfoField}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    setNumberDice(+event.target.value);\r\n                }}\r\n                placeholder=\"SAN\"\r\n                margin=\"normal\"\r\n            />\r\n\r\n            <br />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={(): void => {\r\n                    setItems(countDice, numberDice);\r\n                    handleOpen();\r\n                }}\r\n            >\r\n                Judge\r\n            </Button>\r\n\r\n            <DiceNDNDialog open={open} setOpen={setOpen} item={item} />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst SANIdea: React.SFC<PropsIdea> = (props: PropsIdea) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [item, setItem] = React.useState({\r\n        name: '',\r\n        url: '',\r\n        user: '',\r\n        diceValue: '',\r\n    });\r\n\r\n    const setItems = (ability: string, value: string): void => {\r\n        setItem({\r\n            name: ability,\r\n            url: props.discordUrl,\r\n            user: props.characterName,\r\n            diceValue: value,\r\n        });\r\n    };\r\n\r\n    function handleOpen() {\r\n        props.discordUrl !== '' ? sendBCDice(item) : setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <Paper className={clsx(classes.paper, classes.dense)}>\r\n            <br />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={(): void => {\r\n                    let idea: skill | undefined = props.skills.find(\r\n                        s => s.skillName === 'アイデア'\r\n                    );\r\n                    if (idea == null) return;\r\n\r\n                    setItems('アイデア', String(idea.skillValue));\r\n                    handleOpen();\r\n                }}\r\n            >\r\n                Idea\r\n            </Button>\r\n\r\n            <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst SAN: React.SFC<PropsMain> = (props: PropsMain) => {\r\n    return (\r\n        <React.Fragment>\r\n            <SANValue\r\n                SAN={props.SAN}\r\n                characterName={props.characterName}\r\n                setSAN={props.setSAN}\r\n                discordUrl={props.discordUrl}\r\n            />\r\n            <SANFunc\r\n                SAN={props.SAN}\r\n                characterName={props.characterName}\r\n                setSAN={props.setSAN}\r\n                discordUrl={props.discordUrl}\r\n            />\r\n            <SANIdea\r\n                skills={props.skills}\r\n                discordUrl={props.discordUrl}\r\n                characterName={props.characterName}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SAN;\r\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport SAN from '../pages/SAN';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        SAN: state.character.character.characterInfos.SAN,\r\n        characterName: state.character.character.characterInfos.characterName, \r\n        skills: state.character.character.skills,\r\n        discordUrl: state.setting.discordUrl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSAN: (san: number) => {\r\n            dispatch(actionCreator.character.setSAN({san}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SAN);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport sendBCDice from '../modules/sendDiscord';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '75%',\r\n            margin: 'auto',\r\n            marginTop: theme.spacing(3),\r\n            overflowX: 'auto',\r\n        },\r\n        table: {\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                minwidth: 500,\r\n            },\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(5),\r\n            marginRight: 'auto',\r\n            width: '20%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 120,\r\n            },\r\n        },\r\n        fab: {\r\n            marginLeft: '5px',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(5),\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        chip: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(5),\r\n                margin: theme.spacing(1),\r\n            },\r\n            [theme.breakpoints.down('xs')]: {\r\n                textAlign: 'left',\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    skills: skill[];\r\n    hp: number;\r\n    damageBonus: string;\r\n    setSkills(skills: skill[]): void;\r\n    setHP(hp: number): void;\r\n    discordUrl: string;\r\n    characterName: string;\r\n};\r\n\r\nexport default function SimpleTable(props: Props) {\r\n    const classes = useStyles();\r\n    const [skill, setSkill] = React.useState<string>('');\r\n    const [value, setValue] = React.useState<number>(0);\r\n    const [HPDiff, setHPDiff] = React.useState<number>(0);\r\n    const [openDialog, setOpenDialog] = React.useState<boolean>(false);\r\n\r\n    const handleClick = (skillName: string): void => {\r\n        var promise = (str: string): Promise<string> => {\r\n            return new Promise(function(resolve, reject) {\r\n                const skillValue = getSkillValue(str);\r\n                resolve(skillValue);\r\n            });\r\n        };\r\n        promise(skillName)\r\n            .then(val => {\r\n                const info = getItem(skillName, val);\r\n                handleDialogOpen(info);\r\n                setItem(info);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const getSkillValue = (skillName: string): string | undefined => {\r\n        const skill: skill | undefined = props.skills.find(\r\n            s => s.skillName === skillName\r\n        );\r\n        if (skill == null) return undefined;\r\n        return String(skill.skillValue);\r\n    };\r\n\r\n    const [item, setItem] = React.useState({\r\n        name: '',\r\n        url: '',\r\n        user: '',\r\n        diceValue: '',\r\n    });\r\n\r\n    const getItem = (ability: string, value: string): any => {\r\n        return {\r\n            name: ability,\r\n            url: props.discordUrl,\r\n            user: props.characterName,\r\n            diceValue: value,\r\n        };\r\n    };\r\n\r\n    function handleDialogOpen(info: any) {\r\n        props.discordUrl !== '' ? sendBCDice(info) : setOpenDialog(true);\r\n    }\r\n\r\n    const setSkills = (skill: string, value: number): void => {\r\n        const addSkill: skill = {\r\n            skillName: '',\r\n            skillValue: 0,\r\n            skillType: '戦闘',\r\n            skillUnique: true,\r\n            skillWorkValue: 0,\r\n            skillInterestValue: 0,\r\n            defaultValue: 0,\r\n        };\r\n\r\n        const newSkills = JSON.parse(JSON.stringify(props.skills));\r\n\r\n        const cSkill =\r\n            newSkills.length == null || newSkills.length === 0\r\n                ? undefined\r\n                : newSkills.find(\r\n                      (s: { skillName: string }) => s.skillName === skill\r\n                  );\r\n\r\n        if (cSkill == null) {\r\n            addSkill.skillName = skill;\r\n            addSkill.skillValue = value;\r\n            props.setSkills([...props.skills, addSkill]);\r\n        } else {\r\n            cSkill.skillValue = value;\r\n            props.setSkills(newSkills);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={clsx(classes.root)}>\r\n                <br />\r\n                {/* タブレット以上なら隠す -- モバイル画面で表示 */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Chip color=\"primary\" label=\"Skill\" />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Skill\"\r\n                        type=\"text\"\r\n                        defaultValue={skill}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setSkill(event.target.value);\r\n                        }}\r\n                        placeholder=\"Skill\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <br />\r\n                    <Chip\r\n                        color=\"primary\"\r\n                        label=\"Value\"\r\n                        className={classes.chip}\r\n                    />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Value\"\r\n                        type=\"number\"\r\n                        defaultValue={value}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setValue(+event.target.value);\r\n                        }}\r\n                        placeholder=\"Value\"\r\n                        margin=\"normal\"\r\n                    />\r\n\r\n                    <br />\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        aria-label=\"add\"\r\n                        className={classes.fab}\r\n                    >\r\n                        <AddIcon\r\n                            onClick={() => {\r\n                                setSkills(skill, value);\r\n                            }}\r\n                        />\r\n                    </Fab>\r\n                </Hidden>\r\n                {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Chip color=\"primary\" label=\"Skill\" />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Skill\"\r\n                        type=\"text\"\r\n                        defaultValue={skill}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setSkill(event.target.value);\r\n                        }}\r\n                        placeholder=\"Skill\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <Chip\r\n                        color=\"primary\"\r\n                        label=\"Value\"\r\n                        className={classes.chip}\r\n                    />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Value\"\r\n                        type=\"number\"\r\n                        defaultValue={value}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setValue(+event.target.value);\r\n                        }}\r\n                        placeholder=\"Value\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        aria-label=\"add\"\r\n                        className={classes.fab}\r\n                    >\r\n                        <AddIcon\r\n                            onClick={() => {\r\n                                setSkills(skill, value);\r\n                            }}\r\n                        />\r\n                    </Fab>\r\n                </Hidden>\r\n                <br />\r\n                <br />\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"HP\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.hp}\r\n                <TextField\r\n                    id=\"hp\"\r\n                    label=\"HP\"\r\n                    type=\"number\"\r\n                    defaultValue={HPDiff}\r\n                    className={classes.numberInfoField}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setHPDiff(+event.target.value);\r\n                    }}\r\n                    placeholder=\"Value\"\r\n                    margin=\"normal\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\" //className={classes.button}\r\n                    onClick={(): void => {\r\n                        props.setHP(props.hp + HPDiff);\r\n                    }}\r\n                >\r\n                    +/-\r\n                </Button>\r\n                <br />\r\n                <br />\r\n            </Paper>\r\n\r\n            <Paper className={classes.root}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Skill</TableCell>\r\n                            <TableCell align=\"right\">Value</TableCell>\r\n                            <TableCell align=\"right\">Type</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.skills\r\n                            .filter(row => {\r\n                                return row.skillType === '戦闘';\r\n                            })\r\n                            .map(row => {\r\n                                return (\r\n                                    <TableRow\r\n                                        key={row.skillName}\r\n                                        onClick={_ => {\r\n                                            console.log('onclick');\r\n                                            handleClick(row.skillName);\r\n                                        }}\r\n                                    >\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.skillName}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            {row.skillValue}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            {row.skillType}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                <DiceDialog\r\n                    open={openDialog}\r\n                    setOpen={setOpenDialog}\r\n                    item={item}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Battle from '../pages/Battle';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return { \r\n        skills: state.character.character.skills,\r\n        damageBonus: state.character.character.characterInfos.damageBonus,\r\n        hp: state.character.character.characterInfos.HP,\r\n        discordUrl: state.setting.discordUrl,\r\n        characterName: state.character.character.characterInfos.characterName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSkills: (skills: skill[]) => {\r\n            dispatch(actionCreator.character.setSkills({skills}));\r\n        },\r\n        setHP: (hp: number) => {\r\n            dispatch(actionCreator.character.setHP({hp}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Battle);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport onSubmit from '../modules/importPMJ.js';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { character } from '../modules/commonType';\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    setOpen(open: boolean): void;\r\n    setCharacter(character: character): void;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '75%',\r\n            margin: 'auto',\r\n            marginTop: theme.spacing(3),\r\n            overflowX: 'auto',\r\n        },\r\n        nputFileBtnHide: {\r\n            opacity: 0,\r\n            appearance: 'none',\r\n            position: 'absolute',\r\n        },\r\n    })\r\n);\r\nexport default function FormDialog(props: Props) {\r\n    const classes = useStyles();\r\n    const [file, setFile] = React.useState<File>(new File([], ''));\r\n    const [fileName, setFileName] = React.useState<string>('No Select');\r\n\r\n    function handleChangeFile(e: any) {\r\n        const target: HTMLInputElement = e.target as HTMLInputElement;\r\n        if (target == null) return;\r\n        if (target.files == null) return;\r\n\r\n        const file: File | null = target.files.item(0);\r\n        if (file == null) return;\r\n        setFile(file);\r\n        setFileName(file.name);\r\n    }\r\n\r\n    function setChara(character: any) {\r\n        let chara: character = {\r\n            skills: character.skills,\r\n            characterBackground: character.characterBackground,\r\n            abilityValues: character.abilityValues,\r\n            characterInfos: character.characterInfos,\r\n        };\r\n\r\n        console.log(chara);\r\n        props.setCharacter(chara);\r\n    }\r\n\r\n    function handleClose() {\r\n        props.setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Import Character\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Please select and set .pmj file\r\n                    </DialogContentText>\r\n                    <Button color=\"primary\" component=\"label\">\r\n                        Select\r\n                        <input\r\n                            type=\"file\"\r\n                            className={classes.nputFileBtnHide}\r\n                            onChange={e => {\r\n                                handleChangeFile(e);\r\n                            }}\r\n                        />\r\n                    </Button>\r\n                    {fileName}\r\n                    <br />\r\n                    <br />\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            onSubmit(setChara, file);\r\n                            handleClose();\r\n                        }}\r\n                    >\r\n                        set\r\n                    </Button>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","export default function onSubmit(func, item) {\r\n    if (item == null) return;\r\n    let reader = new FileReader();\r\n\r\n    // CSVファイル以外は処理を止める\r\n    if (!item.name.match('.json$') && !item.name.match('.pmj$')) {\r\n        alert('jsonファイル、またはchpファイルを選択してください');\r\n        return;\r\n    }\r\n\r\n    // ファイル読み取りに失敗したとき\r\n    reader.onerror = function() {\r\n        alert('ファイル読み取りに失敗しました');\r\n    };\r\n    //読み込んだファイルの中身を取得する\r\n    reader.readAsText(item, 'UTF-8');\r\n\r\n    // PMJファイル以外は処理を止める\r\n    if (!item.name.match('.json$') && !item.name.match('.pmj$')) {\r\n        alert('jsonファイル、またはchpファイルを選択してください');\r\n        return;\r\n    }\r\n    //ファイルの中身を取得後に処理を行う\r\n    if (item != null) {\r\n        reader.addEventListener('load', function() {\r\n            let json = JSON.parse(reader.result);\r\n            func(json);\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SkillIcon from '@material-ui/icons/Assignment';\nimport CharacterIcon from '@material-ui/icons/Info';\nimport AbillityIcon from '@material-ui/icons/Face';\nimport SANIcon from '@material-ui/icons/OfflineBolt';\nimport BattleIcon from '@material-ui/icons/Security';\nimport ImportIcon from '@material-ui/icons/CloudDownload';\nimport ExportIcon from '@material-ui/icons/CloudUpload';\n\nimport ImportPMJ from './ImportPMJDialog';\nimport Divider from '@material-ui/core/Divider';\n\nimport { character } from '../modules/commonType';\n\ntype Props = {\n    setCharacter: (character: any) => void;\n    character: character;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            backgroundColor: theme.palette.background.paper,\n        },\n    })\n);\n\nconst charaDownload = (character: character) => {\n    let data = character;\n\n    if (data.characterInfos.characterName !== '') {\n        console.log('download start');\n        const blob = new Blob([JSON.stringify(data)], {\n            type: 'application/json',\n        });\n        let url = window.URL.createObjectURL(blob);\n        let link = document.createElement('a');\n\n        if (url == null) return;\n\n        link.download = data.characterInfos.characterName + '.pmj';\n        link.href = url;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    } else {\n        alert({\n            message: \"Warning, can't download.\",\n            type: 'warning',\n        });\n    }\n};\n\nexport default function SimpleList(props: Props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <div className={classes.root}>\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItem button component={Link} to=\"/home/skill\">\n                    <ListItemIcon>\n                        <SkillIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Skill\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/home/character\">\n                    <ListItemIcon>\n                        <CharacterIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Character\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/home/abillity\">\n                    <ListItemIcon>\n                        <AbillityIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Abillity\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/home/san\">\n                    <ListItemIcon>\n                        <SANIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"SAN\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/home/battle\">\n                    <ListItemIcon>\n                        <BattleIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Battle\" />\n                </ListItem>\n\n                <Divider />\n\n                <ListItem\n                    button\n                    onClick={() => {\n                        setOpen(true);\n                    }}\n                    title=\"キャラクター情報インポート\"\n                >\n                    <ListItemIcon>\n                        <ImportIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Import\" />\n                </ListItem>\n\n                <ListItem\n                    button\n                    onClick={() => {\n                        charaDownload(props.character);\n                    }}\n                    title=\"キャラクター情報エクスポート\"\n                >\n                    <ListItemIcon>\n                        <ExportIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Export\" />\n                </ListItem>\n            </List>\n\n            <ImportPMJ\n                open={open}\n                setOpen={setOpen}\n                setCharacter={props.setCharacter}\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SkillIcon from '@material-ui/icons/Assignment';\nimport CharacterIcon from '@material-ui/icons/Info';\nimport AbillityIcon from '@material-ui/icons/Face';\nimport SANIcon from '@material-ui/icons/OfflineBolt';\nimport BattleIcon from '@material-ui/icons/Security';\nimport ImportIcon from '@material-ui/icons/CloudDownload';\nimport ExportIcon from '@material-ui/icons/CloudUpload';\n\nimport ImportPMJ from './ImportPMJDialog';\nimport Divider from '@material-ui/core/Divider';\n\nimport { character } from '../modules/commonType';\n\ntype Props = {\n    setCharacter: (character: any) => void;\n    character: character;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            backgroundColor: theme.palette.background.paper,\n        },\n    })\n);\n\nconst charaDownload = (character: character) => {\n    let data = character;\n\n    if (data.characterInfos.characterName !== '') {\n        console.log('download start');\n        const blob = new Blob([JSON.stringify(data)], {\n            type: 'application/json',\n        });\n        let url = window.URL.createObjectURL(blob);\n        let link = document.createElement('a');\n\n        if (url == null) return;\n\n        link.download = data.characterInfos.characterName + '.pmj';\n        link.href = url;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    } else {\n        alert({\n            message: \"Warning, can't download.\",\n            type: 'warning',\n        });\n    }\n};\n\nconst SimpleList = (props: Props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <div className={classes.root}>\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItem\n                    button\n                    component={Link}\n                    to=\"/home/skill\"\n                    title=\"技能管理画面\"\n                >\n                    <ListItemIcon>\n                        <SkillIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Skill\" />\n                </ListItem>\n                <ListItem\n                    button\n                    component={Link}\n                    to=\"/home/character\"\n                    title=\"キャラクター管理画面\"\n                >\n                    <ListItemIcon>\n                        <CharacterIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Character\" />\n                </ListItem>\n                <ListItem\n                    button\n                    component={Link}\n                    to=\"/home/abillity\"\n                    title=\"能力値ロール画面\"\n                >\n                    <ListItemIcon>\n                        <AbillityIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Abillity\" />\n                </ListItem>\n                <ListItem\n                    button\n                    component={Link}\n                    to=\"/home/san\"\n                    title=\"SAN値管理画面\"\n                >\n                    <ListItemIcon>\n                        <SANIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"SAN\" />\n                </ListItem>\n                <ListItem\n                    button\n                    component={Link}\n                    to=\"/home/battle\"\n                    title=\"戦闘管理画面\"\n                >\n                    <ListItemIcon>\n                        <BattleIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Battle\" />\n                </ListItem>\n\n                <Divider />\n\n                <ListItem\n                    button\n                    onClick={() => {\n                        setOpen(true);\n                    }}\n                    title=\"キャラクター情報インポート\"\n                >\n                    <ListItemIcon>\n                        <ImportIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Import\" />\n                </ListItem>\n\n                <ListItem\n                    button\n                    onClick={() => {\n                        charaDownload(props.character);\n                    }}\n                    title=\"キャラクター情報エクスポート\"\n                >\n                    <ListItemIcon>\n                        <ExportIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Export\" />\n                </ListItem>\n            </List>\n\n            <ImportPMJ\n                open={open}\n                setOpen={setOpen}\n                setCharacter={props.setCharacter}\n            />\n        </div>\n    );\n};\n\nexport default SimpleList;\n","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport SideBarPC from './SideBar_PC';\nimport SideBarMobile from './SideBar_Mobile';\n\nimport { character } from '../modules/commonType';\n\ntype Props = {\n    setCharacter: (character: any) => void;\n    character: character;\n};\n\nconst NavBar: React.SFC<Props> = (props: Props) => {\n    return (\n        <div>\n            {/* タブレット以上なら隠す -- モバイル画面で表示 */}\n            <Hidden smUp implementation=\"css\">\n                <SideBarMobile\n                    character={props.character}\n                    setCharacter={props.setCharacter}\n                />\n            </Hidden>\n\n            {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\n            <Hidden xsDown implementation=\"css\">\n                <SideBarPC\n                    character={props.character}\n                    setCharacter={props.setCharacter}\n                />\n            </Hidden>\n        </div>\n    );\n};\n\nexport default NavBar;\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport SideBar from '../components/SideBar';\r\n\r\n//空でも良いので、mapStateToPropsを記述\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacter: (chara: character) => {\r\n            dispatch(actionCreator.character.setCharacter({chara}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps, //ここでconnectするのも忘れない\r\n    mapDispatchToProps\r\n)(SideBar);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {\r\n    makeStyles,\r\n    useTheme,\r\n    Theme,\r\n    createStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nimport Skill from '../containers/Skill';\r\nimport Character from '../containers/Character';\r\nimport Abillity from '../containers/Ability';\r\nimport SAN from '../containers/SAN';\r\nimport Battle from '../containers/Battle';\r\nimport SideBar from '../containers/SideBar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { character } from '../modules/commonType';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            position: 'relative',\r\n            display: 'flex',\r\n            zIndex: 0,\r\n            [theme.breakpoints.up('sm')]: {\r\n                paddingTop: '100px',\r\n            },\r\n        },\r\n        drawer: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                paddingTop: '100px',\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n        },\r\n    })\r\n);\r\n\r\ninterface ResponsiveDrawerProps {\r\n    container?: Element;\r\n    openMobile: boolean;\r\n    setOpenMobile: (open: boolean) => void;\r\n    character: character;\r\n}\r\n\r\nexport default function ResponsiveDrawer(props: ResponsiveDrawerProps) {\r\n    const { container } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    function handleDrawerToggle() {\r\n        props.setOpenMobile(!props.openMobile);\r\n    }\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            {/* <Divider /> */}\r\n            <SideBar character={props.character} />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={!props.openMobile}\r\n                        onClose={handleDrawerToggle}\r\n                        onClick={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/home/skill\"\r\n                        component={Skill}\r\n                        container={document.getElementById('app-main')}\r\n                    />\r\n                    <Route path=\"/home/character\" component={Character} />\r\n                    <Route path=\"/home/abillity\" component={Abillity} />\r\n                    <Route path=\"/home/san\" component={SAN} />\r\n                    <Route path=\"/home/battle\" component={Battle} />\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import { connect } from 'react-redux';\r\n\r\nimport { RootState } from '../states';\r\nimport Home from '../pages/Home';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        character: state.character.character,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nrequire('dotenv').config();\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport firebase from '../modules/firebase';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n            width: '50%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: 200,\r\n            },\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        menu: {\r\n            width: '50%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: 200,\r\n            },\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            width: '90%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: 450,\r\n            },\r\n            padding: theme.spacing(3, 2),\r\n        },\r\n        mobile: {\r\n            paddingTop: '100',\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    discordUrl: string;\r\n    diceUrl: string;\r\n    setUserName: (url: string) => void;\r\n    setPassword: (url: string) => void;\r\n};\r\n\r\nconst Login: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [userName, setUserName] = React.useState(props.discordUrl);\r\n    const [password, setPassword] = React.useState(props.diceUrl);\r\n    const [value, setValue] = React.useState('recents');\r\n\r\n    const login = (email: string, password: string) => {\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                setValue('login');\r\n            });\r\n    };\r\n\r\n    const logout = (): void => {\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                setValue('logout');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div id=\"login\">\r\n            <Hidden smUp implementation=\"css\">\r\n                <br className={classes.mobile} />\r\n            </Hidden>\r\n            {(() => {\r\n                const user = firebase.auth().currentUser;\r\n                if (user) {\r\n                    return (\r\n                        <div>\r\n                            {value}\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                onClick={(): void => {\r\n                                    logout();\r\n                                }}\r\n                            >\r\n                                Logout\r\n                            </Button>\r\n                        </div>\r\n                    );\r\n                }\r\n                return (\r\n                    <div>\r\n                        <h2>Login</h2>\r\n                        <Paper className={classes.paper}>\r\n                            <TextField\r\n                                id=\"userName\"\r\n                                label=\"User Name\"\r\n                                defaultValue={props.diceUrl}\r\n                                className={clsx(\r\n                                    classes.textField,\r\n                                    classes.dense\r\n                                )}\r\n                                onChange={(\r\n                                    event: React.ChangeEvent<HTMLInputElement>\r\n                                ) => {\r\n                                    setUserName(event.target.value);\r\n                                }}\r\n                                margin=\"dense\"\r\n                            />\r\n                            <br />\r\n                            <TextField\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                defaultValue={props.discordUrl}\r\n                                className={clsx(\r\n                                    classes.textField,\r\n                                    classes.dense\r\n                                )}\r\n                                onChange={(\r\n                                    event: React.ChangeEvent<HTMLInputElement>\r\n                                ) => {\r\n                                    setPassword(event.target.value);\r\n                                }}\r\n                                margin=\"dense\"\r\n                            />\r\n                            <br />\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                onClick={(): void => {\r\n                                    login(userName, password);\r\n                                }}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </Paper>\r\n                    </div>\r\n                );\r\n            })()}\r\n        </div>\r\n    );\r\n};\r\nexport default Login;\r\n","import * as React from 'react';\r\nimport logo from '../PM_Desine.png';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <img src={logo} alt=\"\" width=\"50%\" height=\"40%\" />\r\n            <br />\r\n            <br />\r\n\r\n            <Typography>\r\n                Discordやオフラインセッションでの\r\n                <br />\r\n                キャラクター情報管理ツール\r\n            </Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n            width: '80%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 360,\r\n            },\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        menu: {\r\n            width: '80%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 360,\r\n            },\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 450,\r\n            },\r\n            padding: theme.spacing(3, 2),\r\n        },\r\n        mobile: {\r\n            paddingTop: '100',\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    discordUrl: string;\r\n    diceUrl: string;\r\n    setDiceUrl: (url: string) => void;\r\n    setDiscordUrl: (url: string) => void;\r\n};\r\n\r\nconst Setting: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [nDiscord, setDisordValue] = React.useState(props.discordUrl);\r\n    const [nDice, setDiceValue] = React.useState(props.diceUrl);\r\n\r\n    const setUrl = (newDiceURL: string, newDiscordURL: string): void => {\r\n        props.setDiceUrl(newDiceURL);\r\n        props.setDiscordUrl(newDiscordURL);\r\n        console.log(newDiceURL);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Hidden smUp implementation=\"css\">\r\n                <br className={classes.mobile} />\r\n            </Hidden>\r\n            <h2>Setting</h2>\r\n            <Paper className={classes.paper}>\r\n                <TextField\r\n                    id=\"diceURL\"\r\n                    label=\"Dice API URL\"\r\n                    defaultValue={props.diceUrl}\r\n                    className={clsx(classes.textField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setDiceValue(event.target.value);\r\n                    }}\r\n                    margin=\"dense\"\r\n                />\r\n                <br />\r\n                <TextField\r\n                    id=\"discordURL\"\r\n                    label=\"Discord URL\"\r\n                    defaultValue={props.discordUrl}\r\n                    className={clsx(classes.textField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setDisordValue(event.target.value);\r\n                    }}\r\n                    margin=\"dense\"\r\n                />\r\n                <br />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick={(): void => {\r\n                        setUrl(nDice, nDiscord);\r\n                    }}\r\n                >\r\n                    SET\r\n                </Button>\r\n            </Paper>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Setting;\r\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Setting from '../pages/Setting';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        discordUrl: state.setting.discordUrl,\r\n        diceUrl: state.setting.diceUrl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setDiceUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiceUrl({url}));\r\n        },\r\n        setDiscordUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiscordUrl({url}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Setting);","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: 360,\r\n        },\r\n        numberAbilityField: {\r\n            marginLeft: 0,\r\n            marginRight: 6,\r\n            width: '20%',\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '30%',\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        menu: {\r\n            width: 200,\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            padding: theme.spacing(3, 2),\r\n            width: '90%',\r\n        },\r\n        card: {\r\n            margin: 'auto',\r\n            width: '80%',\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(2),\r\n        },\r\n        chip: {\r\n            marginLeft: theme.spacing(2),\r\n            marginRight: 'auto',\r\n        },\r\n    })\r\n);\r\n\r\nconst setAbilityToDice = (character: character): character => {\r\n    interface ItemNDN {\r\n        count: number;\r\n        number: number;\r\n    }\r\n    const itemNDN: ItemNDN = {\r\n        count: 3,\r\n        number: 6,\r\n    };\r\n\r\n    const newCharacter = JSON.parse(JSON.stringify(character));\r\n\r\n    newCharacter.abilityValues.STR = +ShakeNDNDice(itemNDN).result - 1;\r\n    const CON = +ShakeNDNDice(itemNDN).result - 1;\r\n    newCharacter.abilityValues.CON = CON;\r\n    const POW = +ShakeNDNDice(itemNDN).result - 1;\r\n    newCharacter.abilityValues.POW = POW;\r\n    newCharacter.abilityValues.DEX = +ShakeNDNDice(itemNDN).result - 1;\r\n    newCharacter.abilityValues.APP = +ShakeNDNDice(itemNDN).result - 1;\r\n    newCharacter.abilityValues.EDU = +ShakeNDNDice(itemNDN).result + 3 - 1;\r\n\r\n    itemNDN.count = 2;\r\n    const SIZ = +ShakeNDNDice(itemNDN).result + 6 - 1;\r\n    newCharacter.abilityValues.SIZ = SIZ;\r\n    newCharacter.abilityValues.INT = +ShakeNDNDice(itemNDN).result + 6 - 1;\r\n\r\n    newCharacter.characterInfos.HP = Math.ceil((CON + SIZ) / 2);\r\n    newCharacter.characterInfos.MP = POW;\r\n    newCharacter.characterInfos.SAN = POW * 5;\r\n\r\n    return newCharacter;\r\n};\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <h2>Character Create</h2>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\" //className={classes.button}\r\n                onClick={(): void => {\r\n                    props.setCharacter(setAbilityToDice(props.character));\r\n                }}\r\n            >\r\n                Dice\r\n            </Button>\r\n            <br />\r\n            <br />\r\n\r\n            <Card className={classes.card}>\r\n                <br />\r\n                physical value\r\n                <br />\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"HP\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.characterInfos.HP}\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"MP\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.characterInfos.MP}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <br />\r\n                </Hidden>\r\n                <Chip color=\"primary\" label=\"SAN\" className={classes.chip} />{' '}\r\n                {props.character.characterInfos.SAN}\r\n                <br />\r\n                <br />\r\n            </Card>\r\n            <br />\r\n\r\n            <Card className={classes.card}>\r\n                <br />\r\n                ability value\r\n                <br />\r\n                <TextField\r\n                    id=\"str\"\r\n                    label=\"STR\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.STR}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                STR: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"STR\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"con\"\r\n                    label=\"CON\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.CON}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                CON: +event.target.value,\r\n                            },\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                HP: Math.ceil(\r\n                                    (+event.target.value +\r\n                                        props.character.abilityValues.SIZ) /\r\n                                        2\r\n                                ),\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"CON\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"pow\"\r\n                    label=\"POW\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.POW}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                POW: +event.target.value,\r\n                            },\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                MP: +event.target.value,\r\n                                SAN: +event.target.value * 5,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"POW\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"dex\"\r\n                    label=\"DEX\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.DEX}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                DEX: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"DEX\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n                <TextField\r\n                    id=\"app\"\r\n                    label=\"APP\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.APP}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                APP: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"APP\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"siz\"\r\n                    label=\"SIZ\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.SIZ}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                SIZ: +event.target.value,\r\n                            },\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                HP: Math.ceil(\r\n                                    (+event.target.value +\r\n                                        props.character.abilityValues.CON) /\r\n                                        2\r\n                                ),\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"SIZ\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"int\"\r\n                    label=\"INT\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.INT}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                INT: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"INT\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"edu\"\r\n                    label=\"EDU\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.EDU}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                EDU: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"EDU\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n            </Card>\r\n\r\n            <br />\r\n            <br />\r\n\r\n            <Card className={classes.card}>\r\n                <br />\r\n                role value\r\n                <br />\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"回避\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.abilityValues.DEX * 2}\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"アイデア\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.abilityValues.INT * 5}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <br />\r\n                </Hidden>\r\n                <Chip color=\"primary\" label=\"知識\" className={classes.chip} />{' '}\r\n                {props.character.abilityValues.EDU * 5}\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"幸運\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.abilityValues.POW * 5}\r\n                <br />\r\n                <br />\r\n            </Card>\r\n            <br />\r\n        </Paper>\r\n    );\r\n};\r\nexport default Making;\r\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport { skill, character } from '../modules/commonType';\n\ntype Props = {\n    skills: skill[];\n    setCharacter: (character: character) => void;\n    setSkillWorkValue: (name: string, work: number) => void;\n    setSkillInterestValue: (name: string, interest: number) => void;\n    checkSetSkillValue: (value: number, isWork: boolean) => boolean;\n};\n\ntype PropsRow = {\n    row: skill;\n    setSkillWorkValue: (name: string, work: number) => void;\n    setSkillInterestValue: (name: string, interest: number) => void;\n    checkSetSkillValue: (value: number, isWork: boolean) => boolean;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        table: {\n            width: '90%',\n        },\n        numberInfoField: {\n            marginLeft: theme.spacing(5),\n            marginRight: 'auto',\n            width: '100%',\n        },\n        name: {\n            width: '40%',\n        },\n        number: {\n            width: '25%',\n        },\n        head: {\n            width: '100%',\n        },\n        body: {\n            width: '100%',\n        },\n    })\n);\n\nconst SkillsTableRow: React.SFC<PropsRow> = (props: PropsRow) => {\n    const classes = useStyles();\n    const [skillWork, setSkillWork] = React.useState<number | string>(\n        props.row.skillWorkValue\n    );\n    const [skillInterest, setSkillInterest] = React.useState<number | string>(\n        props.row.skillInterestValue\n    );\n\n    return (\n        <React.Fragment>\n            <TableCell\n                className={classes.name}\n                rowSpan={2}\n                component=\"th\"\n                scope=\"row\"\n            >\n                {props.row.skillName}\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                {props.row.skillValue}\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                {props.row.skillType}\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                <TextField\n                    id=\"work\"\n                    label=\"Work\"\n                    type=\"number\"\n                    value={skillWork}\n                    className={classes.numberInfoField}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        if (event.target.value === '') {\n                            setSkillWork('');\n                            return;\n                        }\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillInterestValue +\n                                    +event.target.value,\n                                true\n                            ) &&\n                            +event.target.value >= 0\n                        )\n                            setSkillWork(+event.target.value);\n                    }}\n                    onBlur={(\n                        event: React.ChangeEvent<\n                            HTMLInputElement | HTMLTextAreaElement\n                        >\n                    ) => {\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillInterestValue +\n                                    +event.target.value,\n                                true\n                            )\n                        )\n                            props.setSkillWorkValue(\n                                props.row.skillName,\n                                +event.target.value\n                            );\n                    }}\n                    placeholder=\"Work\"\n                    margin=\"normal\"\n                />\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                <TextField\n                    id=\"interest\"\n                    label=\"Interest\"\n                    type=\"number\"\n                    value={skillInterest}\n                    className={classes.numberInfoField}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        if (event.target.value === '') {\n                            setSkillWork('');\n                            return;\n                        }\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillWorkValue +\n                                    +event.target.value,\n                                false\n                            ) &&\n                            +event.target.value >= 0\n                        )\n                            setSkillInterest(+event.target.value);\n                    }}\n                    onBlur={(\n                        event: React.ChangeEvent<\n                            HTMLInputElement | HTMLTextAreaElement\n                        >\n                    ) => {\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillWorkValue +\n                                    +event.target.value,\n                                false\n                            ) &&\n                            +event.target.value >= 0\n                        )\n                            props.setSkillInterestValue(\n                                props.row.skillName,\n                                +event.target.value\n                            );\n                    }}\n                    placeholder=\"Interest\"\n                    margin=\"normal\"\n                />\n            </TableCell>\n        </React.Fragment>\n    );\n};\n\nconst SimpleList: React.SFC<Props> = (props: Props) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table className={classes.table} size=\"small\">\n                <TableHead className={classes.head}>\n                    <TableRow>\n                        <TableCell className={classes.name} rowSpan={2}>\n                            Skill\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Value\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Type\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Work\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Interest\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n\n                {props.skills\n                    .filter(row => {\n                        return row != null;\n                    })\n                    .map(row => {\n                        return (\n                            <TableBody\n                                className={classes.body}\n                                key={row.skillName}\n                            >\n                                <TableRow>\n                                    <SkillsTableRow\n                                        setSkillWorkValue={\n                                            props.setSkillWorkValue\n                                        }\n                                        setSkillInterestValue={\n                                            props.setSkillInterestValue\n                                        }\n                                        row={row}\n                                        checkSetSkillValue={\n                                            props.checkSetSkillValue\n                                        }\n                                    />\n                                </TableRow>\n                            </TableBody>\n                        );\n                    })}\n            </Table>\n        </div>\n    );\n};\n\nexport default SimpleList;\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\n\nimport { skill, character } from '../modules/commonType';\n\ntype Props = {\n    skills: skill[];\n    setCharacter: (character: character) => void;\n    setSkillWorkValue: (name: string, work: number) => void;\n    setSkillInterestValue: (name: string, interest: number) => void;\n    checkSetSkillValue: (value: number, isWork: boolean) => boolean;\n};\n\ntype PropsRow = {\n    row: skill;\n    setSkillWorkValue: (name: string, work: number) => void;\n    setSkillInterestValue: (name: string, interest: number) => void;\n    checkSetSkillValue: (value: number, isWork: boolean) => boolean;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        table: {\n            width: '90%',\n        },\n        numberInfoField: {\n            marginLeft: theme.spacing(5),\n            marginRight: 'auto',\n            width: '100%',\n        },\n        name: {\n            width: '40%',\n        },\n        number: {\n            width: '25%',\n        },\n        head: {\n            width: '100%',\n        },\n        body: {\n            width: '100%',\n        },\n    })\n);\nconst SkillsTableRow: React.SFC<PropsRow> = (props: PropsRow) => {\n    const classes = useStyles();\n    const [skillWork, setSkillWork] = React.useState<number | undefined>(\n        props.row.skillWorkValue\n    );\n    const [skillInterest, setSkillInterest] = React.useState<number>(\n        props.row.skillInterestValue\n    );\n\n    return (\n        <React.Fragment>\n            <TableCell\n                className={classes.name}\n                rowSpan={2}\n                component=\"th\"\n                scope=\"row\"\n            >\n                {props.row.skillName}\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                {props.row.skillValue}\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                {props.row.skillType}\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                <TextField\n                    id=\"work\"\n                    label=\"Work\"\n                    type=\"number\"\n                    value={skillWork}\n                    className={classes.numberInfoField}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillInterestValue +\n                                    +event.target.value,\n                                true\n                            ) &&\n                            +event.target.value >= 0\n                        )\n                            setSkillWork(+event.target.value);\n                    }}\n                    onBlur={(\n                        event: React.ChangeEvent<\n                            HTMLInputElement | HTMLTextAreaElement\n                        >\n                    ) => {\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillInterestValue +\n                                    +event.target.value,\n                                true\n                            )\n                        )\n                            props.setSkillWorkValue(\n                                props.row.skillName,\n                                +event.target.value\n                            );\n                    }}\n                    placeholder=\"Work\"\n                    margin=\"normal\"\n                />\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                <TextField\n                    id=\"interest\"\n                    label=\"Interest\"\n                    type=\"number\"\n                    value={skillInterest}\n                    className={classes.numberInfoField}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillWorkValue +\n                                    +event.target.value,\n                                false\n                            ) &&\n                            +event.target.value >= 0\n                        )\n                            setSkillInterest(+event.target.value);\n                    }}\n                    onBlur={(\n                        event: React.ChangeEvent<\n                            HTMLInputElement | HTMLTextAreaElement\n                        >\n                    ) => {\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillWorkValue +\n                                    +event.target.value,\n                                false\n                            ) &&\n                            +event.target.value >= 0\n                        )\n                            props.setSkillInterestValue(\n                                props.row.skillName,\n                                +event.target.value\n                            );\n                    }}\n                    placeholder=\"Interest\"\n                    margin=\"normal\"\n                />\n            </TableCell>\n        </React.Fragment>\n    );\n};\n\nexport default function SimpleList(props: Props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table className={classes.table} size=\"small\">\n                <TableHead className={classes.head}>\n                    <TableRow>\n                        <TableCell className={classes.name} rowSpan={2}>\n                            Skill\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Value\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Type\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell className={classes.number} align=\"right\">\n                            Work\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Interest\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n\n                {props.skills\n                    .filter(row => {\n                        return row != null;\n                    })\n                    .map(row => {\n                        return (\n                            <TableBody\n                                className={classes.body}\n                                key={row.skillName}\n                            >\n                                <TableRow>\n                                    <SkillsTableRow\n                                        setSkillWorkValue={\n                                            props.setSkillWorkValue\n                                        }\n                                        setSkillInterestValue={\n                                            props.setSkillInterestValue\n                                        }\n                                        row={row}\n                                        checkSetSkillValue={\n                                            props.checkSetSkillValue\n                                        }\n                                    />\n                                </TableRow>\n                            </TableBody>\n                        );\n                    })}\n            </Table>\n        </div>\n    );\n}\n","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\nimport SkillListPC from './SkillList_PC';\nimport SkillListMobile from './SkillList_Mobile';\n\nimport { skill, character } from '../modules/commonType';\n\ntype Props = {\n    skills: skill[];\n    setCharacter: (character: character) => void;\n    setSkillWorkValue: (name: string, work: number) => void;\n    setSkillInterestValue: (name: string, interest: number) => void;\n    checkSetSkillValue: (value: number, isWork: boolean) => boolean;\n};\n\nexport default function SimpleList(props: Props) {\n    return (\n        <div>\n            {/* タブレット以上なら隠す -- モバイル画面で表示 */}\n            <Hidden smUp implementation=\"css\">\n                <SkillListMobile\n                    skills={props.skills}\n                    setCharacter={props.setCharacter}\n                    setSkillInterestValue={props.setSkillInterestValue}\n                    setSkillWorkValue={props.setSkillWorkValue}\n                    checkSetSkillValue={props.checkSetSkillValue}\n                />\n            </Hidden>\n\n            {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\n            <Hidden xsDown implementation=\"css\">\n                <SkillListPC\n                    skills={props.skills}\n                    setCharacter={props.setCharacter}\n                    setSkillInterestValue={props.setSkillInterestValue}\n                    setSkillWorkValue={props.setSkillWorkValue}\n                    checkSetSkillValue={props.checkSetSkillValue}\n                />\n            </Hidden>\n        </div>\n    );\n}\n","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        test: {\r\n            position: 'sticky' /* 要素をスクロールに応じて固定 */,\r\n            top: '30px' /* 縦スクロールに追従 */,\r\n            zIndex: 1 /* z-indexで最前面に持ってくる */,\r\n        },\r\n        card: {\r\n            margin: 0,\r\n            top: 10,\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            left: 10,\r\n            position: 'fixed',\r\n            width: '50%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '20%',\r\n                top: 'auto',\r\n                right: 20,\r\n                bottom: 20,\r\n                left: 'auto',\r\n            },\r\n        },\r\n        chip: {\r\n            marginTop: '10px',\r\n            marginBottom: '10px',\r\n            marginLeft: theme.spacing(5),\r\n            marginRight: 'auto',\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    workPoint: number;\r\n    interestPoint: number;\r\n};\r\n\r\nconst SkillPoint: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.test}>\r\n            <Chip color=\"primary\" label=\"Work Point\" className={classes.chip} />{' '}\r\n            {props.workPoint}\r\n            <Hidden xsDown implementation=\"css\">\r\n                <br />\r\n            </Hidden>\r\n            <Chip\r\n                color=\"primary\"\r\n                label=\"Interest Point\"\r\n                className={classes.chip}\r\n            />{' '}\r\n            {props.interestPoint}\r\n            <br />\r\n        </Card>\r\n    );\r\n};\r\nexport default SkillPoint;\r\n","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport SkillList from '../components/SkillList';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport SkillPoint from '../components/SkillPoint';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '90%',\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '90%',\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        menu: {\r\n            width: 200,\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            padding: theme.spacing(3, 2),\r\n            width: '90%',\r\n        },\r\n        card: {\r\n            margin: 'auto',\r\n            width: '90%',\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(2),\r\n        },\r\n        chip: {\r\n            marginTop: '10px',\r\n            marginBottom: '10px',\r\n            marginLeft: theme.spacing(5),\r\n            marginRight: 'auto',\r\n        },\r\n    })\r\n);\r\n\r\nconst initSkill = (): skill => {\r\n    return {\r\n        skillName: '',\r\n        skillValue: 0,\r\n        skillType: '',\r\n        skillUnique: false,\r\n        skillWorkValue: 0,\r\n        skillInterestValue: 0,\r\n        defaultValue: 0,\r\n    };\r\n};\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst skillTypes = [\r\n    ['戦闘', 'Fight'],\r\n    ['探索', 'Search'],\r\n    ['行動', 'Act'],\r\n    ['交渉', 'Negotiate'],\r\n    ['知識', 'Wisdom'],\r\n];\r\n\r\nconst getSkillIndex = (type: string): number => {\r\n    if (type === '戦闘') return 0;\r\n    if (type === '探索') return 1;\r\n    if (type === '行動') return 2;\r\n    if (type === '交渉') return 3;\r\n    if (type === '知識') return 4;\r\n    return -1;\r\n};\r\n\r\nconst setSkillValue = (\r\n    name: string,\r\n    value: number,\r\n    remainPoint: number,\r\n    character: character,\r\n    interest: boolean,\r\n    setCharacter: (character: character) => void\r\n) => {\r\n    if (value < 0 || remainPoint <= 0) return;\r\n    const newSkills = JSON.parse(JSON.stringify(character.skills));\r\n\r\n    const cSkill =\r\n        newSkills.length == null || newSkills.length === 0\r\n            ? undefined\r\n            : newSkills.find(\r\n                  (s: { skillName: string }) => s.skillName === name\r\n              );\r\n\r\n    if (cSkill == null) return;\r\n    if (interest) cSkill.skillInterestValue = value;\r\n    else cSkill.skillWorkValue = value;\r\n    cSkill.skillValue =\r\n        cSkill.defaultValue + cSkill.skillInterestValue + cSkill.skillWorkValue;\r\n    setCharacter({\r\n        ...character,\r\n        skills: newSkills,\r\n    });\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [openTable, setOpenTable] = React.useState<boolean[]>(\r\n        skillTypes.map(s => {\r\n            return false;\r\n        })\r\n    );\r\n\r\n    const checkSetSkillValue = (skillValue: number, isWork: boolean) => {\r\n        if (skillValue < 0 || skillValue > 100) return false;\r\n        if (isWork && getRemainingWorkPoint() <= 0) return false;\r\n        if (!isWork && getRemainingInterestPoint() <= 0) return false;\r\n        return true;\r\n    };\r\n\r\n    const getWorkPoint = () => {\r\n        if (props.character.skills.length === 0) return 0;\r\n        return props.character.skills\r\n            .map(s => s.skillWorkValue)\r\n            .reduce(function(total, data) {\r\n                return total + data;\r\n            });\r\n    };\r\n\r\n    const getInterestPoint = () => {\r\n        if (props.character.skills.length === 0) return 0;\r\n        return props.character.skills\r\n            .map(s => s.skillInterestValue)\r\n            .reduce(function(total, data) {\r\n                return total + data;\r\n            });\r\n    };\r\n\r\n    const getRemainingWorkPoint = () => {\r\n        return props.character.abilityValues.EDU * 20 - getWorkPoint();\r\n    };\r\n\r\n    const getRemainingInterestPoint = () => {\r\n        return props.character.abilityValues.INT * 10 - getInterestPoint();\r\n    };\r\n\r\n    const getSkills = (type: string): skill[] => {\r\n        const s = props.character.skills.filter(e => e.skillType === type);\r\n        if (s == null) return [initSkill()];\r\n        return s;\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <h2>Character Create</h2>\r\n            <SkillPoint\r\n                workPoint={getRemainingWorkPoint()}\r\n                interestPoint={getRemainingInterestPoint()}\r\n            />\r\n\r\n            {skillTypes.map(element => {\r\n                return (\r\n                    <div key={element[1]}>\r\n                        <br />\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                const newOpen: boolean[] = { ...openTable };\r\n                                newOpen[getSkillIndex(element[0])] = !newOpen[\r\n                                    getSkillIndex(element[0])\r\n                                ];\r\n                                setOpenTable(newOpen);\r\n                            }}\r\n                        >\r\n                            {element[1]}\r\n                        </Button>\r\n\r\n                        <br />\r\n                        <Card>\r\n                            {openTable[getSkillIndex(element[0])] && (\r\n                                <SkillList\r\n                                    skills={getSkills(element[0])}\r\n                                    setCharacter={props.setCharacter}\r\n                                    setSkillInterestValue={(\r\n                                        name: string,\r\n                                        value: number\r\n                                    ) => {\r\n                                        setSkillValue(\r\n                                            name,\r\n                                            value,\r\n                                            getRemainingInterestPoint(),\r\n                                            props.character,\r\n                                            true,\r\n                                            props.setCharacter\r\n                                        );\r\n                                    }}\r\n                                    setSkillWorkValue={(\r\n                                        name: string,\r\n                                        value: number\r\n                                    ) => {\r\n                                        setSkillValue(\r\n                                            name,\r\n                                            value,\r\n                                            getRemainingWorkPoint(),\r\n                                            props.character,\r\n                                            false,\r\n                                            props.setCharacter\r\n                                        );\r\n                                    }}\r\n                                    checkSetSkillValue={checkSetSkillValue}\r\n                                />\r\n                            )}\r\n                        </Card>\r\n                    </div>\r\n                );\r\n            })}\r\n        </Paper>\r\n    );\r\n};\r\nexport default Making;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '90%',\r\n        },\r\n        numberAbilityField: {\r\n            marginLeft: 0,\r\n            marginRight: 6,\r\n            width: '30%',\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '30%',\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        menu: {\r\n            width: 200,\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            padding: theme.spacing(3, 2),\r\n            width: '90%',\r\n        },\r\n        card: {\r\n            margin: 'auto',\r\n            width: '90%',\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(2),\r\n        },\r\n        chip: {\r\n            marginLeft: theme.spacing(2),\r\n            marginRight: 'auto',\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <h2>Character Create</h2>\r\n            <br />\r\n            <TextField\r\n                id=\"characterName\"\r\n                label=\"Character Name\"\r\n                value={props.character.characterInfos.characterName}\r\n                className={clsx(classes.textField, classes.dense)}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    props.setCharacter({\r\n                        ...props.character,\r\n                        characterInfos: {\r\n                            ...props.character.characterInfos,\r\n                            characterName: event.target.value,\r\n                        },\r\n                    });\r\n                }}\r\n                margin=\"dense\"\r\n            />\r\n            <br />\r\n            <TextField\r\n                id=\"background\"\r\n                label=\"Background\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                value={props.character.characterBackground}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    props.setCharacter({\r\n                        ...props.character,\r\n                        characterBackground: event.target.value,\r\n                    });\r\n                }}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n            />\r\n            <Card className={classes.card}>\r\n                <br />\r\n                infomation value\r\n                <br />\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"HP\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.characterInfos.HP}\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"MP\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.characterInfos.MP}\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"SAN\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.characterInfos.SAN}\r\n                <br />\r\n                <br />\r\n            </Card>\r\n            <br />\r\n\r\n            <Card className={classes.card}>\r\n                <TextField\r\n                    id=\"job\"\r\n                    label=\"job\"\r\n                    value={props.character.characterInfos.job}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                job: event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"JOB\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"age\"\r\n                    label=\"age\"\r\n                    type=\"number\"\r\n                    value={props.character.characterInfos.age}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                age: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"AGE\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"sex\"\r\n                    label=\"sex\"\r\n                    value={props.character.characterInfos.sex}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                sex: event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"SEX\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n\r\n                <TextField\r\n                    id=\"height\"\r\n                    label=\"height\"\r\n                    type=\"number\"\r\n                    value={props.character.characterInfos.height}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                height: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"HEIGHT\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"weight\"\r\n                    label=\"weight\"\r\n                    type=\"number\"\r\n                    value={props.character.characterInfos.weight}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                weight: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"WEIGHT\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"origin\"\r\n                    label=\"origin\"\r\n                    value={props.character.characterInfos.origin}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                origin: event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"ORIGIN\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n            </Card>\r\n\r\n            <br />\r\n        </Paper>\r\n    );\r\n};\r\nexport default Making;\r\n","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport CreateAbility from './CreateAbility';\r\nimport CreateSkills from './CreateSkills';\r\nimport CreateInfos from './CreateInfos';\r\nimport defaultSkills from '../characterMakingSkills.json';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            margin: 'auto',\r\n            padding: theme.spacing(3, 2),\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 600,\r\n            },\r\n        },\r\n        root: {\r\n            margin: 'auto',\r\n            width: '80%',\r\n        },\r\n        button: {\r\n            margin: 'auto',\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        instructions: {\r\n            margin: 'auto',\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    })\r\n);\r\n\r\nconst init = (): character => {\r\n    return {\r\n        skills: defaultSkills.skills.map(s => {\r\n            return {\r\n                skillName: s.skillName,\r\n                skillValue: s.skillValue,\r\n                skillType: s.skillType,\r\n                skillUnique: false,\r\n                skillWorkValue: 0,\r\n                skillInterestValue: 0,\r\n                defaultValue: s.skillValue,\r\n            };\r\n        }),\r\n\r\n        characterBackground: '',\r\n        abilityValues: {\r\n            STR: 0,\r\n            CON: 0,\r\n            POW: 0,\r\n            DEX: 0,\r\n            APP: 0,\r\n            SIZ: 0,\r\n            INT: 0,\r\n            EDU: 0,\r\n        },\r\n        characterInfos: {\r\n            characterName: '',\r\n            HP: 0,\r\n            MP: 0,\r\n            SAN: 0,\r\n            damageBonus: '',\r\n            job: '',\r\n            age: 0,\r\n            sex: '',\r\n            height: 0,\r\n            weight: 0,\r\n            origin: '',\r\n        },\r\n    };\r\n};\r\n\r\nfunction getSteps() {\r\n    return [\r\n        'Select character abilitys',\r\n        'Setting skills',\r\n        'Create character infomation',\r\n    ];\r\n}\r\n\r\nconst setSkill = (skill: skill, character: character): character => {\r\n    const newSkills = character.skills.filter(\r\n        s => s.skillName !== skill.skillName\r\n    );\r\n    return {\r\n        ...character,\r\n        skills: [...newSkills, skill],\r\n    };\r\n};\r\n\r\nfunction getStepContent(step: number) {\r\n    switch (step) {\r\n        case 0:\r\n            return 'abilitys';\r\n        case 1:\r\n            return 'skills';\r\n        case 2:\r\n            return 'infomation';\r\n        default:\r\n            return 'Unknown step';\r\n    }\r\n}\r\ntype Props = {\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [character, setCharacter] = React.useState(init());\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [skipped, setSkipped] = React.useState(new Set<number>());\r\n    const steps = getSteps();\r\n\r\n    function isStepSkipped(step: number) {\r\n        return skipped.has(step);\r\n    }\r\n\r\n    function handleNext() {\r\n        const DEX = character.abilityValues.DEX;\r\n        const newCharacter = setSkill(\r\n            {\r\n                skillName: '回避',\r\n                skillValue: DEX * 2,\r\n                skillType: '戦闘',\r\n                skillUnique: true,\r\n                skillWorkValue: 0,\r\n                skillInterestValue: 0,\r\n                defaultValue: DEX * 2,\r\n            },\r\n            character\r\n        );\r\n\r\n        setCharacter(newCharacter);\r\n\r\n        setCharacter({\r\n            ...newCharacter,\r\n            characterInfos: {\r\n                ...newCharacter.characterInfos,\r\n                HP:\r\n                    (newCharacter.abilityValues.CON +\r\n                        newCharacter.abilityValues.SIZ) /\r\n                    2,\r\n                MP: newCharacter.abilityValues.POW,\r\n                SAN: newCharacter.abilityValues.POW * 5,\r\n            },\r\n        });\r\n\r\n        let newSkipped = skipped;\r\n        if (isStepSkipped(activeStep)) {\r\n            newSkipped = new Set(newSkipped.values());\r\n            newSkipped.delete(activeStep);\r\n        }\r\n\r\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n        setSkipped(newSkipped);\r\n    }\r\n\r\n    function handleBack() {\r\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n    }\r\n\r\n    const setUniqueSkills = (setCharacter: (character: character) => void) => {\r\n        character.skills\r\n            .filter(e => e.skillWorkValue !== 0 || e.skillInterestValue !== 0)\r\n            .forEach(e => (e.skillUnique = true));\r\n        setCharacter({ ...character });\r\n    };\r\n\r\n    const setLastCharacter = (setCharacter: (character: character) => void) => {\r\n        setUniqueSkills(setCharacter);\r\n        const POW = character.abilityValues.POW;\r\n        const INT = character.abilityValues.INT;\r\n        const EDU = character.abilityValues.EDU;\r\n\r\n        let newCharacter = setSkill(\r\n            {\r\n                skillName: '幸運',\r\n                skillValue: POW * 5,\r\n                skillType: '探索',\r\n                skillUnique: true,\r\n                skillWorkValue: 0,\r\n                skillInterestValue: 0,\r\n                defaultValue: POW * 5,\r\n            },\r\n            setSkill(\r\n                {\r\n                    skillName: 'アイデア',\r\n                    skillValue: INT * 5,\r\n                    skillType: '探索',\r\n                    skillUnique: true,\r\n                    skillWorkValue: 0,\r\n                    skillInterestValue: 0,\r\n                    defaultValue: INT * 5,\r\n                },\r\n                setSkill(\r\n                    {\r\n                        skillName: '知識',\r\n                        skillValue: EDU * 5,\r\n                        skillType: '探索',\r\n                        skillUnique: true,\r\n                        skillWorkValue: 0,\r\n                        skillInterestValue: 0,\r\n                        defaultValue: EDU * 5,\r\n                    },\r\n                    character\r\n                )\r\n            )\r\n        );\r\n\r\n        setCharacter({ ...character, skills: newCharacter.skills });\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps: { completed?: boolean } = {};\r\n                    const labelProps: { optional?: React.ReactNode } = {};\r\n\r\n                    return (\r\n                        <Step key={label} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <CreateAbility\r\n                    character={character}\r\n                    setCharacter={setCharacter}\r\n                />\r\n            )}\r\n            {activeStep === 1 && (\r\n                <CreateSkills\r\n                    character={character}\r\n                    setCharacter={setCharacter}\r\n                />\r\n            )}\r\n            {activeStep === 2 && (\r\n                <CreateInfos\r\n                    character={character}\r\n                    setCharacter={setCharacter}\r\n                />\r\n            )}\r\n\r\n            <div>\r\n                {activeStep === steps.length ? (\r\n                    <div>\r\n                        {setLastCharacter(props.setCharacter)}\r\n                        <Typography className={classes.instructions}>\r\n                            All steps completed - you&apos;re finished\r\n                        </Typography>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <Typography className={classes.instructions}>\r\n                            {getStepContent(activeStep)}\r\n                        </Typography>\r\n                        <div>\r\n                            <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={handleBack}\r\n                                className={classes.button}\r\n                            >\r\n                                Back\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleNext}\r\n                                className={classes.button}\r\n                            >\r\n                                {activeStep === steps.length - 1\r\n                                    ? 'Finish'\r\n                                    : 'Next'}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Making;\r\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Making from '../pages/Making';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacter: (chara: character) => {\r\n            dispatch(actionCreator.character.setCharacter({chara}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Making);","import * as React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport Home from './containers/Home';\nimport Login from './pages/Login';\nimport Main from './pages/Main';\nimport Setting from './containers/Setting';\nimport Making from './containers/Making';\nimport './App.css';\n\nconst App: React.FC = () => {\n    const [open, setOpen] = React.useState(true);\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <header className=\"App-header\">\n                    <NavBar\n                        //mobile={navigator.userAgent.match(/(iPhone|iPad|iPod|Android)/i) == null}\n                        open={open}\n                        setOpen={setOpen}\n                    />\n                </header>\n\n                <div className=\"App-main\" id=\"app-main\">\n                    <Route exact path=\"/\" component={Main} />\n\n                    <Route\n                        path=\"/home\"\n                        render={() => (\n                            <Home openMobile={open} setOpenMobile={setOpen} />\n                        )}\n                    />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/setting\" component={Setting} />\n                    <Route exact path=\"/making\" component={Making} />\n                </div>\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport './index.css';\n\nimport App from './App';\nimport { rootReducer } from './states';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}