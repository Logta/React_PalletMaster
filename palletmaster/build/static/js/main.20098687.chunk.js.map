{"version":3,"sources":["PM_Desine.png","components/NavBar_PC.tsx","components/NavBar_Mobile.tsx","components/NavBar.tsx","states/settings/index.ts","states/settings/SetDiscordUrl.ts","states/settings/SetDiceUrl.ts","states/characters/index.ts","states/characters/SetCharacter.ts","states/characters/SetSkills.ts","states/characters/SetAbilityValues.ts","states/characters/SetCharacterInfos.ts","states/characters/SetCharacterName.ts","states/characters/SetHP.ts","states/characters/SetMP.ts","states/characters/SetSAN.ts","states/characters/SetCharacterBackground.ts","states/index.ts","modules/ShakeDice.ts","components/DiceDialog.tsx","modules/sendDiscord.ts","pages/Skill.tsx","containers/Skill.tsx","pages/Character.tsx","containers/Character.tsx","modules/getAbilityValue.ts","pages/Ability.tsx","containers/Ability.tsx","modules/shakeNDNDice.ts","components/DiceNDNDialog.tsx","pages/SAN.tsx","containers/SAN.tsx","pages/Battle.tsx","containers/Battle.tsx","components/ImportPMJDialog.tsx","modules/importPMJ.js","components/SideBar_PC.tsx","components/SideBar_Mobile.tsx","components/SideBar.tsx","containers/SideBar.tsx","pages/Home.tsx","containers/Home.tsx","modules/firebase.ts","pages/Login.tsx","pages/Main.tsx","pages/Setting.tsx","containers/Setting.tsx","pages/CreateAbility.tsx","components/SkillList_PC.tsx","components/SkillList_Mobile.tsx","components/SkillList.tsx","components/SkillPoint.tsx","pages/CreateSkills.tsx","pages/CreateInfos.tsx","pages/Making.tsx","containers/Making.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","position","zIndex","navBar","left","right","margin","width","menuButton","marginRight","spacing","title","navBarAction","NavBar","classes","React","useState","value","setValue","AppBar","className","Toolbar","Typography","variant","BottomNavigation","onChange","event","newValue","BottomNavigationAction","component","Link","to","label","icon","color","props","Button","onClick","setOpen","open","Hidden","smUp","implementation","NavBar_Mobile","xsDown","NavBar_PC","actionCreator","setDiscordUrl","payload","type","setDiceUrl","setCharacter","setSkills","setAbilityValues","setCharacterInfos","setCharacterName","setHP","setMP","setSAN","setCharacterBackground","rootReducer","combineReducers","setting","state","discordUrl","diceUrl","action","url","character","skills","characterBackground","abilityValues","STR","CON","POW","DEX","APP","SIZ","INT","EDU","characterInfos","characterName","HP","MP","SAN","damageBonus","job","age","sex","height","weight","origin","Object","assign","chara","hp","mp","san","background","Settings","Characters","ShakeDice","item","result","ok","_1d100Value","Math","round","random","name","chip","textAlign","AlertDialog","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","Chip","DialogActions","autoFocus","sendBCDice","sendDice","sendDiscordText","require","Webhook","info","user","func","a","fetch","then","res","json","response","JSON","stringify","catch","error","console","log","breakpoints","up","table","minWidth","numberInfoField","marginLeft","fab","down","connect","dispatch","category","setCategory","skill","setSkill","openDialog","setOpenDialog","setItem","setItems","ability","addSkill","skillName","skillValue","skillType","skillUnique","skillWorkValue","skillInterestValue","defaultValue","newSkills","parse","cSkill","length","undefined","find","s","Paper","clsx","TextField","target","placeholder","Fab","aria-label","InputLabel","htmlFor","Select","onOpen","inputProps","MenuItem","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","_","String","handleClick","scope","button","input","display","textField","numberAbilityField","dense","marginTop","paper","padding","card","Character","multiline","rowsMax","Card","newAbilityValues","match","val","on","pred","fn","otherwise","when","chain","getAbilityValue","abilityValue","power","eq","val1","val2","getAbility","Ability","setPower","showLabels","ShakeNDNDice","diceResults","count","number","i","push","reduce","total","data","SANValue","diffSAN","setDiffSAN","SANFunc","countDice","setCountDice","numberDice","setNumberDice","SANIdea","idea","overflowX","minwidth","HPDiff","setHPDiff","nputFileBtnHide","opacity","appearance","FormDialog","File","file","setFile","fileName","setFileName","setChara","e","files","handleChangeFile","reader","FileReader","onerror","alert","readAsText","addEventListener","onSubmit","maxWidth","backgroundColor","palette","charaDownload","blob","Blob","window","URL","createObjectURL","link","document","createElement","download","href","body","appendChild","click","removeChild","message","SimpleList","List","ListItem","ListItemIcon","ListItemText","primary","Divider","SideBar","paddingTop","drawer","flexShrink","toolbar","mixins","drawerPaper","content","flexGrow","container","useTheme","CssBaseline","Drawer","anchor","direction","ModalProps","keepMounted","exact","path","Skill","getElementById","Abillity","Battle","config","apiKey","process","authDomain","databaseURL","projectId","REACT_APP_PROJECT_ID","storageBucket","messagingSenderId","appId","firebase","menu","mobile","Login","userName","setUserName","password","setPassword","auth","currentUser","signOut","email","signInWithEmailAndPassword","login","Main","src","logo","alt","Setting","nDiscord","setDisordValue","nDice","setDiceValue","newDiceURL","newDiscordURL","Making","itemNDN","newCharacter","ceil","setAbilityToDice","head","size","rowSpan","setSkillWorkValue","setSkillInterestValue","test","top","bottom","marginBottom","SkillPoint","workPoint","interestPoint","skillTypes","getSkillIndex","setSkillValue","remainPoint","interest","openTable","setOpenTable","getRemainingWorkPoint","getRemainingInterestPoint","getSkills","filter","element","newOpen","instructions","defaultSkills","activeStep","setActiveStep","Set","skipped","setSkipped","steps","Stepper","index","Step","StepLabel","CreateAbility","CreateSkills","CreateInfos","forEach","setUniqueSkills","setLastCharacter","step","getStepContent","disabled","prevActiveStep","newSkipped","has","values","delete","App","render","Home","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","createStore","ReactDOM","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.20098687.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PM_Desine.02fe71ee.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport PalletIcon from '@material-ui/icons/ColorLens';\r\nimport FavoriteIcon from '@material-ui/icons/OfflinePin';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'fixed',\r\n      zIndex: 1,\r\n    },\r\n    navBar:{\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      margin: 'auto',\r\n      width: '50%',\r\n      zIndex: 2,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    title: {\r\n      //flexGrow: 1,\r\n    },\r\n    navBarAction:{\r\n      width: '25%',\r\n    },\r\n  })\r\n);\r\n\r\nconst NavBar: React.SFC = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <AppBar\r\n    className={classes.root}>\r\n    <Toolbar>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n        Palletmaster\r\n      </Typography>\r\n\r\n      <BottomNavigation value={value} onChange={handleChange} \r\n        className={classes.navBar}>\r\n        <BottomNavigationAction className={classes.navBarAction}\r\n          component={Link}\r\n          to=\"/home\" label=\"Pallet\" value=\"pallet\" icon={<PalletIcon />} />\r\n        <BottomNavigationAction className={classes.navBarAction}\r\n          component={Link}\r\n          to=\"/login\" label=\"Login\" value=\"login\" icon={<FavoriteIcon />} />\r\n        <BottomNavigationAction className={classes.navBarAction}\r\n          component={Link}\r\n          to=\"/setting\" label=\"Setting\" value=\"setting\" icon={<SettingIcon />} />\r\n        <BottomNavigationAction className={classes.navBarAction}\r\n          component={Link}\r\n          to=\"/making\" label=\"Create\" value=\"create\" icon={<CreateIcon />} />\r\n      </BottomNavigation>\r\n    </Toolbar>\r\n  </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport PalletIcon from '@material-ui/icons/ColorLens';\r\nimport FavoriteIcon from '@material-ui/icons/OfflinePin';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'fixed',\r\n      zIndex: 1,\r\n    },\r\n    navBar:{\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      margin: 'auto',\r\n      width: '100%',\r\n      zIndex: 2,\r\n    },\r\n    title: {\r\n      //flexGrow: 1,\r\n    },\r\n    navBarAction:{\r\n      width: '20%',\r\n    },\r\n    icon:{\r\n      color:'white',\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  open : boolean;\r\n  setOpen: (open: boolean) => void;\r\n};\r\n\r\nconst NavBar: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <AppBar\r\n    className={classes.root}>\r\n    <Toolbar> \r\n      <Button onClick={()=>{props.setOpen(!props.open)}}>\r\n        <DehazeIcon className={classes.icon}/>\r\n      </Button>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n        Palletmaster\r\n      </Typography>\r\n    </Toolbar>\r\n    <Toolbar>\r\n\r\n      <BottomNavigation value={value} onChange={handleChange} \r\n        className={classes.navBar}>\r\n        <BottomNavigationAction className={classes.navBarAction}\r\n          component={Link}\r\n          to=\"/home\" label=\"Pallet\" value=\"pallet\" icon={<PalletIcon />} />\r\n        <BottomNavigationAction className={classes.navBarAction}\r\n          component={Link}\r\n          to=\"/login\" label=\"Login\" value=\"login\" icon={<FavoriteIcon />} />\r\n        <BottomNavigationAction className={classes.navBarAction}\r\n          component={Link}\r\n          to=\"/setting\" label=\"Setting\" value=\"setting\" icon={<SettingIcon />} />\r\n        <BottomNavigationAction className={classes.navBarAction}\r\n          component={Link}\r\n          to=\"/making\" label=\"Create\" value=\"create\" icon={<CreateIcon />} />\r\n      </BottomNavigation>\r\n    </Toolbar>\r\n  </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport NavBar_PC from './NavBar_PC';\r\nimport NavBar_Mobile from './NavBar_Mobile';\r\n\r\ntype Props = {\r\n  open : boolean;\r\n  setOpen: (open: boolean) => void;\r\n};\r\n\r\nconst NavBar: React.SFC<Props> = (props: Props) => {\r\n  return (\r\n    <div>\r\n      {/* タブレット以上なら隠す -- モバイル画面で表示 */}\r\n      <Hidden smUp implementation=\"css\">\r\n        <NavBar_Mobile open={props.open} setOpen={props.setOpen} />\r\n      </Hidden>\r\n\r\n      {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\r\n      <Hidden xsDown implementation=\"css\">\r\n        <NavBar_PC />\r\n      </Hidden>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import { setDiscordUrl, SetDiscordUrlAction } from './SetDiscordUrl';\r\nimport { setDiceUrl, SetDiceUrlAction } from './SetDiceUrl';\r\n\r\ntype Actions\r\n    = SetDiscordUrlAction\r\n    | SetDiceUrlAction;\r\n\r\nexport type State = {    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n    discordUrl: string;\r\n    diceUrl: string;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        discordUrl: \"\",\r\n        diceUrl: \"\",\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_DISCORD_URL_SETTING':\r\n            return {\r\n                ...state,\r\n                discordUrl: action.payload.url,\r\n            };\r\n        case 'SET_DICE_URL_SETTING':\r\n            return{\r\n                ...state,\r\n                diceUrl: action.payload.url,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setDiscordUrl,\r\n    setDiceUrl,\r\n};","import { Action } from 'redux';\r\n\r\nexport type SetDiscordUrlPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiscordUrlAction extends Action {\r\n    type: 'SET_DISCORD_URL_SETTING';\r\n    payload: SetDiscordUrlPayload;\r\n}\r\n\r\nexport const setDiscordUrl = (payload: SetDiscordUrlPayload): SetDiscordUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DISCORD_URL_SETTING',\r\n    };\r\n};","import { Action } from 'redux';\r\n\r\nexport type SetDiceUrlPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiceUrlAction extends Action {\r\n    type: 'SET_DICE_URL_SETTING';\r\n    payload: SetDiceUrlPayload;\r\n}\r\n\r\nexport const setDiceUrl = (payload: SetDiceUrlPayload): SetDiceUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DICE_URL_SETTING',\r\n    };\r\n};","import { setCharacter, SetCharacterAction } from './SetCharacter';\r\nimport { setSkills, SetSkillsAction } from './SetSkills';\r\nimport { setAbilityValues, SetAbilityValuesAction } from './SetAbilityValues';\r\nimport { setCharacterInfos, SetCharacterInfosAction } from './SetCharacterInfos';\r\nimport { setCharacterName, SetCharacterNameAction } from './SetCharacterName';\r\nimport { setHP, SetHPAction } from './SetHP';\r\nimport { setMP, SetMPAction } from './SetMP';\r\nimport { setSAN, SetSANAction } from './SetSAN';\r\nimport { setCharacterBackground, SetCharacterBackgroundAction } from './SetCharacterBackground';\r\n\r\ntype Actions\r\n    = SetCharacterAction | \r\n    SetSkillsAction| \r\n    SetAbilityValuesAction| \r\n    SetCharacterInfosAction| \r\n    SetCharacterNameAction| \r\n    SetHPAction| \r\n    SetMPAction|\r\n    SetSANAction|\r\n    SetCharacterBackgroundAction ;\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\nexport type State = {    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n    character: character;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        character: {\r\n            skills: [],\r\n            characterBackground: \"\",\r\n            abilityValues: {\r\n                STR: 0,\r\n                CON: 0,\r\n                POW: 0,\r\n                DEX: 0,\r\n                APP: 0,\r\n                SIZ: 0,\r\n                INT: 0,\r\n                EDU: 0\r\n            },\r\n            characterInfos: {\r\n                characterName: \"\",\r\n                HP: 0,\r\n                MP: 0,\r\n                SAN: 0,\r\n                damageBonus: \"\",\r\n                job: \"\",\r\n                age: 0,\r\n                sex: \"\",\r\n                height: 0,\r\n                weight: 0,\r\n                origin: \"\"\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_CHARACTER':\r\n            return Object.assign({}, state, {\r\n                character: action.payload.chara,\r\n              });\r\n        case 'SET_SKILLS':\r\n            return{\r\n                ...state,\r\n                character:{\r\n                    ...state.character,\r\n                    skills: action.payload.skills,\r\n                }\r\n            };\r\n        case 'SET_ABILITY_VALUES':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    abilityValues: action.payload.abilityValues,\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_INFOS':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: action.payload.characterInfos,\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_NAME':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        characterName: action.payload.characterName,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_HP':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        HP: action.payload.hp,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_MP':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        MP: action.payload.mp,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_SAN':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        SAN: action.payload.san,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_BACKGROUND':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterBackground: action.payload.background,\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setCharacter,\r\n    setSkills,\r\n    setAbilityValues,\r\n    setCharacterInfos,\r\n    setCharacterName,\r\n    setHP,\r\n    setMP,\r\n    setSAN,\r\n    setCharacterBackground\r\n};","import { Action } from 'redux';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\n\r\nexport type SetCharacterPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    chara: character\r\n};\r\n\r\nexport interface SetCharacterAction extends Action {\r\n    type: 'SET_CHARACTER';\r\n    payload: SetCharacterPayload;\r\n}\r\n\r\nexport const setCharacter = (payload: SetCharacterPayload): SetCharacterAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_CHARACTER',\r\n    };\r\n};","import { Action } from 'redux';\n\ntype skill = {\n    skillName: string,\n    skillValue: number,\n    skillType: string,\n    skillUnique: boolean,\n    skillWorkValue: number,\n    skillInterestValue: number,\n    defaultValue: number\n};\n\nexport type SetSkillsPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    skills: skill[];\n};\n\nexport interface SetSkillsAction extends Action {\n    type: 'SET_SKILLS';\n    payload: SetSkillsPayload;\n}\n\nexport const setSkills = (payload: SetSkillsPayload): SetSkillsAction => {\n    return {\n        payload,\n        type: 'SET_SKILLS',\n    };\n};","import { Action } from 'redux';\n\ntype AbilityValues = {\n    STR: number,\n    CON: number,\n    POW: number,\n    DEX: number,\n    APP: number,\n    SIZ: number,\n    INT: number,\n    EDU: number,\n};\n\nexport type SetAbilityValuesPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    abilityValues: AbilityValues;\n};\n\nexport interface SetAbilityValuesAction extends Action {\n    type: 'SET_ABILITY_VALUES';\n    payload: SetAbilityValuesPayload;\n}\n\nexport const setAbilityValues = (payload: SetAbilityValuesPayload): SetAbilityValuesAction => {\n    return {\n        payload,\n        type: 'SET_ABILITY_VALUES',\n    };\n};","import { Action } from 'redux';\n\ntype CharacterInfos = {\n    characterName: string,\n    HP: number,\n    MP: number,\n    SAN: number,\n    damageBonus: string,\n    job: string,\n    age: number,\n    sex: string,\n    height: number,\n    weight: number,\n    origin: string,\n};\n\nexport type SetCharacterInfosPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    characterInfos: CharacterInfos;\n};\n\nexport interface SetCharacterInfosAction extends Action {\n    type: 'SET_CHARACTER_INFOS';\n    payload: SetCharacterInfosPayload;\n}\n\nexport const setCharacterInfos = (payload: SetCharacterInfosPayload): SetCharacterInfosAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_INFOS',\n    };\n};","import { Action } from 'redux';\n\nexport type SetCharacterNamePayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    characterName: string;\n};\n\nexport interface SetCharacterNameAction extends Action {\n    type: 'SET_CHARACTER_NAME';\n    payload: SetCharacterNamePayload;\n}\n\nexport const setCharacterName = (payload: SetCharacterNamePayload): SetCharacterNameAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_NAME',\n    };\n};","import { Action } from 'redux';\n\nexport type SetHPPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    hp: number;\n};\n\nexport interface SetHPAction extends Action {\n    type: 'SET_HP';\n    payload: SetHPPayload;\n}\n\nexport const setHP = (payload: SetHPPayload): SetHPAction => {\n    return {\n        payload,\n        type: 'SET_HP',\n    };\n};","import { Action } from 'redux';\n\nexport type SetMPPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    mp: number;\n};\n\nexport interface SetMPAction extends Action {\n    type: 'SET_MP';\n    payload: SetMPPayload;\n}\n\nexport const setMP = (payload: SetMPPayload): SetMPAction => {\n    return {\n        payload,\n        type: 'SET_MP',\n    };\n};","import { Action } from 'redux';\n\nexport type SetSANPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    san: number;\n};\n\nexport interface SetSANAction extends Action {\n    type: 'SET_SAN';\n    payload: SetSANPayload;\n}\n\nexport const setSAN = (payload: SetSANPayload): SetSANAction => {\n    return {\n        payload,\n        type: 'SET_SAN',\n    };\n};","import { Action } from 'redux';\n\nexport type SetCharacterBackgroundPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    background: string;\n};\n\nexport interface SetCharacterBackgroundAction extends Action {\n    type: 'SET_CHARACTER_BACKGROUND';\n    payload: SetCharacterBackgroundPayload;\n}\n\nexport const setCharacterBackground = (payload: SetCharacterBackgroundPayload): SetCharacterBackgroundAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_BACKGROUND',\n    };\n};","import { combineReducers } from 'redux';\r\nimport * as Settings from './settings';\r\nimport * as Characters from './characters';\r\n\r\nexport type RootState = {\r\n    setting: Settings.State;\r\n    character: Characters.State;\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    setting: Settings.reducer,\r\n    character: Characters.reducer,\r\n});\r\n\r\nexport const actionCreator = {\r\n    setting: Settings.actionCreator,\r\n    character: Characters.actionCreator,\r\n};","import sendBCDice from \"./sendDiscord\";\r\n\r\ninterface Item {\r\n  name: string;\r\n  url: string;\r\n  user: string;\r\n  value: string;\r\n}\r\n\r\ninterface Result {\r\n  ok: string;\r\n  result: string;\r\n}\r\n\r\nfunction ShakeDice(item: Item): Result\r\n{\r\n\r\n  let result: Result = {\r\n    ok :\"\",\r\n    result : \"\",\r\n  };\r\n\r\n  let _1d100Value: number = Math.round(Math.random() * 100) + 1;\r\n  \r\n  if(_1d100Value <= 5){\r\n    result.ok = \"クリティカル\"\r\n  }else if(_1d100Value <= +item.value){\r\n    result.ok = \"成功\"\r\n  }else{\r\n    result.ok = \"失敗\"\r\n  }\r\n\r\n  result.result = \"技能:\" + item.name + \" \" + _1d100Value\r\n   + \" <= \" + item.value;\r\n\r\n   return result;\r\n}\r\n\r\nexport default ShakeDice;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ShakeDice from '../modules/ShakeDice';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    chip: {\r\n      textAlign:\"center\"\r\n    },\r\n  }),\r\n);\r\n\r\ninterface Item {\r\n    name: string;\r\n    url: string;\r\n    user: string;\r\n    value: string;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    item: Item;\r\n    setOpen(open :boolean) : void;\r\n};\r\n\r\nexport default function AlertDialog(props: Props) {\r\n  const classes = useStyles();\r\n\r\n  let result :Result = {\r\n    ok: \"\",\r\n    result: \"\",\r\n  }\r\n\r\n  if(props.open){\r\n    result = ShakeDice(props.item);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Dice Result\"}</DialogTitle>\r\n        <DialogContent>\r\n          {(result.ok === '失敗') ? \r\n          (\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              <Chip color=\"default\" label={ result.ok } className={classes.chip}/>\r\n            </DialogContentText>) : (result.ok === '成功') ?\r\n          (\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n            <Chip color=\"primary\" label={ result.ok } className={classes.chip}/>\r\n            </DialogContentText>):\r\n          (\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n            <Chip color=\"secondary\" label={ result.ok } className={classes.chip}/>\r\n            </DialogContentText>)}\r\n          <br />\r\n          \r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.result }\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","interface Item {\r\n  name: string;\r\n  url: string;\r\n  user: string;\r\n  value: string;\r\n}\r\n\r\ninterface Result {\r\n  ok: string;\r\n  result: string;\r\n}\r\n\r\nexport default function sendBCDice(item: Item) \r\n{\r\n  sendDice(sendDiscordText, item);\r\n}\r\n\r\nfunction sendDiscordText(result: Result, item: Item) {\r\n  if (result.ok) {\r\n    const webhook = require(\"webhook-discord\");\r\n\r\n    const Hook = new webhook.Webhook(item.url);\r\n    Hook.info(item.user, item.name + \" \" + result.result);\r\n  }\r\n}\r\n\r\nasync function sendDice(func: (json: Result, item: Item) => void, item: Item) {\r\n  const url =\r\n    \"https://www.taruki.com/bcdice-api\" +\r\n    \"/v1/diceroll?system=Cthulhu&command=\" +\r\n    \"CCB<=\" +\r\n    item.value; // リクエスト先URL\r\n\r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then(response => {\r\n      let json = response;\r\n      const jsonLog = JSON.stringify(json);\r\n      if (response.ok) {\r\n        return func(json, item);\r\n      }\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nexport function goodbye(name: string) {\r\n  return `Goodbye ${name}`;\r\n}","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport clsx from 'clsx';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport sendBCDice from '../modules/sendDiscord';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '75%',\r\n      },\r\n      margin: 'auto',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      width: '90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n      minWidth: 500,\r\n      }\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    fab: {\r\n      marginLeft: \"5px\",\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(5),\r\n        margin: theme.spacing(1),\r\n      }\r\n    },\r\n    chip: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(5),\r\n        margin: theme.spacing(1),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        textAlign: 'left',\r\n      }\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype Props = {\r\n    skills: skill[];\r\n    characterName: string;\r\n    setSkills(skills: skill[]) : void;\r\n    discordUrl: string;\r\n};\r\n\r\nexport default function SimpleTable(props: Props) {\r\n  const classes = useStyles();\r\n  const [category, setCategory] = React.useState<string>(\"unique\");\r\n  const [skill, setSkill] = React.useState<string>(\"\");\r\n  const [value, setValue] = React.useState<number>(0);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const handleClick = (skillName: string ): void =>\r\n  {\r\n    const skill: skill | undefined = props.skills.find(s =>(s.skillName === skillName));\r\n    if(skill == null) return;\r\n    setItems(skillName, String(skill.skillValue));\r\n  }\r\n\r\n  function handleChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n    setCategory(event.target.value as string);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleDialogOpen(){\r\n    console.log(props.discordUrl );\r\n    console.log();\r\n    (props.discordUrl !== \"\") ?\r\n    sendBCDice(item):\r\n    setOpenDialog(true);\r\n  }\r\n\r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: props.discordUrl,\r\n      user: props.characterName,\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  const setSkills = (skill: string, value: number): void =>\r\n  {\r\n    const addSkill : skill = {\r\n      skillName: \"\",\r\n      skillValue: 0,\r\n      skillType: \"追加\",\r\n      skillUnique: true,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: 0\r\n  };\r\n  \r\n    const newSkills = JSON.parse(JSON.stringify(props.skills));\r\n\r\n    const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n      undefined : \r\n      newSkills.find((s: { skillName: string; }) => s.skillName === skill);\r\n\r\n    if(cSkill == null){\r\n      addSkill.skillName = skill;\r\n      addSkill.skillValue = value;\r\n      props.setSkills([...props.skills, addSkill]);\r\n    }else{\r\n      cSkill.skillValue = value;\r\n      props.setSkills(newSkills);\r\n    }\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    <Paper className={clsx(classes.root)}>\r\n      <br />\r\n      {/* タブレット以上なら隠す -- モバイル画面で表示 */}\r\n      <Hidden smUp implementation=\"css\">\r\n        <Chip color=\"primary\" label=\"Skill\" />        \r\n        <TextField\r\n          id=\"san\"\r\n          label=\"Skill\"\r\n          type=\"text\"\r\n          defaultValue={skill}\r\n          className={classes.numberInfoField}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setSkill(event.target.value)}}\r\n          placeholder=\"Skill\"\r\n          margin=\"normal\"\r\n          />      \r\n          <br />\r\n          <Chip color=\"primary\" label=\"Value\" className={classes.chip}　/>    \r\n          <TextField\r\n            id=\"san\"\r\n            label=\"Value\"\r\n            type=\"number\"\r\n            defaultValue={value}\r\n            className={classes.numberInfoField}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setValue(+event.target.value)}}\r\n            placeholder=\"Value\"\r\n            margin=\"normal\"\r\n            />\r\n\r\n          <br />\r\n          <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n            <AddIcon onClick={() => {setSkills(skill, value)}}/>\r\n          </Fab>\r\n        </Hidden>\r\n\r\n      {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Chip color=\"primary\" label=\"Skill\" />        \r\n        <TextField\r\n          id=\"san\"\r\n          label=\"Skill\"\r\n        type=\"text\"\r\n        defaultValue={skill}\r\n        className={classes.numberInfoField}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setSkill(event.target.value)}}\r\n        placeholder=\"Skill\"\r\n        margin=\"normal\"\r\n        />      \r\n        <Chip color=\"primary\" label=\"Value\" className={classes.chip}　/>    \r\n        <TextField\r\n          id=\"san\"\r\n          label=\"Value\"\r\n          type=\"number\"\r\n          defaultValue={value}\r\n          className={classes.numberInfoField}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setValue(+event.target.value)}}\r\n          placeholder=\"Value\"\r\n          margin=\"normal\"\r\n          />\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <AddIcon onClick={() => {setSkills(skill, value)}}/>\r\n        </Fab>\r\n      </Hidden>\r\n      \r\n      <br />\r\n      <br />\r\n\r\n      <InputLabel htmlFor=\"demo-controlled-open-select\">Category</InputLabel>\r\n      <Select\r\n        open={open}\r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        value={category}\r\n        onChange={handleChange}\r\n        inputProps={{\r\n          name: 'category',\r\n          id: 'demo-controlled-open-select',\r\n        }}\r\n      >\r\n        <MenuItem value=\"unique\">\r\n          <em>Unique</em>\r\n        </MenuItem>\r\n        <MenuItem value={\"戦闘\"}>Fight</MenuItem>\r\n        <MenuItem value={\"探索\"}>Search</MenuItem>\r\n        <MenuItem value={\"知識\"}>Wisdom</MenuItem>\r\n        <MenuItem value={\"行動\"}>Act</MenuItem>\r\n        <MenuItem value={\"交渉\"}>Negotiation</MenuItem>\r\n        <MenuItem value={\"all\"}>ALL</MenuItem>\r\n      </Select>\r\n      <br />\r\n      <br />\r\n    </Paper>\r\n\r\n    <Paper className={classes.root}>\r\n\r\n\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Skill</TableCell>\r\n            <TableCell align=\"right\">Value</TableCell>\r\n            <TableCell align=\"right\">Type</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.skills.map(row => {\r\n            if(category === \"unique\" && !row.skillUnique){ return };\r\n            if(category !== \"unique\" && category !== \"all\" && row.skillType !== category){ return };\r\n\r\n            return <TableRow key={row.skillName} \r\n              onClick={_ => {\r\n                console.log(\"onclick\");\r\n                handleClick(row.skillName)\r\n                handleDialogOpen();}\r\n              }>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.skillName}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.skillValue}</TableCell>\r\n              <TableCell align=\"right\">{row.skillType}</TableCell>\r\n            </TableRow>\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <DiceDialog open={openDialog} setOpen={setOpenDialog} item={item} />\r\n    </Paper>\r\n    </div>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Skill from '../pages/Skill';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return { \r\n        skills: state.character.character.skills,\r\n        discordUrl: state.setting.discordUrl,\r\n        characterName: state.character.character.characterInfos.characterName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSkills: (skills: skill[]) => {\r\n            dispatch(actionCreator.character.setSkills({skills}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Skill);","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: '80%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 360,\r\n      },\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: '20%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 78,\r\n      },\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: '30%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 120,\r\n      },\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: '90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 600,\r\n      },\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: '90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 500,\r\n      },\r\n    }\r\n  }),\r\n);\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype Props = {\r\n  characterInfos: characterInfo;\r\n  abilityValues: abilityValue;\r\n  characterBackground: string | undefined;\r\n  setCharacterName: (characterName: string) => void;\r\n  setHP: (hp: number) => void;\r\n  setMP: (mp: number) => void;\r\n  setSAN: (san: number) => void;\r\n  setCharacterBackground: (background: string) => void;\r\n  setCharacterInfos: (characterInfos: characterInfo) => void;\r\n  setAbilityValues: (abilityValues: abilityValue) => void;\r\n};\r\n\r\nconst Character: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Infomation</h2>\r\n\r\n      <TextField\r\n        id=\"characterName\"\r\n        label=\"Character Name\"\r\n        value={props.characterInfos.characterName}\r\n        className={clsx(classes.textField, classes.dense)}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {props.setCharacterName(event.target.value);}}\r\n        margin=\"dense\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        id=\"background\"\r\n        label=\"Background\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={props.characterBackground}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setCharacterBackground(event.target.value)}}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        physical value\r\n        <br />\r\n        \r\n        <TextField\r\n        id=\"hp\"\r\n        label=\"HP\"\r\n        type=\"number\"\r\n        value={props.characterInfos.HP}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setHP(+event.target.value)}}\r\n        placeholder=\"HP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"mp\"\r\n        label=\"MP\"\r\n        type=\"number\"\r\n        value={props.characterInfos.MP}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setMP(+event.target.value)}}\r\n        placeholder=\"MP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"san\"\r\n        label=\"SAN\"\r\n        type=\"number\"\r\n        value={props.characterInfos.SAN}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setSAN(+event.target.value)}}\r\n        placeholder=\"SAN\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n      <br />\r\n\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        ability value\r\n        <br />\r\n        <TextField\r\n        id=\"str\"\r\n        label=\"STR\"\r\n        type=\"number\"\r\n        value={props.abilityValues.STR}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={\r\n          (event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.STR = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);\r\n        }}\r\n        placeholder=\"STR\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"con\"\r\n        label=\"CON\"\r\n        type=\"number\"\r\n        value={props.abilityValues.CON}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={\r\n          (event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.CON = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"CON\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"pow\"\r\n        label=\"POW\"\r\n        type=\"number\"\r\n        value={props.abilityValues.POW}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.POW = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"POW\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"dex\"\r\n        label=\"DEX\"\r\n        type=\"number\"\r\n        value={props.abilityValues.DEX}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.DEX = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"DEX\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n\r\n        <TextField\r\n        id=\"app\"\r\n        label=\"APP\"\r\n        type=\"number\"\r\n        value={props.abilityValues.APP}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.APP = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"APP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"siz\"\r\n        label=\"SIZ\"\r\n        type=\"number\"\r\n        value={props.abilityValues.SIZ}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.SIZ = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"SIZ\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"int\"\r\n        label=\"INT\"\r\n        type=\"number\"\r\n        value={props.abilityValues.INT}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.INT = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"INT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"edu\"\r\n        label=\"EDU\"\r\n        type=\"number\"\r\n        value={props.abilityValues.EDU}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.EDU = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"EDU\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n\r\n      <br />\r\n    </Paper>\r\n  );\r\n}\r\nexport default Character;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Character from '../pages/Character';\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state.character);\r\n    return {\r\n        characterInfos: state.character.character.characterInfos,\r\n        abilityValues: state.character.character.abilityValues,\r\n        characterBackground: state.character.character.characterBackground,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacterName: (characterName: string) => {\r\n            dispatch(actionCreator.character.setCharacterName({characterName}));\r\n        },\r\n        setHP: (hp: number) => {\r\n            dispatch(actionCreator.character.setHP({hp}));\r\n        },\r\n        setMP: (mp: number) => {\r\n            dispatch(actionCreator.character.setMP({mp}));\r\n        },\r\n        setSAN: (san: number) => {\r\n            dispatch(actionCreator.character.setSAN({san}));\r\n        },\r\n        setCharacterBackground: (background: string) => {\r\n            dispatch(actionCreator.character.setCharacterBackground({background}));\r\n        },\r\n        setCharacterInfos: (characterInfos: characterInfo) => {\r\n            dispatch(actionCreator.character.setCharacterInfos({characterInfos}));\r\n        },\r\n        setAbilityValues: (abilityValues: abilityValue) => {\r\n            dispatch(actionCreator.character.setAbilityValues({abilityValues}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Character);","type abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n  };\r\n\r\nfunction getAbilityValue(item: string, abilityValue: abilityValue, power: number) : string{\r\n\r\n    return String(getAbility(item, abilityValue) * power);\r\n};\r\n\r\nfunction getAbility(item: string, abilityValue: abilityValue) : number{\r\n    const eq = <T>(val1: T) => (val2: T) => val1 === val2;\r\n        \r\n    const result = when(item)\r\n    .on(eq(\"STR\"), () => abilityValue.STR)\r\n    .on(eq(\"CON\"), () => abilityValue.CON)\r\n    .on(eq(\"POW\"), () => abilityValue.POW)\r\n    .on(eq(\"DEX\"), () => abilityValue.DEX)\r\n    .on(eq(\"APP\"), () => abilityValue.APP)\r\n    .on(eq(\"SIZ\"), () => abilityValue.SIZ)\r\n    .on(eq(\"INT\"), () => abilityValue.INT)\r\n    .on(eq(\"EDU\"), () => abilityValue.EDU)\r\n    .otherwise(() => -1)\r\n\r\n    return result;\r\n};\r\n\r\ntype ChainedWhen<T, R> = {\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) => ChainedWhen<T, R | A>;\r\n    otherwise: <A>(fn: () => A) => R | A;\r\n};\r\n\r\nconst match = <T, R>(val: any): ChainedWhen<T, R> => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) => match<T, R | A>(val),\r\n    otherwise: <A>(fn: () => A): A | R => val\r\n});\r\n\r\nconst chain = <T, R>(val: T): ChainedWhen<T, R> => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) =>\r\n        pred(val) ? match(fn()) : chain<T, A | R>(val),\r\n    otherwise: <A>(fn: () => A) => fn()\r\n});\r\n\r\nconst when = <T>(val: T) => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) =>\r\n        pred(val) ? match<T, A>(fn()) : chain<T, A>(val)\r\n});\r\n\r\nexport default getAbilityValue;","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport STRIcon from '@material-ui/icons/FlashOn';\r\nimport CONIcon from '@material-ui/icons/Favorite';\r\nimport POWIcon from '@material-ui/icons/Visibility';\r\nimport DEXIcon from '@material-ui/icons/DirectionsRun';\r\nimport APPIcon from '@material-ui/icons/Face';\r\nimport SIZIcon from '@material-ui/icons/AccessibilityNewOutlined';\r\nimport INTIcon from '@material-ui/icons/WbIncandescentOutlined';\r\nimport EDUIcon from '@material-ui/icons/LocalLibrary';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Paper } from '@material-ui/core/';\r\n\r\nimport getAbilityValue from '../modules/getAbilityValue';\r\nimport DiceDialog from '../components/DiceDialog';\r\n\r\nimport sendBCDice from '../modules/sendDiscord';\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ninterface Item {\r\n  name: string;\r\n  url: string;\r\n  user: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 500,\r\n      },\r\n      margin: \"auto\"\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: 78,\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      width: '90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 600,\r\n      },\r\n      padding: theme.spacing(3, 2),\r\n    }\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  abilityValues: abilityValue;\r\n  discordUrl: string;\r\n  characterName: string;\r\n};\r\n\r\nconst Ability: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"STR\");\r\n  const [power, setPower] = React.useState(5);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  function handleOpen() {\r\n    (props.discordUrl !== \"\") ?\r\n    sendBCDice(item):\r\n    setOpen(true);\r\n  }\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: props.discordUrl,\r\n      user: props.characterName,\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Ability Role</h2>\r\n\r\n      <Paper className = {classes.paper}>\r\n      ability\r\n      <BottomNavigation\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction value={\"STR\"} label=\"STR\" icon={<STRIcon />} />\r\n        <BottomNavigationAction value={\"CON\"} label=\"CON\" icon={<CONIcon />} />\r\n        <BottomNavigationAction value={\"POW\"} label=\"POW\" icon={<POWIcon />} />\r\n        <BottomNavigationAction value={\"DEX\"} label=\"DEX\" icon={<DEXIcon />} />\r\n      </BottomNavigation>\r\n      <BottomNavigation\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction value={\"APP\"} label=\"APP\" icon={<APPIcon />} />\r\n        <BottomNavigationAction value={\"SIZ\"} label=\"SIZ\" icon={<SIZIcon />} />\r\n        <BottomNavigationAction value={\"INT\"} label=\"INT\" icon={<INTIcon />} />\r\n        <BottomNavigationAction value={\"EDU\"} label=\"EDU\" icon={<EDUIcon />} />\r\n      </BottomNavigation>\r\n\r\n      <TextField\r\n        id=\"power\"\r\n        label=\"Power\"\r\n        type=\"number\"\r\n        defaultValue={power}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={\r\n          (event: React.ChangeEvent<HTMLInputElement>) => {setPower(+event.target.value);}}\r\n        placeholder=\"Power\"\r\n        margin=\"normal\"\r\n        />\r\n        </Paper>\r\n\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{\r\n          setItems(value, getAbilityValue(value, props.abilityValues, power));\r\n          handleOpen();\r\n          }}>\r\n          Send\r\n        </Button>\r\n\r\n        <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n    </div>\r\n  );\r\n}\r\nexport default Ability;","import { connect } from 'react-redux';\r\n\r\nimport { RootState  } from '../states';\r\nimport Ability from '../pages/Ability';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state.character);\r\n    return {\r\n        abilityValues: state.character.character.abilityValues,\r\n        discordUrl: state.setting.discordUrl,\r\n        characterName: state.character.character.characterInfos.characterName,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Ability);","interface ItemNDN {\r\n  count: number;\r\n  number: number;\r\n}\r\n\r\ninterface Result {\r\n  ok: string;\r\n  result: string;\r\n}\r\n\r\nfunction ShakeNDNDice(item: ItemNDN): Result\r\n{\r\n  let diceResults: number[] = [];\r\n\r\n  let result: Result = {\r\n    ok : String(item.count) + \"D\" + String(item.number),\r\n    result : \"\",\r\n  };\r\n\r\n  for(var i = 0; i < item.count ; i++){\r\n    diceResults.push(Math.round(Math.random() * item.number) + 1);\r\n  }\r\n\r\n  result.result = String(diceResults.reduce(function(total, data){return total + data}));\r\n\r\n  return result;\r\n}\r\n\r\nexport default ShakeNDNDice;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\n\r\ninterface ItemNDN {\r\n  count: number;\r\n  number: number;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    item: ItemNDN;\r\n    setOpen(open :boolean) : void;\r\n};\r\n\r\nexport default function AlertDialog(props: Props) {\r\n  let result :Result = {\r\n    ok: \"\",\r\n    result: \"\",\r\n  }\r\n  if(props.open){\r\n    result = ShakeNDNDice(props.item);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Dice Result\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.ok }\r\n          </DialogContentText><br />\r\n          \r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.result }\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport DiceNDNDialog from '../components/DiceNDNDialog';\r\nimport clsx from 'clsx';\r\n\r\nimport sendBCDice from '../modules/sendDiscord';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: '90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 600,\r\n      },\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(3),\r\n      marginRight: 'auto',\r\n      width: '20%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 120,\r\n        marginLeft: theme.spacing(10),\r\n      },\r\n    },\r\n    fab: {\r\n      marginLeft: theme.spacing(5),\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n      },\r\n      margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype Props = {\r\n  skills: skill[],\r\n  SAN: number,\r\n  characterName: string,\r\n  setSAN: (san: number) => void,\r\n  discordUrl: string;\r\n};\r\n\r\ntype PropsSAN = {\r\n  SAN: number,\r\n  characterName: string,\r\n  setSAN: (san: number) => void,\r\n  discordUrl: string;\r\n};\r\n\r\ntype PropsIdea = {\r\n  skills: skill[],\r\n  discordUrl: string;\r\n  characterName: string,\r\n};\r\n\r\nconst SANValue: React.SFC<PropsSAN> = (props: PropsSAN) => {\r\n  const classes = useStyles();\r\n  const [diffSAN, setDiffSAN] = React.useState(1);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: props.discordUrl,\r\n      user: props.characterName,\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  function handleOpen() {\r\n    (props.discordUrl !== \"\") ?\r\n    sendBCDice(item):\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <Chip color=\"primary\" label=\"SAN\" /> {props.SAN}        \r\n      <TextField\r\n        id=\"san\"\r\n        label=\"SAN\"\r\n        type=\"number\"\r\n        defaultValue={diffSAN}\r\n        className={classes.numberInfoField}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setDiffSAN(+event.target.value)}}\r\n        placeholder=\"SAN\"\r\n        margin=\"normal\"\r\n        />\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <AddIcon onClick={() => {props.setSAN(props.SAN + diffSAN)}}/>\r\n        </Fab>\r\n\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{\r\n          setItems(\"SANチェック\", String(props.SAN));\r\n          handleOpen();\r\n          }}>\r\n          SAN Check\r\n        </Button>\r\n\r\n        <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SANFunc: React.SFC<PropsSAN> = (props: PropsSAN) => {\r\n  const classes = useStyles();\r\n  const [countDice, setCountDice] = React.useState(1);\r\n  const [numberDice, setNumberDice] = React.useState(2);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    count: 0,\r\n    number: 0,\r\n  });\r\n\r\n  const setItems = (cou: number, num: number): void =>\r\n  {\r\n    setItem({\r\n      count: cou,\r\n      number: num,\r\n    });\r\n  }\r\n\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <Paper className = {clsx(classes.paper, classes.dense)}>       \r\n    <TextField\r\n      id=\"san\"\r\n      label=\"Count\"\r\n      type=\"number\"\r\n      defaultValue={countDice}\r\n      className={classes.numberInfoField}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setCountDice(+event.target.value)}}\r\n      placeholder=\"SAN\"\r\n      margin=\"normal\"\r\n    />       \r\n    <TextField\r\n      id=\"san\"\r\n      label=\"Number\"\r\n      type=\"number\"\r\n      defaultValue={numberDice}\r\n      className={classes.numberInfoField}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setNumberDice(+event.target.value)}}\r\n      placeholder=\"SAN\"\r\n      margin=\"normal\"\r\n    />\r\n\r\n<br />\r\n      <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n      onClick = {():void =>{\r\n        setItems(countDice, numberDice);\r\n        handleOpen();\r\n        }}>\r\n        Judge\r\n      </Button>\r\n\r\n    <DiceNDNDialog open={open} setOpen={setOpen} item={item} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SANIdea: React.SFC<PropsIdea> = (props: PropsIdea) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: props.discordUrl,\r\n      user: props.characterName,\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  function handleOpen() {\r\n    (props.discordUrl !== \"\") ?\r\n    sendBCDice(item):\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <Paper className = {clsx(classes.paper, classes.dense)}>      \r\n\r\n    <br />\r\n    <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n    onClick = {():void =>{\r\n      let idea: skill | undefined = props.skills.find(s => s.skillName === 'アイデア');\r\n      if(idea == null) return;\r\n\r\n      setItems(\"アイデア\", String(idea.skillValue));\r\n      handleOpen();\r\n      }}>\r\n      Idea\r\n    </Button>\r\n\r\n    <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SAN: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <SANValue SAN={props.SAN} characterName={props.characterName} setSAN={props.setSAN} discordUrl={props.discordUrl}/>\r\n      <SANFunc SAN={props.SAN} characterName={props.characterName} setSAN={props.setSAN} discordUrl={props.discordUrl} />\r\n      <SANIdea skills={props.skills} discordUrl={props.discordUrl} characterName={props.characterName}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SAN;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport SAN from '../pages/SAN';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        SAN: state.character.character.characterInfos.SAN,\r\n        characterName: state.character.character.characterInfos.characterName, \r\n        skills: state.character.character.skills,\r\n        discordUrl: state.setting.discordUrl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSAN: (san: number) => {\r\n            dispatch(actionCreator.character.setSAN({san}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SAN);","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport sendBCDice from '../modules/sendDiscord';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '75%',\r\n      margin: 'auto',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      width: '90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        minwidth: 500,\r\n      },\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n      width: '20%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 120,\r\n      },\r\n    },\r\n    fab: {\r\n      marginLeft: \"5px\",\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(5),\r\n        margin: theme.spacing(1),\r\n      }\r\n    },\r\n    chip: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(5),\r\n        margin: theme.spacing(1),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        textAlign: 'left',\r\n      }\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype Props = {\r\n    skills: skill[];\r\n    hp: number;\r\n    damageBonus: string;\r\n    setSkills(skills: skill[]) : void;\r\n    setHP(hp: number) : void;\r\n    discordUrl: string;\r\n    characterName: string;\r\n};\r\n\r\nexport default function SimpleTable(props: Props) {\r\n  const classes = useStyles();\r\n  const [skill, setSkill] = React.useState<string>(\"\");\r\n  const [value, setValue] = React.useState<number>(0);\r\n  const [HPDiff, setHPDiff] = React.useState<number>(0);\r\n  const [openDialog, setOpenDialog] = React.useState<boolean>(false);\r\n\r\n  const handleClick = (skillName: string ): void =>\r\n  {\r\n    const skill: skill | undefined = props.skills.find(s =>(s.skillName === skillName));\r\n    if(skill == null) return;\r\n    setItems(skillName, String(skill.skillValue));\r\n  }\r\n\r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: props.discordUrl,\r\n      user: props.characterName,\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  function handleOpen() {\r\n    (props.discordUrl !== \"\") ?\r\n    sendBCDice(item):\r\n    setOpenDialog(true);\r\n  }\r\n\r\n\r\n  const setSkills = (skill: string, value: number): void =>\r\n  {\r\n    const addSkill : skill = {\r\n      skillName: \"\",\r\n      skillValue: 0,\r\n      skillType: \"戦闘\",\r\n      skillUnique: true,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: 0\r\n    };\r\n  \r\n    const newSkills = JSON.parse(JSON.stringify(props.skills));\r\n\r\n    const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n      undefined : \r\n      newSkills.find((s: { skillName: string; }) => s.skillName === skill);\r\n\r\n    if(cSkill == null){\r\n      addSkill.skillName = skill;\r\n      addSkill.skillValue = value;\r\n      props.setSkills([...props.skills, addSkill]);\r\n    }else{\r\n      cSkill.skillValue = value;\r\n      props.setSkills(newSkills);\r\n    }\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    <Paper className={clsx(classes.root)}>\r\n      <br />\r\n      {/* タブレット以上なら隠す -- モバイル画面で表示 */}\r\n      <Hidden smUp implementation=\"css\">\r\n        <Chip color=\"primary\" label=\"Skill\" />        \r\n        <TextField\r\n          id=\"san\"\r\n          label=\"Skill\"\r\n          type=\"text\"\r\n          defaultValue={skill}\r\n          className={classes.numberInfoField}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setSkill(event.target.value)}}\r\n          placeholder=\"Skill\"\r\n          margin=\"normal\"\r\n          />      \r\n          <br />\r\n          <Chip color=\"primary\" label=\"Value\" className={classes.chip}　/>    \r\n          <TextField\r\n            id=\"san\"\r\n            label=\"Value\"\r\n            type=\"number\"\r\n            defaultValue={value}\r\n            className={classes.numberInfoField}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setValue(+event.target.value)}}\r\n            placeholder=\"Value\"\r\n            margin=\"normal\"\r\n            />\r\n\r\n          <br />\r\n          <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n            <AddIcon onClick={() => {setSkills(skill, value)}}/>\r\n          </Fab>\r\n        </Hidden>\r\n\r\n      {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Chip color=\"primary\" label=\"Skill\" />        \r\n        <TextField\r\n          id=\"san\"\r\n          label=\"Skill\"\r\n        type=\"text\"\r\n        defaultValue={skill}\r\n        className={classes.numberInfoField}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setSkill(event.target.value)}}\r\n        placeholder=\"Skill\"\r\n        margin=\"normal\"\r\n        />      \r\n        <Chip color=\"primary\" label=\"Value\" className={classes.chip}　/>    \r\n        <TextField\r\n          id=\"san\"\r\n          label=\"Value\"\r\n          type=\"number\"\r\n          defaultValue={value}\r\n          className={classes.numberInfoField}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setValue(+event.target.value)}}\r\n          placeholder=\"Value\"\r\n          margin=\"normal\"\r\n          />\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <AddIcon onClick={() => {setSkills(skill, value)}}/>\r\n        </Fab>\r\n      </Hidden>\r\n      <br />\r\n      <br />\r\n\r\n      <Chip color=\"primary\" label=\"HP\" className={classes.chip}　/> {props.hp}\r\n        <TextField\r\n          id=\"hp\"\r\n          label=\"HP\"\r\n          type=\"number\"\r\n          defaultValue={HPDiff}\r\n          className={classes.numberInfoField}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setHPDiff(+event.target.value)}}\r\n          placeholder=\"Value\"\r\n          margin=\"normal\"\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" //className={classes.button}\r\n          onClick = {():void =>{props.setHP(props.hp + HPDiff)}}>\r\n        +/-</Button>\r\n\r\n      <br />\r\n      <br />\r\n    </Paper>\r\n\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Skill</TableCell>\r\n            <TableCell align=\"right\">Value</TableCell>\r\n            <TableCell align=\"right\">Type</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            props.skills.map(row => {\r\n            if(row.skillType !== \"戦闘\"){ return };\r\n\r\n            return <TableRow key={row.skillName} \r\n              onClick={_ => {\r\n                console.log(\"onclick\");\r\n                handleClick(row.skillName)\r\n                handleOpen();}\r\n              }>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.skillName}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.skillValue}</TableCell>\r\n              <TableCell align=\"right\">{row.skillType}</TableCell>\r\n            </TableRow>\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <DiceDialog open={openDialog} setOpen={setOpenDialog} item={item} />\r\n    </Paper>\r\n    </div>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Battle from '../pages/Battle';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return { \r\n        skills: state.character.character.skills,\r\n        damageBonus: state.character.character.characterInfos.damageBonus,\r\n        hp: state.character.character.characterInfos.HP,\r\n        discordUrl: state.setting.discordUrl,\r\n        characterName: state.character.character.characterInfos.characterName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSkills: (skills: skill[]) => {\r\n            dispatch(actionCreator.character.setSkills({skills}));\r\n        },\r\n        setHP: (hp: number) => {\r\n            dispatch(actionCreator.character.setHP({hp}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Battle);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport onSubmit from '../modules/importPMJ.js';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    setOpen(open :boolean) : void;\r\n    setCharacter(character: character) : void;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '75%',\r\n      margin: 'auto',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    nputFileBtnHide: {\r\n      opacity:0,\r\n      appearance: 'none',\r\n      position: 'absolute',\r\n    },\r\n  })\r\n)\r\nexport default function FormDialog(props: Props) {\r\n  const classes = useStyles();\r\n  const [file, setFile] = React.useState<File>(new File([],\"\"));\r\n  const [fileName, setFileName] = React.useState<string>(\"No Select\");\r\n\r\n  function handleChangeFile(e: any) {\r\n    const target: HTMLInputElement = e.target as HTMLInputElement;\r\n    if(target == null) return;\r\n    if(target.files == null) return;\r\n\r\n    const file: File| null = target.files.item(0);\r\n    if(file == null) return;\r\n    setFile(file);\r\n    setFileName(file.name);\r\n  }\r\n\r\n  function setChara(character: any){\r\n    let chara: character = {\r\n        skills: character.skills,\r\n        characterBackground: character.characterBackground,\r\n        abilityValues: character.abilityValues,\r\n        characterInfos: character.characterInfos\r\n    };\r\n        \r\n    console.log(chara);\r\n    props.setCharacter(chara);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Import Character</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          Please select and set .pmj file\r\n          </DialogContentText>\r\n            <Button color=\"primary\"\r\n              component=\"label\"\r\n            >\r\n              Select\r\n              <input\r\n                type=\"file\"\r\n                className={classes.nputFileBtnHide}\r\n                onChange={(e) => \r\n                  {handleChangeFile(e)}\r\n              }/>\r\n            </Button>\r\n            {fileName}\r\n            <br />\r\n            <br />\r\n            <Button color=\"primary\" variant=\"contained\" onClick={() => {\r\n              onSubmit(setChara, file);\r\n              handleClose();\r\n              }}>set\r\n            </Button>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","\r\nexport default function onSubmit(func, item) {\r\n    if(item == null) return;\r\n    let reader = new FileReader();\r\n\r\n    // CSVファイル以外は処理を止める\r\n    if(!item.name.match(\".json$\") && !item.name.match(\".pmj$\")) \r\n    {\r\n        alert('jsonファイル、またはchpファイルを選択してください');\r\n        return;\r\n    }\r\n\r\n        // ファイル読み取りに失敗したとき\r\n    reader.onerror = function() {\r\n        alert('ファイル読み取りに失敗しました')\r\n    }\r\n        //読み込んだファイルの中身を取得する\r\n    reader.readAsText( item , 'UTF-8');\r\n\r\n    // PMJファイル以外は処理を止める\r\n    if(!item.name.match(\".json$\") && !item.name.match(\".pmj$\")) {\r\n        alert('jsonファイル、またはchpファイルを選択してください');\r\n        return;\r\n    }\r\n    //ファイルの中身を取得後に処理を行う\r\n    if( item != null ){\r\n        reader.addEventListener( 'load', function() {\r\n            let json = JSON.parse(reader.result);\r\n            func(json);\r\n        })\r\n    }\r\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SkillIcon from '@material-ui/icons/Assignment';\nimport CharacterIcon from '@material-ui/icons/Info';\nimport AbillityIcon from '@material-ui/icons/Face';\nimport SANIcon from '@material-ui/icons/OfflineBolt';\nimport BattleIcon from '@material-ui/icons/Security';\nimport ImportIcon from '@material-ui/icons/CloudDownload';\nimport ExportIcon from '@material-ui/icons/CloudUpload';\n\nimport ImportPMJ from './ImportPMJDialog';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\n\ntype skill = {\n  skillName: string,\n  skillValue: number,\n  skillType: string,\n  skillUnique: boolean,\n  skillWorkValue: number,\n  skillInterestValue: number,\n  defaultValue: number\n};\n\ntype abilityValue = {\n  STR: number,\n  CON: number,\n  POW: number,\n  DEX: number,\n  APP: number,\n  SIZ: number,\n  INT: number,\n  EDU: number\n};\n\ntype characterInfo = {\n  characterName: string,\n  HP: number,\n  MP: number,\n  SAN: number,\n  damageBonus: string,\n  job: string,\n  age: number,\n  sex: string,\n  height: number,\n  weight: number,\n  origin: string\n};\n\ntype character = {\n  skills: skill[];\n  characterBackground: string | undefined;\n  abilityValues: abilityValue;\n  characterInfos: characterInfo;\n}\n\ntype Props = {\n  setCharacter: (character: any) => void,\n  character: character,\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nconst charaDownload = (character: character) => {\n  let data = character;\n\n  if(data.characterInfos.characterName != \"\"){\n    console.log(\"download start\");\n    const blob = new Blob([JSON.stringify(data)], {type: 'application/json'});\n    let url = window.URL.createObjectURL(blob);\n    let link = document.createElement('a');\n\n    if(url == null) return;\n\n    link.download = data.characterInfos.characterName + '.pmj';\n    link.href = url;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }else{\n    alert({\n      message: 'Warning, can\\'t download.',\n      type: 'warning'\n    });\n  }\n}    \n\nexport default function SimpleList(props: Props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem button \n          component={Link}\n          to=\"/home/skill\">\n          <ListItemIcon>\n            <SkillIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Skill\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/character\">\n          <ListItemIcon>\n            <CharacterIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Character\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/abillity\">\n          <ListItemIcon>\n            <AbillityIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Abillity\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/san\">\n          <ListItemIcon>\n            <SANIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"SAN\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/battle\">\n          <ListItemIcon>\n            <BattleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Battle\" />\n        </ListItem>\n\n        <Divider />\n\n        <ListItem button\n          onClick={()=>{\n            setOpen(true);\n          }}>\n          <ListItemIcon>\n            <ImportIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </ListItem>\n\n        <ListItem button\n          onClick={()=>{\n            charaDownload(props.character);\n          }}>\n          <ListItemIcon>\n            <ExportIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </ListItem>\n      </List>\n\n      <ImportPMJ open={open} setOpen={setOpen} setCharacter={props.setCharacter}/>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SkillIcon from '@material-ui/icons/Assignment';\nimport CharacterIcon from '@material-ui/icons/Info';\nimport AbillityIcon from '@material-ui/icons/Face';\nimport SANIcon from '@material-ui/icons/OfflineBolt';\nimport BattleIcon from '@material-ui/icons/Security';\nimport ImportIcon from '@material-ui/icons/CloudDownload';\nimport ExportIcon from '@material-ui/icons/CloudUpload';\n\nimport ImportPMJ from './ImportPMJDialog';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\n\ntype skill = {\n  skillName: string,\n  skillValue: number,\n  skillType: string,\n  skillUnique: boolean,\n  skillWorkValue: number,\n  skillInterestValue: number,\n  defaultValue: number\n};\n\ntype abilityValue = {\n  STR: number,\n  CON: number,\n  POW: number,\n  DEX: number,\n  APP: number,\n  SIZ: number,\n  INT: number,\n  EDU: number\n};\n\ntype characterInfo = {\n  characterName: string,\n  HP: number,\n  MP: number,\n  SAN: number,\n  damageBonus: string,\n  job: string,\n  age: number,\n  sex: string,\n  height: number,\n  weight: number,\n  origin: string\n};\n\ntype character = {\n  skills: skill[];\n  characterBackground: string | undefined;\n  abilityValues: abilityValue;\n  characterInfos: characterInfo;\n}\n\ntype Props = {\n  setCharacter: (character: any) => void,\n  character: character,\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nconst charaDownload = (character: character) => {\n  let data = character;\n\n  if(data.characterInfos.characterName != \"\"){\n    console.log(\"download start\");\n    const blob = new Blob([JSON.stringify(data)], {type: 'application/json'});\n    let url = window.URL.createObjectURL(blob);\n    let link = document.createElement('a');\n\n    if(url == null) return;\n\n    link.download = data.characterInfos.characterName + '.pmj';\n    link.href = url;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }else{\n    alert({\n      message: 'Warning, can\\'t download.',\n      type: 'warning'\n    });\n  }\n}    \n\nexport default function SimpleList(props: Props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem button \n          component={Link}\n          to=\"/home/skill\">\n          <ListItemIcon>\n            <SkillIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Skill\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/character\">\n          <ListItemIcon>\n            <CharacterIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Character\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/abillity\">\n          <ListItemIcon>\n            <AbillityIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Abillity\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/san\">\n          <ListItemIcon>\n            <SANIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"SAN\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/battle\">\n          <ListItemIcon>\n            <BattleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Battle\" />\n        </ListItem>\n\n        <Divider />\n\n        <ListItem button\n          onClick={()=>{\n            setOpen(true);\n          }}>\n          <ListItemIcon>\n            <ImportIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </ListItem>\n\n        <ListItem button\n          onClick={()=>{\n            charaDownload(props.character);\n          }}>\n          <ListItemIcon>\n            <ExportIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </ListItem>\n      </List>\n\n      <ImportPMJ open={open} setOpen={setOpen} setCharacter={props.setCharacter}/>\n    </div>\n  );\n}\n","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport SideBar_PC from './SideBar_PC';\nimport SideBar_Mobile from './SideBar_Mobile';\n\ntype skill = {\n  skillName: string,\n  skillValue: number,\n  skillType: string,\n  skillUnique: boolean,\n  skillWorkValue: number,\n  skillInterestValue: number,\n  defaultValue: number\n};\n\ntype abilityValue = {\n  STR: number,\n  CON: number,\n  POW: number,\n  DEX: number,\n  APP: number,\n  SIZ: number,\n  INT: number,\n  EDU: number\n};\n\ntype characterInfo = {\n  characterName: string,\n  HP: number,\n  MP: number,\n  SAN: number,\n  damageBonus: string,\n  job: string,\n  age: number,\n  sex: string,\n  height: number,\n  weight: number,\n  origin: string\n};\n\ntype character = {\n  skills: skill[];\n  characterBackground: string | undefined;\n  abilityValues: abilityValue;\n  characterInfos: characterInfo;\n}\n\ntype Props = {\n  setCharacter: (character: any) => void,\n  character: character,\n};\n\nconst NavBar: React.SFC<Props> = (props: Props) => {\n  return (\n    <div>\n      {/* タブレット以上なら隠す -- モバイル画面で表示 */}\n      <Hidden smUp implementation=\"css\">\n        <SideBar_Mobile character={props.character} setCharacter={props.setCharacter}/>\n      </Hidden>\n\n      {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\n      <Hidden xsDown implementation=\"css\">\n        <SideBar_PC character={props.character} setCharacter={props.setCharacter}/>\n      </Hidden>\n    </div>\n  );\n};\n\nexport default NavBar;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport SideBar from '../components/SideBar';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\n//空でも良いので、mapStateToPropsを記述\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacter: (chara: character) => {\r\n            dispatch(actionCreator.character.setCharacter({chara}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps, //ここでconnectするのも忘れない\r\n    mapDispatchToProps\r\n)(SideBar);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nimport Skill from '../containers/Skill';\r\nimport Character from '../containers/Character';\r\nimport Abillity from '../containers/Ability';\r\nimport SAN from '../containers/SAN';\r\nimport Battle from '../containers/Battle';\r\nimport SideBar from '../containers/SideBar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string | undefined;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'relative',\r\n      display: 'flex',\r\n      zIndex: 0,\r\n      [theme.breakpoints.up('sm')]: {\r\n        paddingTop: '100px'\r\n      }\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        paddingTop: '100px',\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ResponsiveDrawerProps {\r\n  container?: Element;\r\n  open: boolean;\r\n  setOpen:(open: boolean) => void;\r\n  character: character;\r\n}\r\n\r\nexport default function ResponsiveDrawer(props: ResponsiveDrawerProps) {\r\n  const { container } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  \r\n  function handleDrawerToggle() {\r\n    props.setOpen(!props.open);\r\n  }\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      {/* <Divider /> */}\r\n      <SideBar character={props.character}/>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        \r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={props.open}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />   \r\n          <Switch>     \r\n            <Route exact path='/home/skill' component={Skill} container={document.getElementById(\"app-main\")}/>\r\n            <Route path='/home/character' component={Character} />\r\n            <Route path='/home/abillity' component={Abillity} />\r\n            <Route path='/home/san' component={SAN} />\r\n            <Route path='/home/battle' component={Battle} />\r\n          </Switch>  \r\n      </main>\r\n    </div>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Home from '../pages/Home';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        character: state.character.character,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Home);","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth'\r\nrequire('dotenv').config();\r\n\r\nconst config = {\r\n    apiKey:  process.env.REACT_APP_API_KEY,\r\n    authDomain:  process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL:  process.env.REACT_APP_DATABASE_URL,\r\n    projectId:  process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId:  process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport default firebase","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport firebase from '../modules/firebase'\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width:'50%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n      }\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width:'50%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n      }\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      width:'90%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width:450,\r\n      },\r\n      padding: theme.spacing(3, 2),\r\n    },\r\n    mobile:{\r\n      paddingTop: '100'\r\n    },\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setUserName: (url: string) => void;\r\n  setPassword: (url: string) => void;\r\n};\r\n\r\nconst Login: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = React.useState(props.discordUrl);\r\n  const [password, setPassword] = React.useState(props.diceUrl);\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  const login = (email: string, password: string) => {\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then(\r\n      ()=>{setValue('login');}\r\n    );\r\n  }\r\n\r\n  const logout = ():void =>{\r\n    firebase.auth().signOut().then(\r\n      ()=>{setValue('logout');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id='login'>\r\n    <Hidden smUp implementation=\"css\">\r\n      <br className={classes.mobile}/>\r\n    </Hidden>\r\n    {(() => {\r\n        const user = firebase.auth().currentUser;\r\n        if (user) {\r\n            return <div>\r\n              { value }\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n              onClick = {():void =>{logout()}}>\r\n                Logout\r\n              </Button>\r\n            </div>;\r\n        }\r\n        return <div>\r\n        <h2>Login</h2>\r\n        <Paper className = {classes.paper}>\r\n        <TextField\r\n          id=\"userName\"\r\n          label=\"User Name\"\r\n          defaultValue={props.diceUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setUserName(event.target.value);}}\r\n          margin=\"dense\"\r\n        /><br />\r\n        <TextField\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          defaultValue={props.discordUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setPassword(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{login(userName, password)}}>\r\n          Login\r\n        </Button>\r\n        </Paper>\r\n        </div>;\r\n    })()}\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import * as React from 'react';\r\nimport logo from '../PM_Desine.png';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Main: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <br />\r\n      <br />\r\n      <br />\r\n        <img\r\n        src={logo}\r\n        alt=\"\" width=\"50%\" height=\"40%\"\r\n        />\r\n      <br />\r\n      <br />\r\n\r\n      <Typography >       \r\n        Discordやオフラインセッションでの\r\n          <br />\r\n        キャラクター情報管理ツール\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width:'80%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 360,\r\n      },\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width:'80%',\r\n      [theme.breakpoints.up('sm')]: {\r\n      width: 360,\r\n    },\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      width:'90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width:450,\r\n      },\r\n      padding: theme.spacing(3, 2),\r\n    },\r\n    mobile:{\r\n      paddingTop: '100'\r\n    }\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setDiceUrl: (url: string) => void;\r\n  setDiscordUrl: (url: string) => void;\r\n};\r\n\r\nconst Setting: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [nDiscord, setDisordValue] = React.useState(props.discordUrl);\r\n  const [nDice, setDiceValue] = React.useState(props.diceUrl);\r\n\r\n  const setUrl = (newDiceURL: string, newDiscordURL: string):void => {\r\n    props.setDiceUrl(newDiceURL);\r\n    props.setDiscordUrl(newDiscordURL);\r\n    console.log(newDiceURL);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Hidden smUp implementation=\"css\">\r\n        <br className={classes.mobile}/>\r\n      </Hidden>\r\n      <h2>Setting</h2>\r\n      <Paper className = {classes.paper}>\r\n        <TextField\r\n          id=\"diceURL\"\r\n          label=\"Dice API URL\"\r\n          defaultValue={props.diceUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setDiceValue(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <TextField\r\n          id=\"discordURL\"\r\n          label=\"Discord URL\"\r\n          defaultValue={props.discordUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setDisordValue(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{setUrl(nDice, nDiscord)}}>\r\n          SET\r\n        </Button>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Setting;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Setting from '../pages/Setting';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        discordUrl: state.setting.discordUrl,\r\n        diceUrl: state.setting.diceUrl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setDiceUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiceUrl({url}));\r\n        },\r\n        setDiscordUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiscordUrl({url}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Setting);","import React, { Dispatch } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 360,\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: '20%',\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: '30%',\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: '90%',\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: '80%',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    chip: {\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: 'auto',\r\n    },\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\nconst setAbilityToDice = (character: character):character =>{\r\n  interface ItemNDN {\r\n    count: number;\r\n    number: number;\r\n  }\r\n  const itemNDN: ItemNDN ={\r\n    count: 3,\r\n    number: 6,\r\n  }\r\n\r\n  const newCharacter = JSON.parse(JSON.stringify(character));\r\n\r\n  newCharacter.abilityValues.STR = +ShakeNDNDice(itemNDN).result - 1;\r\n  const CON = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.CON = CON;\r\n  const POW = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.POW = POW;\r\n  newCharacter.abilityValues.DEX = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.APP = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.EDU = +ShakeNDNDice(itemNDN).result + 3 - 1;\r\n  \r\n  itemNDN.count = 2;\r\n  const SIZ = +ShakeNDNDice(itemNDN).result + 6 - 1;\r\n  newCharacter.abilityValues.SIZ = SIZ;\r\n  newCharacter.abilityValues.INT = +ShakeNDNDice(itemNDN).result + 6 - 1;\r\n\r\n  newCharacter.characterInfos.HP = Math.ceil((CON + SIZ) / 2);\r\n  newCharacter.characterInfos.MP = POW;\r\n  newCharacter.characterInfos.SAN = POW * 5;\r\n\r\n  return newCharacter;\r\n}\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Create</h2>\r\n    \r\n    <Button variant=\"contained\" color=\"primary\" //className={classes.button}\r\n        onClick = {\r\n            ():void => {\r\n            props.setCharacter(setAbilityToDice(props.character));\r\n            }\r\n            }>\r\n        Dice</Button>\r\n      <br />\r\n      <br />\r\n      \r\n      <Card className = {classes.card}>\r\n        <br />\r\n        physical value\r\n        <br />\r\n        \r\n        <Chip color=\"primary\" label=\"HP\" className={classes.chip}　/> {props.character.characterInfos.HP}\r\n        <Chip color=\"primary\" label=\"MP\" className={classes.chip}　/> {props.character.characterInfos.MP}\r\n        \r\n        <Hidden smUp implementation=\"css\">\r\n          <br />\r\n        </Hidden>\r\n        \r\n        <Chip color=\"primary\" label=\"SAN\" className={classes.chip}　/> {props.character.characterInfos.SAN}\r\n\r\n        <br />\r\n        <br />\r\n      </Card>\r\n      <br />\r\n\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        ability value\r\n        <br />\r\n        <TextField\r\n        id=\"str\"\r\n        label=\"STR\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.STR}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              STR: +event.target.value,\r\n            },\r\n          });}\r\n        }\r\n        placeholder=\"STR\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"con\"\r\n        label=\"CON\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.CON}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              CON: +event.target.value,\r\n            },\r\n            characterInfos:{\r\n              ...props.character.characterInfos,\r\n              HP: Math.ceil((+event.target.value + props.character.abilityValues.SIZ) /2),\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"CON\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"pow\"\r\n        label=\"POW\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.POW}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              POW: +event.target.value,\r\n            }, \r\n            characterInfos:{\r\n              ...props.character.characterInfos,\r\n              MP: +event.target.value,\r\n              SAN: +event.target.value * 5,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"POW\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"dex\"\r\n        label=\"DEX\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.DEX}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {\r\n            props.setCharacter({\r\n              ...props.character,\r\n              abilityValues : {\r\n                ...props.character.abilityValues,\r\n                DEX: +event.target.value,\r\n              }\r\n            })\r\n          ;}\r\n        }\r\n        placeholder=\"DEX\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n\r\n        <TextField\r\n        id=\"app\"\r\n        label=\"APP\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.APP}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              APP: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"APP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"siz\"\r\n        label=\"SIZ\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.SIZ}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              SIZ: +event.target.value,\r\n            },\r\n            characterInfos:{\r\n              ...props.character.characterInfos,\r\n              HP: Math.ceil((+event.target.value + props.character.abilityValues.CON) /2),\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"SIZ\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"int\"\r\n        label=\"INT\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.INT}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              INT: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"INT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"edu\"\r\n        label=\"EDU\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.EDU}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              EDU: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"EDU\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n\r\n      <br />\r\n      <br />\r\n      \r\n      <Card className = {classes.card}>\r\n        <br />\r\n        role value\r\n        <br />\r\n        \r\n        <Chip color=\"primary\" label=\"回避\" className={classes.chip}　/> {props.character.abilityValues.DEX * 2}\r\n        <Chip color=\"primary\" label=\"アイデア\" className={classes.chip}　/> {props.character.abilityValues.INT * 5}\r\n                \r\n        <Hidden smUp implementation=\"css\">\r\n          <br />\r\n        </Hidden>\r\n        \r\n        <Chip color=\"primary\" label=\"知識\" className={classes.chip}　/> {props.character.abilityValues.EDU * 5}\r\n        <Chip color=\"primary\" label=\"幸運\" className={classes.chip}　/> {props.character.abilityValues.POW * 5}\r\n\r\n        <br />\r\n        <br />\r\n      </Card>\r\n      <br />\r\n    </Paper>\r\n  );\r\n}\r\nexport default Making;","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport clsx from 'clsx';\nimport Hidden from '@material-ui/core/Hidden';\n\ntype skill = {\n  skillName: string,\n  skillValue: number,\n  skillType: string,\n  skillUnique: boolean,\n  skillWorkValue: number,\n  skillInterestValue: number,\n  defaultValue: number\n};\n\ntype abilityValue = {\n  STR: number,\n  CON: number,\n  POW: number,\n  DEX: number,\n  APP: number,\n  SIZ: number,\n  INT: number,\n  EDU: number\n};\n\ntype characterInfo = {\n  characterName: string,\n  HP: number,\n  MP: number,\n  SAN: number,\n  damageBonus: string,\n  job: string,\n  age: number,\n  sex: string,\n  height: number,\n  weight: number,\n  origin: string\n};\n\ntype character = {\n  skills: skill[];\n  characterBackground: string;\n  abilityValues: abilityValue;\n  characterInfos: characterInfo;\n}\n\ntype Props = {\n  skills: skill[],\n  setCharacter: (character: character) => void;\n  setSkillWorkValue: (name: string, work: number) => void;\n  setSkillInterestValue: (name: string, interest: number) => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n    },\n    table: {\n      width: '90%',\n    },\n    numberInfoField: {\n      marginLeft: theme.spacing(5),\n      marginRight: 'auto',\n      width: '100%',\n    },\n    name: {\n      width: '40%',\n    },\n    number: {\n      width: '25%',\n    },\n    head: {\n      width: '100%',\n    },\n    body: {\n      width: '100%',\n    },\n  }),\n);\n\nexport default function SimpleList(props: Props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Table className={classes.table} size=\"small\">\n        <TableHead className={classes.head}>\n          <TableRow>\n            <TableCell className={classes.name} rowSpan={2}>Skill</TableCell>\n            <TableCell className={classes.number} align=\"right\">Value</TableCell>\n            <TableCell className={classes.number} align=\"right\">Type</TableCell>\n            <TableCell className={classes.number} align=\"right\">Work</TableCell>\n            <TableCell className={classes.number} align=\"right\">Interest</TableCell>\n          </TableRow>\n        </TableHead>\n\n          {props.skills.map(row => {\n            if(row == null) return;\n\n            return (\n              <TableBody className={classes.body} key={row.skillName}>\n              <TableRow>\n                <TableCell className={classes.name} rowSpan={2} component=\"th\" scope=\"row\">\n                  {row.skillName}\n                </TableCell>\n                <TableCell className={classes.number} align=\"right\">{row.skillValue}</TableCell>\n                <TableCell className={classes.number} align=\"right\">{row.skillType}</TableCell>\n                <TableCell className={classes.number} align=\"right\">      \n                  <TextField\n                    id=\"work\"\n                    label=\"Work\"\n                    type=\"number\"\n                    value={row.skillWorkValue}\n                    className={classes.numberInfoField}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => \n                      {if(row.skillValue < 100) \n                        {props.setSkillWorkValue(row.skillName, +event.target.value);}\n                      }\n                    }\n                    placeholder=\"Work\"\n                    margin=\"normal\"\n                    />\n                </TableCell>\n                <TableCell className={classes.number} align=\"right\">       \n                  <TextField\n                    id=\"interest\"\n                    label=\"Interest\"\n                    type=\"number\"\n                    value={row.skillInterestValue}\n                    className={classes.numberInfoField}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => \n                      {if(row.skillValue < 100)\n                        {props.setSkillInterestValue(row.skillName, +event.target.value);}\n                      }\n                    }\n                    placeholder=\"Interest\"\n                    margin=\"normal\"\n                    />\n                </TableCell>\n            </TableRow>\n        </TableBody>\n            )\n          })}\n      </Table>\n    </div>\n  );\n}\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\n\ntype skill = {\n  skillName: string,\n  skillValue: number,\n  skillType: string,\n  skillUnique: boolean,\n  skillWorkValue: number,\n  skillInterestValue: number,\n  defaultValue: number\n};\n\ntype abilityValue = {\n  STR: number,\n  CON: number,\n  POW: number,\n  DEX: number,\n  APP: number,\n  SIZ: number,\n  INT: number,\n  EDU: number\n};\n\ntype characterInfo = {\n  characterName: string,\n  HP: number,\n  MP: number,\n  SAN: number,\n  damageBonus: string,\n  job: string,\n  age: number,\n  sex: string,\n  height: number,\n  weight: number,\n  origin: string\n};\n\ntype character = {\n  skills: skill[];\n  characterBackground: string;\n  abilityValues: abilityValue;\n  characterInfos: characterInfo;\n}\n\ntype Props = {\n  skills: skill[],\n  setCharacter: (character: character) => void;\n  setSkillWorkValue: (name: string, work: number) => void;\n  setSkillInterestValue: (name: string, interest: number) => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n    },\n    table: {\n      width: '90%',\n    },\n    numberInfoField: {\n      marginLeft: theme.spacing(5),\n      marginRight: 'auto',\n      width: '100%',\n    },\n    name: {\n      width: '40%',\n    },\n    number: {\n      width: '25%',\n    },\n    head: {\n      width: '100%',\n    },\n    body: {\n      width: '100%',\n    },\n  }),\n);\n\nexport default function SimpleList(props: Props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Table className={classes.table} size=\"small\">\n        <TableHead className={classes.head}>\n          <TableRow>\n            <TableCell className={classes.name} rowSpan={2}>Skill</TableCell>\n            <TableCell className={classes.number} align=\"right\">Value</TableCell>\n            <TableCell className={classes.number} align=\"right\">Type</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell className={classes.number} align=\"right\">Work</TableCell>\n            <TableCell className={classes.number} align=\"right\">Interest</TableCell>\n          </TableRow>\n        </TableHead>\n\n          {props.skills.map(row => {\n            if(row == null) return;\n\n            return (\n              <TableBody className={classes.body} key={row.skillName}>\n              <TableRow>\n                <TableCell className={classes.name} rowSpan={2} component=\"th\" scope=\"row\">\n                  {row.skillName}\n                </TableCell>\n                <TableCell className={classes.number} align=\"right\">{row.skillValue}</TableCell>\n                <TableCell className={classes.number} align=\"right\">{row.skillType}</TableCell>\n          </TableRow>\n          <TableRow>\n                <TableCell className={classes.number} align=\"right\">      \n                  <TextField\n                    id=\"work\"\n                    label=\"Work\"\n                    type=\"number\"\n                    value={row.skillWorkValue}\n                    className={classes.numberInfoField}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => \n                      {if(row.skillValue < 100) \n                        {props.setSkillWorkValue(row.skillName, +event.target.value);}\n                      }\n                    }\n                    placeholder=\"Work\"\n                    margin=\"normal\"\n                    />\n                </TableCell>\n                <TableCell className={classes.number} align=\"right\">       \n                  <TextField\n                    id=\"interest\"\n                    label=\"Interest\"\n                    type=\"number\"\n                    value={row.skillInterestValue}\n                    className={classes.numberInfoField}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => \n                      {if(row.skillValue < 100)\n                        {props.setSkillInterestValue(row.skillName, +event.target.value);}\n                      }\n                    }\n                    placeholder=\"Interest\"\n                    margin=\"normal\"\n                    />\n                </TableCell>\n            </TableRow>\n        </TableBody>\n            )\n          })}\n      </Table>\n    </div>\n  );\n}\n","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\nimport SkillList_PC from './SkillList_PC';\nimport SkillList_Mobile from './SkillList_Mobile';\n\ntype skill = {\n  skillName: string,\n  skillValue: number,\n  skillType: string,\n  skillUnique: boolean,\n  skillWorkValue: number,\n  skillInterestValue: number,\n  defaultValue: number\n};\n\ntype abilityValue = {\n  STR: number,\n  CON: number,\n  POW: number,\n  DEX: number,\n  APP: number,\n  SIZ: number,\n  INT: number,\n  EDU: number\n};\n\ntype characterInfo = {\n  characterName: string,\n  HP: number,\n  MP: number,\n  SAN: number,\n  damageBonus: string,\n  job: string,\n  age: number,\n  sex: string,\n  height: number,\n  weight: number,\n  origin: string\n};\n\ntype character = {\n  skills: skill[];\n  characterBackground: string;\n  abilityValues: abilityValue;\n  characterInfos: characterInfo;\n}\n\ntype Props = {\n  skills: skill[],\n  setCharacter: (character: character) => void;\n  setSkillWorkValue: (name: string, work: number) => void;\n  setSkillInterestValue: (name: string, interest: number) => void;\n};\n\nexport default function SimpleList(props: Props) {\n  return (\n    <div>\n      {/* タブレット以上なら隠す -- モバイル画面で表示 */}\n      <Hidden smUp implementation=\"css\">\n        <SkillList_Mobile\n          skills={props.skills} \n          setCharacter={props.setCharacter} \n          setSkillInterestValue={props.setSkillInterestValue}\n          setSkillWorkValue={props.setSkillWorkValue}\n        />\n      </Hidden>\n\n      {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\n      <Hidden xsDown implementation=\"css\">\n        <SkillList_PC\n          skills={props.skills} \n          setCharacter={props.setCharacter} \n          setSkillInterestValue={props.setSkillInterestValue}\n          setSkillWorkValue={props.setSkillWorkValue}\n        />\n      </Hidden>\n    </div>\n  );\n}\n","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n      test:{\r\n          \r\n    position:\"sticky\", /* 要素をスクロールに応じて固定 */\r\n    top:\"30px\", /* 縦スクロールに追従 */\r\n    zIndex: 1, /* z-indexで最前面に持ってくる */\r\n      },\r\n    card: {\r\n        margin: 0,\r\n        top: 10,\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        left: 10,\r\n        position: 'fixed',\r\n        width: \"50%\",\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: \"20%\",\r\n            top: 'auto',\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 'auto',\r\n        }\r\n    },\r\n    chip: {\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n    },\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n    workPoint: number;\r\n    interestPoint: number;\r\n};\r\n\r\nconst SkillPoint: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n  return (\r\n    <Card className={classes.test}>\r\n      <Chip color=\"primary\" label=\"Work Point\" className={classes.chip}　/> {props.workPoint}\r\n        <Hidden xsDown implementation=\"css\">\r\n          <br />\r\n        </Hidden>\r\n      <Chip color=\"primary\" label=\"Interest Point\" className={classes.chip}　/> {props.interestPoint}\r\n      <br />\r\n    </Card>\r\n  )\r\n};\r\nexport default SkillPoint;","import React, { Dispatch } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport SkillList from '../components/SkillList'\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Hidden, Button } from '@material-ui/core';\r\n\r\nimport SkillPoint from '../components/SkillPoint';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: '90%',\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: '90%',\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: '90%',\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: '90%',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    chip: {\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\nconst initSkill = ():skill => {\r\n  return({\r\n      skillName: \"\",\r\n      skillValue: 0,\r\n      skillType: \"\",\r\n      skillUnique: false,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: 0\r\n    }\r\n  )\r\n}\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst skillTypes = [\r\n  ['戦闘','Fight'],\r\n  ['探索','Search'],\r\n  ['行動','Act'],\r\n  ['交渉','Negotiate'],\r\n  ['知識','Wisdom'],\r\n];\r\n\r\nconst getSkillIndex = (type: string): number => {\r\n  if(type === '戦闘') return 0;\r\n  if(type === '探索') return 1;\r\n  if(type === '行動') return 2;\r\n  if(type === '交渉') return 3;\r\n  if(type === '知識') return 4;\r\n  return -1;\r\n}\r\n\r\nconst setSkillValue = (name: string, value: number, remainPoint: number, \r\n  character: character, interest:boolean, setCharacter:(character: character) => void) => {\r\n  if(value < 0 || remainPoint <= 0) return;\r\n  const newSkills = JSON.parse(JSON.stringify(character.skills));\r\n\r\n  const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n    undefined : \r\n    newSkills.find((s: { skillName: string; }) => s.skillName === name);\r\n\r\n  if(cSkill == null) return;\r\n    if(interest) cSkill.skillInterestValue = value;\r\n    else cSkill.skillWorkValue = value;\r\n  cSkill.skillValue = cSkill.defaultValue + cSkill.skillInterestValue + cSkill.skillWorkValue;\r\n  setCharacter({\r\n    ...character,\r\n    skills: newSkills\r\n    }\r\n  );\r\n} \r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [openTable, setOpenTable] = React.useState<boolean[]>\r\n    (skillTypes.map(s => {return false}));\r\n\r\n  const getWorkPoint = () => {\r\n    if(props.character.skills.length === 0) return 0;\r\n    return props.character.skills.map(s=>s.skillWorkValue).reduce(function(total, data)\r\n    {return total + data});\r\n  };\r\n\r\n  const getInterestPoint = () => {\r\n    if(props.character.skills.length === 0) return 0;\r\n    return props.character.skills.map(s=>s.skillInterestValue).reduce(function(total, data)\r\n    {return total + data});\r\n  };\r\n\r\n  const getRemainingWorkPoint = () => {\r\n    return props.character.abilityValues.EDU * 20 - getWorkPoint();\r\n  };\r\n\r\n  const getRemainingInterestPoint = () => {\r\n    return props.character.abilityValues.INT * 10 - getInterestPoint();\r\n  };\r\n\r\n  const getSkills = (type: string): skill[] =>{\r\n    const s = props.character.skills.filter(e => e.skillType=== type);\r\n    if(s == null) return[initSkill()];\r\n    return s;\r\n  }\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Create</h2>\r\n      <SkillPoint workPoint={getRemainingWorkPoint()} interestPoint={getRemainingInterestPoint()} />\r\n\r\n      {skillTypes.map(element => {\r\n        return(\r\n          <div key={element[1]}>\r\n            <br />\r\n\r\n            <Button variant=\"contained\"\r\n            onClick={() => {\r\n              const newOpen: boolean[] = {...openTable};\r\n              newOpen[getSkillIndex(element[0])] = !newOpen[getSkillIndex(element[0])];\r\n              setOpenTable(newOpen);\r\n            }}\r\n            >{element[1]}</Button>\r\n\r\n            <br />\r\n            <Card>\r\n              {(openTable[getSkillIndex(element[0])]) &&\r\n              (<SkillList \r\n                skills={getSkills(element[0])} \r\n                setCharacter={props.setCharacter} \r\n                setSkillInterestValue={\r\n                  (name: string, value: number)=>{\r\n                    setSkillValue(name ,value, getRemainingInterestPoint(),props.character, true, props.setCharacter);\r\n                  }r\n                } \r\n                setSkillWorkValue={\r\n                  (name: string, value: number)=>{\r\n                    setSkillValue(name ,value, getRemainingWorkPoint(),props.character, false, props.setCharacter);\r\n                  }      \r\n                }\r\n                />)\r\n              }\r\n            </Card>\r\n          </div>\r\n          );\r\n      })}\r\n    </Paper>\r\n  );\r\n}\r\nexport default Making;","import React, { Dispatch } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\nimport Button from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: '90%',\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: '30%',\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: '30%',\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: '90%',\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: '90%',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    chip: {\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: 'auto',\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [count, setCount]= React.useState(0);\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Create</h2>\r\n      <br />\r\n      <TextField\r\n        id=\"characterName\"\r\n        label=\"Character Name\"\r\n        value={props.character.characterInfos.characterName}\r\n        className={clsx(classes.textField, classes.dense)}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos:{\r\n              ...props.character.characterInfos,\r\n              characterName: event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        margin=\"dense\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        id=\"background\"\r\n        label=\"Background\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={props.character.characterBackground}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterBackground: event.target.value,\r\n          });}\r\n        }\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        infomation value\r\n        <br />\r\n        \r\n        <Chip color=\"primary\" label=\"HP\" className={classes.chip}　/> {props.character.characterInfos.HP}\r\n        <Chip color=\"primary\" label=\"MP\" className={classes.chip}　/> {props.character.characterInfos.MP}\r\n        <Chip color=\"primary\" label=\"SAN\" className={classes.chip}　/> {props.character.characterInfos.SAN}\r\n\r\n        <br />\r\n        <br />\r\n      </Card>\r\n      <br />\r\n\r\n      <Card className = {classes.card}>\r\n        <TextField\r\n        id=\"job\"\r\n        label=\"job\"\r\n        value={props.character.characterInfos.job}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              job: event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"JOB\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"age\"\r\n        label=\"age\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.age}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              age: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"AGE\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"sex\"\r\n        label=\"sex\"\r\n        value={props.character.characterInfos.sex}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              sex: event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"SEX\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n        \r\n        <TextField\r\n        id=\"height\"\r\n        label=\"height\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.height}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              height: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"HEIGHT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"weight\"\r\n        label=\"weight\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.weight}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              weight: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"WEIGHT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"origin\"\r\n        label=\"origin\"\r\n        value={props.character.characterInfos.origin}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              origin: event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"ORIGIN\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n\r\n      <br />\r\n    </Paper>\r\n  );\r\n}\r\nexport default Making;","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport CreateAbility from './CreateAbility';\r\nimport CreateSkills from './CreateSkills';\r\nimport CreateInfos from './CreateInfos';\r\nimport defaultSkills from '../characterMakingSkills.json';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width:'90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 600,\r\n      },\r\n    },\r\n    root: {\r\n      margin:'auto',\r\n      width: '80%',\r\n    },\r\n    button: {\r\n      margin:'auto',\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n      margin:'auto',\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\nconst init = (): character => {\r\n  return {\r\n\r\n    skills: defaultSkills.skills.map(s => {\r\n      return{\r\n        skillName: s.skillName,\r\n        skillValue: s.skillValue,\r\n        skillType: s.skillType,\r\n        skillUnique: false,\r\n        skillWorkValue: 0,\r\n        skillInterestValue: 0,\r\n        defaultValue: s.skillValue\r\n      }\r\n    }),\r\n\r\n    characterBackground: \"\",\r\n    abilityValues: {\r\n        STR: 0,\r\n        CON: 0,\r\n        POW: 0,\r\n        DEX: 0,\r\n        APP: 0,\r\n        SIZ: 0,\r\n        INT: 0,\r\n        EDU: 0\r\n    },\r\n    characterInfos: {\r\n        characterName: \"\",\r\n        HP: 0,\r\n        MP: 0,\r\n        SAN: 0,\r\n        damageBonus: \"\",\r\n        job: \"\",\r\n        age: 0,\r\n        sex: \"\",\r\n        height: 0,\r\n        weight: 0,\r\n        origin: \"\"\r\n    },\r\n  };\r\n};\r\n\r\nfunction getSteps() {\r\n  return ['Select character abilitys', 'Setting skills', 'Create character infomation'];\r\n}\r\n  \r\nconst setSkill = (skill: skill, character: character): character =>\r\n{\r\n  const newSkills = character.skills.filter(s => s.skillName !== skill.skillName);\r\n  return(\r\n  {\r\n    ...character,\r\n    skills: [...newSkills, skill]\r\n  });\r\n}\r\n\r\nfunction getStepContent(step: number) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'abilitys';\r\n    case 1:\r\n      return 'skills';\r\n    case 2:\r\n      return 'infomation';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\ntype Props = {\r\n  setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [character, setCharacter] = React.useState(init());\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set<number>());\r\n  const steps = getSteps();\r\n\r\n  function isStepSkipped(step: number) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function handleNext() {\r\n    const DEX = character.abilityValues.DEX;\r\n    const newCharacter = \r\n      setSkill({\r\n        skillName: \"回避\",\r\n        skillValue: DEX * 2,\r\n        skillType: \"戦闘\",\r\n        skillUnique: true,\r\n        skillWorkValue: 0,\r\n        skillInterestValue: 0,\r\n        defaultValue: DEX * 2\r\n      }, character);\r\n\r\n    setCharacter(newCharacter);\r\n    \r\n    setCharacter(\r\n      {\r\n        ...newCharacter,\r\n        characterInfos: {\r\n          ...newCharacter.characterInfos,\r\n          HP: (newCharacter.abilityValues.CON + newCharacter.abilityValues.SIZ)/2,\r\n          MP: (newCharacter.abilityValues.POW),\r\n          SAN: newCharacter.abilityValues.POW * 5,\r\n        }\r\n      });\r\n\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  const setUniqueSkills = (setCharacter: (character: character) => void) =>{\r\n    character.skills.filter(e=> e.skillWorkValue !== 0 || e.skillInterestValue !== 0 ).forEach(e=> e.skillUnique = true);\r\n    setCharacter({...character});\r\n  } \r\n\r\n  const setLastCharacter = (setCharacter: (character: character) => void) => {\r\n    setUniqueSkills(setCharacter);\r\n    const POW = character.abilityValues.POW;\r\n    const INT = character.abilityValues.INT;\r\n    const EDU = character.abilityValues.EDU;\r\n    \r\n    let newCharacter = setSkill({\r\n        skillName: \"幸運\",\r\n        skillValue: POW * 5,\r\n        skillType: \"探索\",\r\n        skillUnique: true,\r\n        skillWorkValue: 0,\r\n        skillInterestValue: 0,\r\n        defaultValue: POW * 5\r\n      }, \r\n    setSkill({\r\n      skillName: \"アイデア\",\r\n      skillValue: INT * 5,\r\n      skillType: \"探索\",\r\n      skillUnique: true,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: INT * 5\r\n    }, \r\n    setSkill({\r\n      skillName: \"知識\",\r\n      skillValue: EDU * 5,\r\n      skillType: \"探索\",\r\n      skillUnique: true,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: EDU * 5\r\n    }, character)));\r\n\r\n    setCharacter({...character,\r\n      skills: newCharacter.skills\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps: { completed?: boolean } = {};\r\n          const labelProps: { optional?: React.ReactNode } = {};\r\n\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n\r\n        {(activeStep === 0) && (\r\n          <CreateAbility character={character} setCharacter={setCharacter}/>\r\n        )}\r\n        {(activeStep === 1) && (\r\n          <CreateSkills character={character} setCharacter={setCharacter}/>\r\n        )}\r\n        {(activeStep === 2) && (\r\n          <CreateInfos character={character} setCharacter={setCharacter}/>\r\n        )}\r\n\r\n      <div>\r\n        {\r\n          activeStep === steps.length ? (\r\n          <div>\r\n            {setLastCharacter(props.setCharacter)}\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Making;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Making from '../pages/Making';\r\n\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n  };\r\n  \r\n  type abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n  };\r\n  \r\n  type characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n  };\r\n  \r\n  type character = {\r\n    skills: skill[];\r\n    characterBackground: string;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n  }\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacter: (chara: character) => {\r\n            dispatch(actionCreator.character.setCharacter({chara}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Making);","import * as React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport Home from './containers/Home';\nimport Login from './pages/Login';\nimport Main from './pages/Main';\nimport Setting from './containers/Setting';\nimport Making from './containers/Making';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [open, setOpen] = React.useState(true);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <header className=\"App-header\">\n          <NavBar \n          //mobile={navigator.userAgent.match(/(iPhone|iPad|iPod|Android)/i) == null}\n          open={open}\n          setOpen={setOpen}\n          />\n        </header>\n\n        <div className='App-main' id='app-main'>\n          <Route exact path='/' component={Main}/>\n          \n          <Route path='/home' render={() => <Home open={open} setOpen={setOpen}/>}/>\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/setting' component={Setting} />\n          <Route exact path='/making' component={Making} />\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport './index.css';\n\nimport App from './App';\nimport { rootReducer } from './states';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App />\n    </Provider>,\n     document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}