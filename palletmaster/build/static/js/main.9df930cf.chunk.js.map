{"version":3,"sources":["PM_Desine.png","components/NavBar_PC.tsx","components/NavBar_Mobile.tsx","components/NavBar.tsx","states/settings/index.ts","states/settings/SetDiscordUrl.ts","states/settings/SetDiceUrl.ts","states/characters/index.ts","states/characters/SetCharacter.ts","states/characters/SetSkills.ts","states/characters/SetAbilityValues.ts","states/characters/SetCharacterInfos.ts","states/characters/SetCharacterName.ts","states/characters/SetHP.ts","states/characters/SetMP.ts","states/characters/SetSAN.ts","states/characters/SetCharacterBackground.ts","states/index.ts","modules/ShakeDice.ts","components/DiceDialog.tsx","modules/sendDiscord.ts","pages/Skill.tsx","containers/Skill.tsx","pages/Character.tsx","containers/Character.tsx","modules/getAbilityValue.ts","pages/Ability.tsx","containers/Ability.tsx","modules/shakeNDNDice.ts","components/DiceNDNDialog.tsx","pages/SAN.tsx","containers/SAN.tsx","pages/Battle.tsx","containers/Battle.tsx","components/ImportPMJDialog.tsx","modules/importPMJ.js","components/SideBar_PC.tsx","components/SideBar_Mobile.tsx","components/SideBar.tsx","containers/SideBar.tsx","pages/Home.tsx","containers/Home.tsx","modules/firebase.ts","pages/Login.tsx","pages/Main.tsx","pages/Setting.tsx","containers/Setting.tsx","pages/CreateAbility.tsx","components/SkillList_PC.tsx","components/SkillList_Mobile.tsx","components/SkillList.tsx","components/SkillPoint.tsx","pages/CreateSkills.tsx","pages/CreateInfos.tsx","pages/Making.tsx","containers/Making.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","position","zIndex","navBar","left","right","margin","width","menuButton","marginRight","spacing","title","navBarAction","NavBar","classes","React","useState","value","setValue","AppBar","className","Toolbar","Typography","variant","BottomNavigation","onChange","event","newValue","BottomNavigationAction","component","Link","to","label","icon","color","props","Button","onClick","setOpen","open","Hidden","smUp","implementation","NavBar_Mobile","xsDown","NavBar_PC","actionCreator","setDiscordUrl","payload","type","setDiceUrl","setCharacter","setSkills","setAbilityValues","setCharacterInfos","setCharacterName","setHP","setMP","setSAN","setCharacterBackground","rootReducer","combineReducers","setting","state","discordUrl","diceUrl","action","url","character","skills","characterBackground","abilityValues","STR","CON","POW","DEX","APP","SIZ","INT","EDU","characterInfos","characterName","HP","MP","SAN","damageBonus","job","age","sex","height","weight","origin","Object","assign","chara","hp","mp","san","background","Settings","Characters","ShakeDice","item","result","ok","_1d100Value","Math","round","random","name","chip","textAlign","AlertDialog","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","Chip","DialogActions","autoFocus","sendBCDice","sendDice","sendDiscordText","require","Webhook","info","user","func","a","fetch","then","res","json","response","catch","error","console","log","breakpoints","up","table","minWidth","numberInfoField","marginLeft","fab","down","connect","dispatch","category","setCategory","skill","setSkill","openDialog","setOpenDialog","setItem","setItems","ability","addSkill","skillName","skillValue","skillType","skillUnique","skillWorkValue","skillInterestValue","defaultValue","newSkills","JSON","parse","stringify","cSkill","length","undefined","find","s","Paper","clsx","TextField","target","placeholder","Fab","aria-label","InputLabel","htmlFor","Select","onOpen","inputProps","MenuItem","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","_","String","handleClick","scope","button","input","display","textField","numberAbilityField","dense","marginTop","paper","padding","card","Character","multiline","rowsMax","Card","newAbilityValues","match","val","on","pred","fn","otherwise","when","chain","getAbilityValue","abilityValue","power","eq","val1","val2","getAbility","Ability","setPower","showLabels","ShakeNDNDice","diceResults","count","number","i","push","reduce","total","data","SANValue","diffSAN","setDiffSAN","SANFunc","countDice","setCountDice","numberDice","setNumberDice","SANIdea","idea","overflowX","minwidth","HPDiff","setHPDiff","nputFileBtnHide","opacity","appearance","FormDialog","File","file","setFile","fileName","setFileName","setChara","e","files","handleChangeFile","reader","FileReader","onerror","alert","readAsText","addEventListener","onSubmit","maxWidth","backgroundColor","palette","SimpleList","List","ListItem","ListItemIcon","ListItemText","primary","Divider","blob","Blob","window","URL","createObjectURL","link","document","createElement","download","href","body","appendChild","click","removeChild","message","charaDownload","SideBar","paddingTop","drawer","flexShrink","toolbar","mixins","drawerPaper","content","flexGrow","container","useTheme","handleDrawerToggle","setOpenMobile","openMobile","CssBaseline","Drawer","anchor","direction","ModalProps","keepMounted","exact","path","Skill","getElementById","Abillity","Battle","config","apiKey","process","authDomain","databaseURL","projectId","REACT_APP_PROJECT_ID","storageBucket","messagingSenderId","appId","firebase","menu","mobile","Login","userName","setUserName","password","setPassword","auth","currentUser","signOut","email","signInWithEmailAndPassword","login","Main","src","logo","alt","Setting","nDiscord","setDisordValue","nDice","setDiceValue","newDiceURL","newDiscordURL","Making","itemNDN","newCharacter","ceil","setAbilityToDice","head","SkillsTableRow","skillWork","setSkillWork","skillInterest","setSkillInterest","Fragment","rowSpan","checkSetSkillValue","onBlur","setSkillWorkValue","setSkillInterestValue","size","test","top","bottom","marginBottom","SkillPoint","workPoint","interestPoint","skillTypes","getSkillIndex","setSkillValue","remainPoint","interest","openTable","setOpenTable","isWork","getRemainingWorkPoint","getRemainingInterestPoint","getSkills","filter","element","newOpen","instructions","defaultSkills","activeStep","setActiveStep","Set","skipped","setSkipped","steps","Stepper","index","Step","StepLabel","CreateAbility","CreateSkills","CreateInfos","forEach","setUniqueSkills","setLastCharacter","step","getStepContent","disabled","prevActiveStep","newSkipped","has","values","delete","App","render","Home","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","createStore","ReactDOM","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,uC,28KCerCC,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,SAAU,QACVC,OAAQ,GAEZC,OAAQ,CACJF,SAAU,WACVG,KAAM,EACNC,MAAO,EACPC,OAAQ,OACRC,MAAO,MACPL,OAAQ,GAEZM,WAAY,CACRC,YAAaX,EAAMY,QAAQ,IAE/BC,MAAO,GAGPC,aAAc,CACVL,MAAO,YA+DJM,EA1DW,WACtB,IAAMC,EAAUlB,IADY,EAEFmB,IAAMC,SAAS,WAFb,mBAErBC,EAFqB,KAEdC,EAFc,KAQ5B,OACI,kBAACC,EAAA,EAAD,CAAQC,UAAWN,EAAQd,MACvB,kBAACqB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWN,EAAQH,OAA5C,gBAIA,kBAACa,EAAA,EAAD,CACIP,MAAOA,EACPQ,SAbhB,SAAsBC,EAA8BC,GAChDT,EAASS,IAaGP,UAAWN,EAAQX,QAEnB,kBAACyB,EAAA,EAAD,CACIR,UAAWN,EAAQF,aACnBiB,UAAWC,IACXC,GAAG,QACHC,MAAM,SACNf,MAAM,SACNgB,KAAM,kBAAC,IAAD,QAEV,kBAACL,EAAA,EAAD,CACIR,UAAWN,EAAQF,aACnBiB,UAAWC,IACXC,GAAG,SACHC,MAAM,QACNf,MAAM,QACNgB,KAAM,kBAAC,IAAD,QAEV,kBAACL,EAAA,EAAD,CACIR,UAAWN,EAAQF,aACnBiB,UAAWC,IACXC,GAAG,WACHC,MAAM,UACNf,MAAM,UACNgB,KAAM,kBAAC,IAAD,QAEV,kBAACL,EAAA,EAAD,CACIR,UAAWN,EAAQF,aACnBiB,UAAWC,IACXC,GAAG,UACHC,MAAM,SACNf,MAAM,SACNgB,KAAM,kBAAC,IAAD,Y,2BC1ExBrC,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,SAAU,QACVC,OAAQ,GAEZC,OAAQ,CACJF,SAAU,WACVG,KAAM,EACNC,MAAO,EACPC,OAAQ,OACRC,MAAO,OACPL,OAAQ,GAEZS,MAAO,GAGPC,aAAc,CACVL,MAAO,OAEX0B,KAAM,CACFC,MAAO,cA4EJrB,EAlEkB,SAACsB,GAC9B,IAAMrB,EAAUlB,IAD+B,EAErBmB,IAAMC,SAAS,WAFM,mBAExCC,EAFwC,KAEjCC,EAFiC,KAQ/C,OACI,kBAACC,EAAA,EAAD,CAAQC,UAAWN,EAAQd,MACvB,kBAACqB,EAAA,EAAD,KACI,kBAACe,EAAA,EAAD,CACIC,QAAS,WACLF,EAAMG,SAASH,EAAMI,QAGzB,kBAAC,IAAD,CAAYnB,UAAWN,EAAQmB,QAEnC,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWN,EAAQH,OAA5C,iBAIJ,kBAACU,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CACIP,MAAOA,EACPQ,SArBhB,SAAsBC,EAA8BC,GAChDT,EAASS,IAqBGP,UAAWN,EAAQX,QAEnB,kBAACyB,EAAA,EAAD,CACIR,UAAWN,EAAQF,aACnBiB,UAAWC,IACXC,GAAG,QACHC,MAAM,SACNf,MAAM,SACNgB,KAAM,kBAAC,IAAD,QAEV,kBAACL,EAAA,EAAD,CACIR,UAAWN,EAAQF,aACnBiB,UAAWC,IACXC,GAAG,SACHC,MAAM,QACNf,MAAM,QACNgB,KAAM,kBAAC,IAAD,QAEV,kBAACL,EAAA,EAAD,CACIR,UAAWN,EAAQF,aACnBiB,UAAWC,IACXC,GAAG,WACHC,MAAM,UACNf,MAAM,UACNgB,KAAM,kBAAC,IAAD,QAEV,kBAACL,EAAA,EAAD,CACIR,UAAWN,EAAQF,aACnBiB,UAAWC,IACXC,GAAG,UACHC,MAAM,SACNf,MAAM,SACNgB,KAAM,kBAAC,IAAD,YC/EfpB,EAhBkB,SAACsB,GAC9B,OACI,6BAEI,kBAACK,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,kBAACC,EAAD,CAAeJ,KAAMJ,EAAMI,KAAMD,QAASH,EAAMG,WAIpD,kBAACE,EAAA,EAAD,CAAQI,QAAM,EAACF,eAAe,OAC1B,kBAACG,EAAD,S,gDCaHC,EAAgB,CACzBC,cCxByB,SACzBC,GAEA,MAAO,CACHA,UACAC,KAAM,4BDoBVC,WEzBsB,SAACF,GACvB,MAAO,CACHA,UACAC,KAAM,0BCmLDH,EAAgB,CACzBK,aC5IwB,SACxBH,GAEA,MAAO,CACHA,UACAC,KAAM,kBDwIVG,UE9KqB,SAACJ,GACtB,MAAO,CACHA,UACAC,KAAM,eF4KVI,iBG7K4B,SAC5BL,GAEA,MAAO,CACHA,UACAC,KAAM,uBHyKVK,kBI3K6B,SAC7BN,GAEA,MAAO,CACHA,UACAC,KAAM,wBJuKVM,iBK1L4B,SAC5BP,GAEA,MAAO,CACHA,UACAC,KAAM,uBLsLVO,MM5LiB,SAACR,GAClB,MAAO,CACHA,UACAC,KAAM,WN0LVQ,MO7LiB,SAACT,GAClB,MAAO,CACHA,UACAC,KAAM,WP2LVS,OQ9LkB,SAACV,GACnB,MAAO,CACHA,UACAC,KAAM,YR4LVU,uBS9LkC,SAClCX,GAEA,MAAO,CACHA,UACAC,KAAM,8BCRDW,EAAcC,YAAgB,CACvCC,QbOmB,WAA6C,IAA5CC,EAA2C,uDANxD,CACHC,WAAY,GACZC,QAAS,IAI8BC,EAAoB,uCAC/D,OAAQA,EAAOjB,MACX,IAAK,0BACD,OAAO,eACAc,EADP,CAEIC,WAAYE,EAAOlB,QAAQmB,MAEnC,IAAK,uBACD,OAAO,eACAJ,EADP,CAEIE,QAASC,EAAOlB,QAAQmB,MAEhC,QACI,OAAOJ,IanBfK,UV+FmB,WAA6C,IAA5CL,EAA2C,uDA/BxD,CACHK,UAAW,CACPC,OAAQ,GACRC,oBAAqB,GACrBC,cAAe,CACXC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GAETC,eAAgB,CACZC,cAAe,GACfC,GAAI,EACJC,GAAI,EACJC,IAAK,EACLC,YAAa,GACbC,IAAK,GACLC,IAAK,EACLC,IAAK,GACLC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,MAMuBzB,EAAoB,uCAC/D,OAAQA,EAAOjB,MACX,IAAK,gBACD,OAAO2C,OAAOC,OAAO,GAAI9B,EAAO,CAC5BK,UAAWF,EAAOlB,QAAQ8C,QAElC,IAAK,aACD,OAAO,eACA/B,EADP,CAEIK,UAAU,eACHL,EAAMK,UADJ,CAELC,OAAQH,EAAOlB,QAAQqB,WAGnC,IAAK,qBACD,OAAO,eACAN,EADP,CAEIK,UAAU,eACHL,EAAMK,UADJ,CAELG,cAAeL,EAAOlB,QAAQuB,kBAG1C,IAAK,sBACD,OAAO,eACAR,EADP,CAEIK,UAAU,eACHL,EAAMK,UADJ,CAELY,eAAgBd,EAAOlB,QAAQgC,mBAG3C,IAAK,qBACD,OAAO,eACAjB,EADP,CAEIK,UAAU,eACHL,EAAMK,UADJ,CAELY,eAAe,eACRjB,EAAMK,UAAUY,eADT,CAEVC,cAAef,EAAOlB,QAAQiC,oBAI9C,IAAK,SACD,OAAO,eACAlB,EADP,CAEIK,UAAU,eACHL,EAAMK,UADJ,CAELY,eAAe,eACRjB,EAAMK,UAAUY,eADT,CAEVE,GAAIhB,EAAOlB,QAAQ+C,SAInC,IAAK,SACD,OAAO,eACAhC,EADP,CAEIK,UAAU,eACHL,EAAMK,UADJ,CAELY,eAAe,eACRjB,EAAMK,UAAUY,eADT,CAEVG,GAAIjB,EAAOlB,QAAQgD,SAInC,IAAK,UACD,OAAO,eACAjC,EADP,CAEIK,UAAU,eACHL,EAAMK,UADJ,CAELY,eAAe,eACRjB,EAAMK,UAAUY,eADT,CAEVI,IAAKlB,EAAOlB,QAAQiD,UAIpC,IAAK,2BACD,OAAO,eACAlC,EADP,CAEIK,UAAU,eACHL,EAAMK,UADJ,CAELE,oBAAqBJ,EAAOlB,QAAQkD,eAGhD,QACI,OAAOnC,MU/KNjB,EACAqD,EADArD,EAEEsD,E,4ICkBAC,OAtBf,SAAmBC,GACf,IAAIC,EAAiB,CACjBC,GAAI,GACJD,OAAQ,IAGRE,EAAsBC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EAa5D,OAXIH,GAAe,EACfF,EAAOC,GAAK,uCACLC,IAAgBH,EAAKrF,MAC5BsF,EAAOC,GAAK,eAEZD,EAAOC,GAAK,eAGhBD,EAAOA,OACH,gBAAQD,EAAKO,KAAO,IAAMJ,EAAc,OAASH,EAAKrF,MAEnDsF,G,UClBL3G,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACT+G,KAAM,CACFC,UAAW,eAuBR,SAASC,GAAY7E,GAChC,IAAMrB,EAAUlB,KAEZ2G,EAAiB,CACjBC,GAAI,GACJD,OAAQ,IAOZ,SAASU,IACL9E,EAAMG,SAAQ,GAGlB,OARIH,EAAMI,OACNgE,EAASF,GAAUlE,EAAMmE,OAQzB,6BACI,kBAACY,GAAA,EAAD,CACI3E,KAAMJ,EAAMI,KACZ4E,QAASF,EACTG,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAaC,GAAG,sBACX,eAEL,kBAACC,GAAA,EAAD,KACmB,iBAAdjB,EAAOC,GACJ,kBAACiB,GAAA,EAAD,CAAmBF,GAAG,4BAClB,kBAACG,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAOuE,EAAOC,GACdpF,UAAWN,EAAQgG,QAGb,iBAAdP,EAAOC,GACP,kBAACiB,GAAA,EAAD,CAAmBF,GAAG,4BAClB,kBAACG,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAOuE,EAAOC,GACdpF,UAAWN,EAAQgG,QAI3B,kBAACW,GAAA,EAAD,CAAmBF,GAAG,4BAClB,kBAACG,GAAA,EAAD,CACIxF,MAAM,YACNF,MAAOuE,EAAOC,GACdpF,UAAWN,EAAQgG,QAI/B,6BAEA,kBAACW,GAAA,EAAD,CAAmBF,GAAG,4BACjBhB,EAAOA,SAGhB,kBAACoB,GAAA,EAAD,KACI,kBAACvF,EAAA,EAAD,CAAQC,QAAS4E,EAAa/E,MAAM,UAAU0F,WAAS,GAAvD,Y,kFCvFL,SAASC,GAAWvB,I,uCAC/BwB,CAASC,GAAiBzB,GAG9B,SAASyB,GAAgBxB,EAAgBD,GACjCC,EAAOC,IAGM,IAFGwB,EAAQ,KAECC,SAAQ3B,EAAKnC,KACjC+D,KAAK5B,EAAK6B,KAAM7B,EAAKO,KAAO,IAAMN,EAAOA,Q,gDAItD,WAAwB6B,EAA0C9B,GAAlE,gBAAA+B,EAAA,sDACUlE,EACF,6EAGAmC,EAAKrF,MAETqH,MAAMnE,GACDoE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAID,EAAOC,EACX,GAAIA,EAASlC,GACT,OAAO4B,EAAKK,EAAMnC,MAGzBqC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAfpC,4C,sBCFA,IAAMhJ,GAAYC,aAAW,SAACC,GAAD,eACzBC,YAAa,CACTC,MAAI,GACAO,MAAO,OADP,cAECT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,QAHX,uBAKQ,QALR,0BAMWT,EAAMY,QAAQ,IANzB,0BAOW,QAPX,GASJuI,MAAM,aACF1I,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BE,SAAU,MAGlBC,gBAAiB,CACbC,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,KAEX8I,IAAI,aACAD,WAAY,OACXtJ,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BI,WAAYtJ,EAAMY,QAAQ,GAC1BJ,OAAQR,EAAMY,QAAQ,KAG9BoG,MAAI,mBACChH,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BI,WAAYtJ,EAAMY,QAAQ,GAC1BJ,OAAQR,EAAMY,QAAQ,KAH1B,cAKCZ,EAAMiJ,YAAYO,KAAK,MAAQ,CAC5BvC,UAAW,SANf,QC9CZ,IAgBewC,gBAhBS,SAACxF,GACrB,MAAO,CACHM,OAAQN,EAAMK,UAAUA,UAAUC,OAClCL,WAAYD,EAAMD,QAAQE,WAC1BiB,cAAelB,EAAMK,UAAUA,UAAUY,eAAeC,kBAIrC,SAACuE,GACxB,MAAO,CACHpG,UAAW,SAACiB,GACRmF,EAAS1G,EAAwBM,UAAU,CAACiB,gBAKzCkF,EDiDA,SAAqBpH,GAChC,IAAMrB,EAAUlB,KAD8B,EAEdmB,IAAMC,SAAiB,UAFT,mBAEvCyI,EAFuC,KAE7BC,EAF6B,OAGpB3I,IAAMC,SAAiB,IAHH,mBAGvC2I,EAHuC,KAGhCC,EAHgC,OAIpB7I,IAAMC,SAAiB,GAJH,mBAIvCC,EAJuC,KAIhCC,EAJgC,OAKtBH,IAAMC,UAAS,GALO,mBAKvCuB,EALuC,KAKjCD,EALiC,OAMVvB,IAAMC,UAAS,GANL,mBAMvC6I,EANuC,KAM3BC,EAN2B,OAiCtB/I,IAAMC,SAAS,CACnC6F,KAAM,GACN1C,IAAK,GACLgE,KAAM,GACNlH,MAAO,KArCmC,mBAiCvCqF,EAjCuC,KAiCjCyD,EAjCiC,KAwCxCC,EAAW,SAACC,EAAiBhJ,GAC/B8I,EAAQ,CACJlD,KAAMoD,EACN9F,IAAKhC,EAAM6B,WACXmE,KAAMhG,EAAM8C,cACZhE,MAAOA,KAITmC,EAAY,SAACuG,EAAe1I,GAC9B,IAAMiJ,EAAkB,CACpBC,UAAW,GACXC,WAAY,EACZC,UAAW,eACXC,aAAa,EACbC,eAAgB,EAChBC,mBAAoB,EACpBC,aAAc,GAGZC,EAAYC,KAAKC,MAAMD,KAAKE,UAAU1I,EAAMkC,SAE5CyG,EACkB,MAApBJ,EAAUK,QAAuC,IAArBL,EAAUK,YAChCC,EACAN,EAAUO,MACN,SAACC,GAAD,OAA8BA,EAAEf,YAAcR,KAG9C,MAAVmB,GACAZ,EAASC,UAAYR,EACrBO,EAASE,WAAanJ,EACtBkB,EAAMiB,UAAN,sBAAoBjB,EAAMkC,QAA1B,CAAkC6F,OAElCY,EAAOV,WAAanJ,EACpBkB,EAAMiB,UAAUsH,KAIxB,OACI,6BACI,kBAACS,EAAA,EAAD,CAAO/J,UAAWgK,aAAKtK,EAAQd,OAC3B,6BAEA,kBAACwC,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,kBAACgF,GAAA,EAAD,CAAMxF,MAAM,UAAUF,MAAM,UAC5B,kBAACqJ,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,QACNiB,KAAK,OACLwH,aAAcd,EACdvI,UAAWN,EAAQqI,gBACnB1H,SAAU,SACNC,GAEAkI,EAASlI,EAAM4J,OAAOrK,QAE1BsK,YAAY,QACZjL,OAAO,WAEX,6BACA,kBAACoH,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,QACNZ,UAAWN,EAAQgG,OAEvB,kBAACuE,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,QACNiB,KAAK,SACLwH,aAAcxJ,EACdG,UAAWN,EAAQqI,gBACnB1H,SAAU,SACNC,GAEAR,GAAUQ,EAAM4J,OAAOrK,QAE3BsK,YAAY,QACZjL,OAAO,WAGX,6BACA,kBAACkL,GAAA,EAAD,CACItJ,MAAM,UACNuJ,aAAW,MACXrK,UAAWN,EAAQuI,KAEnB,kBAAC,KAAD,CACIhH,QAAS,WACLe,EAAUuG,EAAO1I,QAOjC,kBAACuB,EAAA,EAAD,CAAQI,QAAM,EAACF,eAAe,OAC1B,kBAACgF,GAAA,EAAD,CAAMxF,MAAM,UAAUF,MAAM,UAC5B,kBAACqJ,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,QACNiB,KAAK,OACLwH,aAAcd,EACdvI,UAAWN,EAAQqI,gBACnB1H,SAAU,SACNC,GAEAkI,EAASlI,EAAM4J,OAAOrK,QAE1BsK,YAAY,QACZjL,OAAO,WAEX,kBAACoH,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,QACNZ,UAAWN,EAAQgG,OAEvB,kBAACuE,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,QACNiB,KAAK,SACLwH,aAAcxJ,EACdG,UAAWN,EAAQqI,gBACnB1H,SAAU,SACNC,GAEAR,GAAUQ,EAAM4J,OAAOrK,QAE3BsK,YAAY,QACZjL,OAAO,WAEX,kBAACkL,GAAA,EAAD,CACItJ,MAAM,UACNuJ,aAAW,MACXrK,UAAWN,EAAQuI,KAEnB,kBAAC,KAAD,CACIhH,QAAS,WACLe,EAAUuG,EAAO1I,QAMjC,6BACA,6BAEA,kBAACyK,EAAA,EAAD,CAAYC,QAAQ,+BAApB,YAGA,kBAACC,GAAA,EAAD,CACIrJ,KAAMA,EACN4E,QA7KhB,WACI7E,GAAQ,IA6KIuJ,OA1KhB,WACIvJ,GAAQ,IA0KIrB,MAAOwI,EACPhI,SAnLhB,SAAsBC,GAClBgI,EAAYhI,EAAM4J,OAAOrK,QAmLb6K,WAAY,CACRjF,KAAM,WACNU,GAAI,gCAGR,kBAACwE,GAAA,EAAD,CAAU9K,MAAM,UACZ,uCAEJ,kBAAC8K,GAAA,EAAD,CAAU9K,MAAO,gBAAjB,SACA,kBAAC8K,GAAA,EAAD,CAAU9K,MAAO,gBAAjB,UACA,kBAAC8K,GAAA,EAAD,CAAU9K,MAAO,gBAAjB,UACA,kBAAC8K,GAAA,EAAD,CAAU9K,MAAO,gBAAjB,OACA,kBAAC8K,GAAA,EAAD,CAAU9K,MAAO,gBAAjB,eACA,kBAAC8K,GAAA,EAAD,CAAU9K,MAAO,OAAjB,QAEJ,6BACA,8BAGJ,kBAACkK,EAAA,EAAD,CAAO/J,UAAWN,EAAQd,MACtB,kBAACgM,EAAA,EAAD,CAAO5K,UAAWN,EAAQmI,OACtB,kBAACgD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,UAGR,kBAACC,EAAA,EAAD,KACKlK,EAAMkC,OAAOiI,KAAI,SAAAC,GACd,IAAiB,WAAb9C,GAA0B8C,EAAIjC,eAIjB,WAAbb,GACa,QAAbA,GACA8C,EAAIlC,YAAcZ,GAKtB,OACI,kBAACyC,EAAA,EAAD,CACIM,IAAKD,EAAIpC,UACT9H,QAAS,SAAAoK,GACL5D,QAAQC,IAAI,WAzO5B,SAACqB,GACjB,IAAMR,EAA2BxH,EAAMkC,OAAO4G,MAC1C,SAAAC,GAAC,OAAIA,EAAEf,YAAcA,KAEZ,MAATR,GACJK,EAASG,EAAWuC,OAAO/C,EAAMS,aAqODuC,CAAYJ,EAAIpC,WAtNhDtB,QAAQC,IAAI3G,EAAM6B,YAClB6E,QAAQC,MACa,KAArB3G,EAAM6B,WAAoB6D,GAAWvB,GAAQwD,GAAc,KAwN/B,kBAACqC,EAAA,EAAD,CAAWtK,UAAU,KAAK+K,MAAM,OAC3BL,EAAIpC,WAET,kBAACgC,EAAA,EAAD,CAAWC,MAAM,SACZG,EAAInC,YAET,kBAAC+B,EAAA,EAAD,CAAWC,MAAM,SACZG,EAAIlC,iBAQ7B,kBAAC,GAAD,CACI9H,KAAMsH,EACNvH,QAASwH,EACTxD,KAAMA,S,UEtUpB1G,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACT8M,OAAQ,CACJvM,OAAQR,EAAMY,QAAQ,IAE1BoM,MAAO,CACHC,QAAS,QAEbC,UAAU,aACN5D,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAGf0M,mBAAmB,aACf7D,WAAY,EACZ3I,YAAa,EACbF,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,KAGf4I,gBAAgB,aACZC,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAGf2M,MAAO,CACHC,UAAW,IAEfC,MAAM,aACF9M,OAAQ,OACR+M,QAASvN,EAAMY,QAAQ,EAAG,GAC1BH,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAGf+M,KAAK,aACDhN,OAAQ,OACRC,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,WAiORgN,GA9MqB,SAACpL,GACjC,IAAMrB,EAAUlB,KAEhB,OACI,kBAACuL,EAAA,EAAD,CAAO/J,UAAWN,EAAQsM,OACtB,oDAEA,kBAAC/B,GAAA,EAAD,CACI9D,GAAG,gBACHvF,MAAM,iBACNf,MAAOkB,EAAM6C,eAAeC,cAC5B7D,UAAWgK,aAAKtK,EAAQkM,UAAWlM,EAAQoM,OAC3CzL,SAAU,SAACC,GACPS,EAAMoB,iBAAiB7B,EAAM4J,OAAOrK,QAExCX,OAAO,UAEX,6BACA,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,aACHvF,MAAM,aACNwL,WAAS,EACTC,QAAQ,IACRxM,MAAOkB,EAAMmC,oBACb7C,SAAU,SAACC,GACPS,EAAMwB,uBAAuBjC,EAAM4J,OAAOrK,QAE9CG,UAAWN,EAAQkM,UACnB1M,OAAO,WAEX,kBAACoN,GAAA,EAAD,CAAMtM,UAAWN,EAAQwM,MACrB,6BADJ,iBAGI,6BACA,kBAACjC,GAAA,EAAD,CACI9D,GAAG,KACHvF,MAAM,KACNiB,KAAK,SACLwH,aAActI,EAAM6C,eAAeE,GACnC9D,UAAWgK,aAAKtK,EAAQqI,gBAAiBrI,EAAQoM,OACjDzL,SAAU,SAACC,GACPS,EAAMqB,OAAO9B,EAAM4J,OAAOrK,QAE9BsK,YAAY,KACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,KACHvF,MAAM,KACNiB,KAAK,SACLwH,aAActI,EAAM6C,eAAeG,GACnC/D,UAAWgK,aAAKtK,EAAQqI,gBAAiBrI,EAAQoM,OACjDzL,SAAU,SAACC,GACPS,EAAMsB,OAAO/B,EAAM4J,OAAOrK,QAE9BsK,YAAY,KACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLwH,aAActI,EAAM6C,eAAeI,IACnChE,UAAWgK,aAAKtK,EAAQqI,gBAAiBrI,EAAQoM,OACjDzL,SAAU,SAACC,GACPS,EAAMuB,QAAQhC,EAAM4J,OAAOrK,QAE/BsK,YAAY,MACZjL,OAAO,WAEX,8BAEJ,6BAEA,kBAACoN,GAAA,EAAD,CAAMtM,UAAWN,EAAQwM,MACrB,6BADJ,gBAGI,6BACA,kBAACjC,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLwH,aAActI,EAAMoC,cAAcC,IAClCpD,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACP,IAAIiM,EACAxL,EAAMoC,cACVoJ,EAAiBnJ,KAAO9C,EAAM4J,OAAOrK,MACrCkB,EAAMkB,iBAAiBsK,IAE3BpC,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLwH,aAActI,EAAMoC,cAAcE,IAClCrD,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACP,IAAIiM,EACAxL,EAAMoC,cACVoJ,EAAiBlJ,KAAO/C,EAAM4J,OAAOrK,MACrCkB,EAAMkB,iBAAiBsK,IAE3BpC,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLwH,aAActI,EAAMoC,cAAcG,IAClCtD,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACP,IAAIiM,EACAxL,EAAMoC,cACVoJ,EAAiBjJ,KAAOhD,EAAM4J,OAAOrK,MACrCkB,EAAMkB,iBAAiBsK,IAE3BpC,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLwH,aAActI,EAAMoC,cAAcI,IAClCvD,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACP,IAAIiM,EACAxL,EAAMoC,cACVoJ,EAAiBhJ,KAAOjD,EAAM4J,OAAOrK,MACrCkB,EAAMkB,iBAAiBsK,IAE3BpC,YAAY,MACZjL,OAAO,WAEX,6BACA,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLwH,aAActI,EAAMoC,cAAcK,IAClCxD,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACP,IAAIiM,EACAxL,EAAMoC,cACVoJ,EAAiB/I,KAAOlD,EAAM4J,OAAOrK,MACrCkB,EAAMkB,iBAAiBsK,IAE3BpC,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLwH,aAActI,EAAMoC,cAAcM,IAClCzD,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACP,IAAIiM,EACAxL,EAAMoC,cACVoJ,EAAiB9I,KAAOnD,EAAM4J,OAAOrK,MACrCkB,EAAMkB,iBAAiBsK,IAE3BpC,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLwH,aAActI,EAAMoC,cAAcO,IAClC1D,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACP,IAAIiM,EACAxL,EAAMoC,cACVoJ,EAAiB7I,KAAOpD,EAAM4J,OAAOrK,MACrCkB,EAAMkB,iBAAiBsK,IAE3BpC,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLwH,aAActI,EAAMoC,cAAcQ,IAClC3D,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACP,IAAIiM,EACAxL,EAAMoC,cACVoJ,EAAiB5I,KAAOrD,EAAM4J,OAAOrK,MACrCkB,EAAMkB,iBAAiBsK,IAE3BpC,YAAY,MACZjL,OAAO,WAEX,8BAGJ,+BC5OGiJ,gBAnCS,SAACxF,GAErB,OADA8E,QAAQC,IAAI/E,EAAMK,WACX,CACHY,eAAgBjB,EAAMK,UAAUA,UAAUY,eAC1CT,cAAeR,EAAMK,UAAUA,UAAUG,cACzCD,oBAAqBP,EAAMK,UAAUA,UAAUE,wBAI5B,SAACkF,GACxB,MAAO,CACHjG,iBAAkB,SAAC0B,GACfuE,EAAS1G,EAAwBS,iBAAiB,CAAC0B,oBAEvDzB,MAAO,SAACuC,GACJyD,EAAS1G,EAAwBU,MAAM,CAACuC,SAE5CtC,MAAO,SAACuC,GACJwD,EAAS1G,EAAwBW,MAAM,CAACuC,SAE5CtC,OAAQ,SAACuC,GACLuD,EAAS1G,EAAwBY,OAAO,CAACuC,UAE7CtC,uBAAwB,SAACuC,GACrBsD,EAAS1G,EAAwBa,uBAAuB,CAACuC,iBAE7D5C,kBAAmB,SAAC0B,GAChBwE,EAAS1G,EAAwBQ,kBAAkB,CAAC0B,qBAExD3B,iBAAkB,SAACkB,GACfiF,EAAS1G,EAAwBO,iBAAiB,CAACkB,uBAKhDgF,CAGbgE,I,uKCdF,IAAMK,GAAQ,SAARA,EAAeC,GAAP,MAAwC,CAClDC,GAAI,SAAIC,EAAyBC,GAA7B,OAA6CJ,EAAgBC,IACjEI,UAAW,SAAID,GAAJ,OAA2BH,KASpCK,GAAO,SAAIL,GAAJ,MAAgB,CACzBC,GAAI,SAAIC,EAAyBC,GAA7B,OACAD,EAAKF,GAAOD,GAAYI,KARlB,SAARG,EAAeN,GAAP,MAAsC,CAChDC,GAAI,SAAIC,EAAyBC,GAA7B,OACAD,EAAKF,GAAOD,GAAMI,KAAQG,EAAgBN,IAC9CI,UAAW,SAAID,GAAJ,OAAoBA,MAKKG,CAAYN,MAGrCO,GA9Cf,SACI9H,EACA+H,EACAC,GAEA,OAAO5B,OAGX,SAAoBpG,EAAc+H,GAC9B,IAAME,EAAK,SAAIC,GAAJ,OAAgB,SAACC,GAAD,OAAaD,IAASC,IAajD,OAXeP,GAAK5H,GACfwH,GAAGS,EAAG,QAAQ,kBAAMF,EAAa7J,OACjCsJ,GAAGS,EAAG,QAAQ,kBAAMF,EAAa5J,OACjCqJ,GAAGS,EAAG,QAAQ,kBAAMF,EAAa3J,OACjCoJ,GAAGS,EAAG,QAAQ,kBAAMF,EAAa1J,OACjCmJ,GAAGS,EAAG,QAAQ,kBAAMF,EAAazJ,OACjCkJ,GAAGS,EAAG,QAAQ,kBAAMF,EAAaxJ,OACjCiJ,GAAGS,EAAG,QAAQ,kBAAMF,EAAavJ,OACjCgJ,GAAGS,EAAG,QAAQ,kBAAMF,EAAatJ,OACjCkJ,WAAU,kBAAO,KAfRS,CAAWpI,EAAM+H,GAAgBC,IC0B7C1O,GAAYC,aAAW,SAACC,GAAD,eACzBC,YAAa,CACTC,MAAI,GACAO,MAAO,OADP,cAECT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAHX,uBAKQ,QALR,GAOJ2M,MAAO,CACHC,UAAW,IAEfF,mBAAoB,CAChB7D,WAAY,EACZ3I,YAAa,EACbF,MAAO,IAEXsM,OAAQ,CACJvM,OAAQR,EAAMY,QAAQ,IAE1B0M,OAAK,GACD9M,OAAQ,OACRC,MAAO,OAFN,cAGAT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAJV,wBAMQT,EAAMY,QAAQ,EAAG,IANzB,QA6IEiO,GA5HmB,SAACxM,GAC/B,IAAMrB,EAAUlB,KADgC,EAEtBmB,IAAMC,SAAS,OAFO,mBAEzCC,EAFyC,KAElCC,EAFkC,OAGtBH,IAAMC,SAAS,GAHO,mBAGzCsN,EAHyC,KAGlCM,EAHkC,OAIxB7N,IAAMC,UAAS,GAJS,mBAIzCuB,EAJyC,KAInCD,EAJmC,OAMxBvB,IAAMC,SAAS,CACnC6F,KAAM,GACN1C,IAAK,GACLgE,KAAM,GACNlH,MAAO,KAVqC,mBAMzCqF,EANyC,KAMnCyD,EANmC,KA0BhD,OACI,6BACI,4CAEA,kBAACoB,EAAA,EAAD,CAAO/J,UAAWN,EAAQsM,OAA1B,UAEI,kBAAC5L,EAAA,EAAD,CACIP,MAAOA,EACPQ,SAAU,SAACC,EAAOC,GACdT,EAASS,IAEbkN,YAAU,EACVzN,UAAWN,EAAQd,MAEnB,kBAAC4B,EAAA,EAAD,CACIX,MAAO,MACPe,MAAM,MACNC,KAAM,kBAAC,KAAD,QAEV,kBAACL,EAAA,EAAD,CACIX,MAAO,MACPe,MAAM,MACNC,KAAM,kBAAC,KAAD,QAEV,kBAACL,EAAA,EAAD,CACIX,MAAO,MACPe,MAAM,MACNC,KAAM,kBAAC,KAAD,QAEV,kBAACL,EAAA,EAAD,CACIX,MAAO,MACPe,MAAM,MACNC,KAAM,kBAAC,KAAD,SAGd,kBAACT,EAAA,EAAD,CACIP,MAAOA,EACPQ,SAAU,SAACC,EAAOC,GACdT,EAASS,IAEbkN,YAAU,EACVzN,UAAWN,EAAQd,MAEnB,kBAAC4B,EAAA,EAAD,CACIX,MAAO,MACPe,MAAM,MACNC,KAAM,kBAAC,KAAD,QAEV,kBAACL,EAAA,EAAD,CACIX,MAAO,MACPe,MAAM,MACNC,KAAM,kBAAC,KAAD,QAEV,kBAACL,EAAA,EAAD,CACIX,MAAO,MACPe,MAAM,MACNC,KAAM,kBAAC,KAAD,QAEV,kBAACL,EAAA,EAAD,CACIX,MAAO,MACPe,MAAM,MACNC,KAAM,kBAAC,KAAD,SAGd,kBAACoJ,GAAA,EAAD,CACI9D,GAAG,QACHvF,MAAM,QACNiB,KAAK,SACLwH,aAAc6D,EACdlN,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPkN,GAAUlN,EAAM4J,OAAOrK,QAE3BsK,YAAY,QACZjL,OAAO,YAIf,6BACA,kBAAC8B,EAAA,EAAD,CACIb,QAAQ,YACRW,MAAM,UACNd,UAAWN,EAAQ+L,OACnBxK,QAAS,YA5FJ,SAAC4H,EAAiBhJ,GAC/B8I,EAAQ,CACJlD,KAAMoD,EACN9F,IAAKhC,EAAM6B,WACXmE,KAAMhG,EAAM8C,cACZhE,MAAOA,IAwFC+I,CACI/I,EACAmN,GAAgBnN,EAAOkB,EAAMoC,cAAe+J,IAlGvC,KAArBnM,EAAM6B,WAAoB6D,GAAWvB,GAAQhE,GAAQ,KA2FjD,QAeA,kBAAC,GAAD,CAAYC,KAAMA,EAAMD,QAASA,EAASgE,KAAMA,MC9K7CiD,gBATS,SAACxF,GAErB,OADA8E,QAAQC,IAAI/E,EAAMK,WACX,CACHG,cAAeR,EAAMK,UAAUA,UAAUG,cACzCP,WAAYD,EAAMD,QAAQE,WAC1BiB,cAAelB,EAAMK,UAAUA,UAAUY,eAAeC,iBAIjDsE,CAEboF,ICeaG,OArBf,SAAsBxI,GAQlB,IAPA,IAAIyI,EAAwB,GAExBxI,EAAiB,CACjBC,GAAIkG,OAAOpG,EAAK0I,OAAS,IAAMtC,OAAOpG,EAAK2I,QAC3C1I,OAAQ,IAGH2I,EAAI,EAAGA,EAAI5I,EAAK0I,MAAOE,IAC5BH,EAAYI,KAAKzI,KAAKC,MAAMD,KAAKE,SAAWN,EAAK2I,QAAU,GAS/D,OANA1I,EAAOA,OAASmG,OACZqC,EAAYK,QAAO,SAASC,EAAOC,GAC/B,OAAOD,EAAQC,MAIhB/I,GCFI,SAASS,GAAY7E,GAChC,IAAIoE,EAAiB,CACjBC,GAAI,GACJD,OAAQ,IAMZ,SAASU,IACL9E,EAAMG,SAAQ,GAGlB,OARIH,EAAMI,OACNgE,EAASuI,GAAa3M,EAAMmE,OAQ5B,6BACI,kBAACY,GAAA,EAAD,CACI3E,KAAMJ,EAAMI,KACZ4E,QAASF,EACTG,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAaC,GAAG,sBACX,eAEL,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmBF,GAAG,4BACjBhB,EAAOC,IAEZ,6BAEA,kBAACiB,GAAA,EAAD,CAAmBF,GAAG,4BACjBhB,EAAOA,SAGhB,kBAACoB,GAAA,EAAD,KACI,kBAACvF,EAAA,EAAD,CAAQC,QAAS4E,EAAa/E,MAAM,UAAU0F,WAAS,GAAvD,YC7CpB,IAAMhI,GAAYC,aAAW,SAACC,GAAD,aACzBC,YAAa,CACTqN,MAAM,aACF9M,OAAQ,OACR+M,QAASvN,EAAMY,QAAQ,EAAG,GAC1BH,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAGf2M,MAAO,CACHC,UAAW,IAEfhE,gBAAgB,aACZC,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,IACP6I,WAAYtJ,EAAMY,QAAQ,MAGlC2I,KAAG,GACCD,WAAYtJ,EAAMY,QAAQ,IAD3B,cAEEZ,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BI,WAAYtJ,EAAMY,QAAQ,KAH/B,uBAKSZ,EAAMY,QAAQ,IALvB,GAOHmM,OAAQ,CACJvM,OAAQR,EAAMY,QAAQ,SAyB5B6O,GAAgC,SAACpN,GACnC,IAAMrB,EAAUlB,KADuC,EAEzBmB,IAAMC,SAAS,GAFU,mBAEhDwO,EAFgD,KAEvCC,EAFuC,OAG/B1O,IAAMC,UAAS,GAHgB,mBAGhDuB,EAHgD,KAG1CD,EAH0C,OAK/BvB,IAAMC,SAAS,CACnC6F,KAAM,GACN1C,IAAK,GACLgE,KAAM,GACNlH,MAAO,KAT4C,mBAKhDqF,EALgD,KAK1CyD,EAL0C,KAyBvD,OACI,kBAACoB,EAAA,EAAD,CAAO/J,UAAWN,EAAQsM,OACtB,kBAAC1F,GAAA,EAAD,CAAMxF,MAAM,UAAUF,MAAM,QADhC,IAC0CG,EAAMiD,IAC5C,kBAACiG,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLwH,aAAc+E,EACdpO,UAAWN,EAAQqI,gBACnB1H,SAAU,SAACC,GACP+N,GAAY/N,EAAM4J,OAAOrK,QAE7BsK,YAAY,MACZjL,OAAO,WAEX,kBAACkL,GAAA,EAAD,CAAKtJ,MAAM,UAAUuJ,aAAW,MAAMrK,UAAWN,EAAQuI,KACrD,kBAAC,KAAD,CACIhH,QAAS,WACLF,EAAMuB,OAAOvB,EAAMiD,IAAMoK,OAIrC,6BACA,kBAACpN,EAAA,EAAD,CACIb,QAAQ,YACRW,MAAM,UACNd,UAAWN,EAAQ+L,OACnBxK,QAAS,WAxCJ,IAAC4H,EAAiBhJ,EAAjBgJ,EAyCO,8BAzCUhJ,EAyCCyL,OAAOvK,EAAMiD,KAxC7C2E,EAAQ,CACJlD,KAAMoD,EACN9F,IAAKhC,EAAM6B,WACXmE,KAAMhG,EAAM8C,cACZhE,MAAOA,IAKU,KAArBkB,EAAM6B,WAAoB6D,GAAWvB,GAAQhE,GAAQ,KA0BjD,aAWA,kBAAC,GAAD,CAAYC,KAAMA,EAAMD,QAASA,EAASgE,KAAMA,MAKtDoJ,GAA+B,SAACvN,GAClC,IAAMrB,EAAUlB,KADsC,EAEpBmB,IAAMC,SAAS,GAFK,mBAE/C2O,EAF+C,KAEpCC,EAFoC,OAGlB7O,IAAMC,SAAS,GAHG,mBAG/C6O,EAH+C,KAGnCC,EAHmC,OAI9B/O,IAAMC,UAAS,GAJe,mBAI/CuB,EAJ+C,KAIzCD,EAJyC,OAM9BvB,IAAMC,SAAS,CACnCgO,MAAO,EACPC,OAAQ,IAR0C,mBAM/C3I,EAN+C,KAMzCyD,EANyC,KAsBtD,OACI,kBAACoB,EAAA,EAAD,CAAO/J,UAAWgK,aAAKtK,EAAQsM,MAAOtM,EAAQoM,QAC1C,kBAAC7B,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,QACNiB,KAAK,SACLwH,aAAckF,EACdvO,UAAWN,EAAQqI,gBACnB1H,SAAU,SAACC,GACPkO,GAAclO,EAAM4J,OAAOrK,QAE/BsK,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,SACNiB,KAAK,SACLwH,aAAcoF,EACdzO,UAAWN,EAAQqI,gBACnB1H,SAAU,SAACC,GACPoO,GAAepO,EAAM4J,OAAOrK,QAEhCsK,YAAY,MACZjL,OAAO,WAGX,6BACA,kBAAC8B,EAAA,EAAD,CACIb,QAAQ,YACRW,MAAM,UACNd,UAAWN,EAAQ+L,OACnBxK,QAAS,WA1CjB0H,EAAQ,CACJiF,MA0CiBW,EAzCjBV,OAyC4BY,IApChCvN,GAAQ,KA+BJ,SAYA,kBAAC,GAAD,CAAeC,KAAMA,EAAMD,QAASA,EAASgE,KAAMA,MAKzDyJ,GAAgC,SAAC5N,GACnC,IAAMrB,EAAUlB,KADwC,EAEhCmB,IAAMC,UAAS,GAFiB,mBAEjDuB,EAFiD,KAE3CD,EAF2C,OAIhCvB,IAAMC,SAAS,CACnC6F,KAAM,GACN1C,IAAK,GACLgE,KAAM,GACNlH,MAAO,KAR6C,mBAIjDqF,EAJiD,KAI3CyD,EAJ2C,KAwBxD,OACI,kBAACoB,EAAA,EAAD,CAAO/J,UAAWgK,aAAKtK,EAAQsM,MAAOtM,EAAQoM,QAC1C,6BACA,kBAAC9K,EAAA,EAAD,CACIb,QAAQ,YACRW,MAAM,UACNd,UAAWN,EAAQ+L,OACnBxK,QAAS,WACL,IArBE4H,EAAiBhJ,EAqBf+O,EAA0B7N,EAAMkC,OAAO4G,MACvC,SAAAC,GAAC,MAAoB,6BAAhBA,EAAEf,aAEC,MAAR6F,IAxBF/F,EA0BO,2BA1BUhJ,EA0BFyL,OAAOsD,EAAK5F,YAzBzCL,EAAQ,CACJlD,KAAMoD,EACN9F,IAAKhC,EAAM6B,WACXmE,KAAMhG,EAAM8C,cACZhE,MAAOA,IAKU,KAArBkB,EAAM6B,WAAoB6D,GAAWvB,GAAQhE,GAAQ,MAMjD,QAiBA,kBAAC,GAAD,CAAYC,KAAMA,EAAMD,QAASA,EAASgE,KAAMA,MA6B7ClB,GAxBmB,SAACjD,GAC/B,OACI,6BACI,kBAAC,GAAD,CACIiD,IAAKjD,EAAMiD,IACXH,cAAe9C,EAAM8C,cACrBvB,OAAQvB,EAAMuB,OACdM,WAAY7B,EAAM6B,aAEtB,kBAAC,GAAD,CACIoB,IAAKjD,EAAMiD,IACXH,cAAe9C,EAAM8C,cACrBvB,OAAQvB,EAAMuB,OACdM,WAAY7B,EAAM6B,aAEtB,kBAAC,GAAD,CACIK,OAAQlC,EAAMkC,OACdL,WAAY7B,EAAM6B,WAClBiB,cAAe9C,EAAM8C,kBCtPtBsE,gBAjBS,SAACxF,GACrB,MAAO,CACHqB,IAAKrB,EAAMK,UAAUA,UAAUY,eAAeI,IAC9CH,cAAelB,EAAMK,UAAUA,UAAUY,eAAeC,cACxDZ,OAAQN,EAAMK,UAAUA,UAAUC,OAClCL,WAAYD,EAAMD,QAAQE,eAIP,SAACwF,GACxB,MAAO,CACH9F,OAAQ,SAACuC,GACLuD,EAAS1G,EAAwBY,OAAO,CAACuC,aAKtCsD,CAGbnE,ICLIxF,GAAYC,aAAW,SAACC,GAAD,aACzBC,YAAa,CACTC,KAAM,CACFO,MAAO,MACPD,OAAQ,OACR6M,UAAWrN,EAAMY,QAAQ,GACzBuP,UAAW,QAEfhH,MAAM,aACF1I,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BkH,SAAU,MAGlB/G,gBAAgB,aACZC,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAGf8I,IAAI,aACAD,WAAY,OACXtJ,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BI,WAAYtJ,EAAMY,QAAQ,GAC1BJ,OAAQR,EAAMY,QAAQ,KAG9BoG,MAAI,mBACChH,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BI,WAAYtJ,EAAMY,QAAQ,GAC1BJ,OAAQR,EAAMY,QAAQ,KAH1B,cAKCZ,EAAMiJ,YAAYO,KAAK,MAAQ,CAC5BvC,UAAW,SANf,QC5CZ,IAqBewC,gBArBS,SAACxF,GACrB,MAAO,CACHM,OAAQN,EAAMK,UAAUA,UAAUC,OAClCgB,YAAatB,EAAMK,UAAUA,UAAUY,eAAeK,YACtDU,GAAIhC,EAAMK,UAAUA,UAAUY,eAAeE,GAC7ClB,WAAYD,EAAMD,QAAQE,WAC1BiB,cAAelB,EAAMK,UAAUA,UAAUY,eAAeC,kBAIrC,SAACuE,GACxB,MAAO,CACHpG,UAAW,SAACiB,GACRmF,EAAS1G,EAAwBM,UAAU,CAACiB,aAEhDb,MAAO,SAACuC,GACJyD,EAAS1G,EAAwBU,MAAM,CAACuC,YAKrCwD,ED6CA,SAAqBpH,GAChC,IAAMrB,EAAUlB,KAD8B,EAEpBmB,IAAMC,SAAiB,IAFH,mBAEvC2I,EAFuC,KAEhCC,EAFgC,OAGpB7I,IAAMC,SAAiB,GAHH,mBAGvCC,EAHuC,KAGhCC,EAHgC,OAIlBH,IAAMC,SAAiB,GAJL,mBAIvCmP,EAJuC,KAI/BC,EAJ+B,OAKVrP,IAAMC,UAAkB,GALd,mBAKvC6I,EALuC,KAK3BC,EAL2B,OAetB/I,IAAMC,SAAS,CACnC6F,KAAM,GACN1C,IAAK,GACLgE,KAAM,GACNlH,MAAO,KAnBmC,mBAevCqF,EAfuC,KAejCyD,EAfiC,KAsBxCC,EAAW,SAACC,EAAiBhJ,GAC/B8I,EAAQ,CACJlD,KAAMoD,EACN9F,IAAKhC,EAAM6B,WACXmE,KAAMhG,EAAM8C,cACZhE,MAAOA,KAQTmC,EAAY,SAACuG,EAAe1I,GAC9B,IAAMiJ,EAAkB,CACpBC,UAAW,GACXC,WAAY,EACZC,UAAW,eACXC,aAAa,EACbC,eAAgB,EAChBC,mBAAoB,EACpBC,aAAc,GAGZC,EAAYC,KAAKC,MAAMD,KAAKE,UAAU1I,EAAMkC,SAE5CyG,EACkB,MAApBJ,EAAUK,QAAuC,IAArBL,EAAUK,YAChCC,EACAN,EAAUO,MACN,SAACC,GAAD,OAA8BA,EAAEf,YAAcR,KAG9C,MAAVmB,GACAZ,EAASC,UAAYR,EACrBO,EAASE,WAAanJ,EACtBkB,EAAMiB,UAAN,sBAAoBjB,EAAMkC,QAA1B,CAAkC6F,OAElCY,EAAOV,WAAanJ,EACpBkB,EAAMiB,UAAUsH,KAIxB,OACI,6BACI,kBAACS,EAAA,EAAD,CAAO/J,UAAWgK,aAAKtK,EAAQd,OAC3B,6BAEA,kBAACwC,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,kBAACgF,GAAA,EAAD,CAAMxF,MAAM,UAAUF,MAAM,UAC5B,kBAACqJ,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,QACNiB,KAAK,OACLwH,aAAcd,EACdvI,UAAWN,EAAQqI,gBACnB1H,SAAU,SACNC,GAEAkI,EAASlI,EAAM4J,OAAOrK,QAE1BsK,YAAY,QACZjL,OAAO,WAEX,6BACA,kBAACoH,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,QACNZ,UAAWN,EAAQgG,OAEvB,kBAACuE,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,QACNiB,KAAK,SACLwH,aAAcxJ,EACdG,UAAWN,EAAQqI,gBACnB1H,SAAU,SACNC,GAEAR,GAAUQ,EAAM4J,OAAOrK,QAE3BsK,YAAY,QACZjL,OAAO,WAGX,6BACA,kBAACkL,GAAA,EAAD,CACItJ,MAAM,UACNuJ,aAAW,MACXrK,UAAWN,EAAQuI,KAEnB,kBAAC,KAAD,CACIhH,QAAS,WACLe,EAAUuG,EAAO1I,QAMjC,kBAACuB,EAAA,EAAD,CAAQI,QAAM,EAACF,eAAe,OAC1B,kBAACgF,GAAA,EAAD,CAAMxF,MAAM,UAAUF,MAAM,UAC5B,kBAACqJ,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,QACNiB,KAAK,OACLwH,aAAcd,EACdvI,UAAWN,EAAQqI,gBACnB1H,SAAU,SACNC,GAEAkI,EAASlI,EAAM4J,OAAOrK,QAE1BsK,YAAY,QACZjL,OAAO,WAEX,kBAACoH,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,QACNZ,UAAWN,EAAQgG,OAEvB,kBAACuE,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,QACNiB,KAAK,SACLwH,aAAcxJ,EACdG,UAAWN,EAAQqI,gBACnB1H,SAAU,SACNC,GAEAR,GAAUQ,EAAM4J,OAAOrK,QAE3BsK,YAAY,QACZjL,OAAO,WAEX,kBAACkL,GAAA,EAAD,CACItJ,MAAM,UACNuJ,aAAW,MACXrK,UAAWN,EAAQuI,KAEnB,kBAAC,KAAD,CACIhH,QAAS,WACLe,EAAUuG,EAAO1I,QAKjC,6BACA,6BACA,kBAACyG,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,KACNZ,UAAWN,EAAQgG,OACpB,IACF3E,EAAM4D,GACP,kBAACsF,GAAA,EAAD,CACI9D,GAAG,KACHvF,MAAM,KACNiB,KAAK,SACLwH,aAAc0F,EACd/O,UAAWN,EAAQqI,gBACnB1H,SAAU,SAACC,GACP0O,GAAW1O,EAAM4J,OAAOrK,QAE5BsK,YAAY,QACZjL,OAAO,WAEX,kBAAC8B,EAAA,EAAD,CACIb,QAAQ,YACRW,MAAM,UACNG,QAAS,WACLF,EAAMqB,MAAMrB,EAAM4D,GAAKoK,KAJ/B,OASA,6BACA,8BAGJ,kBAAChF,EAAA,EAAD,CAAO/J,UAAWN,EAAQd,MACtB,kBAACgM,EAAA,EAAD,CAAO5K,UAAWN,EAAQmI,OACtB,kBAACgD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,UAGR,kBAACC,EAAA,EAAD,KACKlK,EAAMkC,OAAOiI,KAAI,SAAAC,GACd,GAAsB,iBAAlBA,EAAIlC,UAIR,OACI,kBAAC6B,EAAA,EAAD,CACIM,IAAKD,EAAIpC,UACT9H,QAAS,SAAAoK,GACL5D,QAAQC,IAAI,WArN5B,SAACqB,GACjB,IAAMR,EAA2BxH,EAAMkC,OAAO4G,MAC1C,SAAAC,GAAC,OAAIA,EAAEf,YAAcA,KAEZ,MAATR,GACJK,EAASG,EAAWuC,OAAO/C,EAAMS,aAiNDuC,CAAYJ,EAAIpC,WA7L3B,KAArBhI,EAAM6B,WAAoB6D,GAAWvB,GAAQwD,GAAc,KAiM/B,kBAACqC,EAAA,EAAD,CAAWtK,UAAU,KAAK+K,MAAM,OAC3BL,EAAIpC,WAET,kBAACgC,EAAA,EAAD,CAAWC,MAAM,SACZG,EAAInC,YAET,kBAAC+B,EAAA,EAAD,CAAWC,MAAM,SACZG,EAAIlC,iBAQ7B,kBAAC,GAAD,CACI9H,KAAMsH,EACNvH,QAASwH,EACTxD,KAAMA,S,0KEvSpB1G,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFO,MAAO,MACPD,OAAQ,OACR6M,UAAWrN,EAAMY,QAAQ,GACzBuP,UAAW,QAEfI,gBAAiB,CACbC,QAAS,EACTC,WAAY,OACZtQ,SAAU,iBAIP,SAASuQ,GAAWrO,GAC/B,IAAMrB,EAAUlB,KAD6B,EAErBmB,IAAMC,SAAe,IAAIyP,KAAK,GAAI,KAFb,mBAEtCC,EAFsC,KAEhCC,EAFgC,OAGb5P,IAAMC,SAAiB,aAHV,mBAGtC4P,EAHsC,KAG5BC,EAH4B,KAgB7C,SAASC,EAAS1M,GACd,IAAI0B,EAAmB,CACnBzB,OAAQD,EAAUC,OAClBC,oBAAqBF,EAAUE,oBAC/BC,cAAeH,EAAUG,cACzBS,eAAgBZ,EAAUY,gBAG9B6D,QAAQC,IAAIhD,GACZ3D,EAAMgB,aAAa2C,GAGvB,SAASmB,IACL9E,EAAMG,SAAQ,GAGlB,OACI,6BACI,kBAAC4E,GAAA,EAAD,CACI3E,KAAMJ,EAAMI,KACZ4E,QAASF,EACTG,kBAAgB,qBAEhB,kBAACE,GAAA,EAAD,CAAaC,GAAG,qBAAhB,oBAGA,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,wCAGA,kBAACrF,EAAA,EAAD,CAAQF,MAAM,UAAUL,UAAU,SAAlC,SAEI,2BACIoB,KAAK,OACL7B,UAAWN,EAAQuP,gBACnB5O,SAAU,SAAAsP,IA9ClC,SAA0BA,GACtB,IAAMzF,EAA2ByF,EAAEzF,OACnC,GAAc,MAAVA,GACgB,MAAhBA,EAAO0F,MAAX,CAEA,IAAMN,EAAoBpF,EAAO0F,MAAM1K,KAAK,GAChC,MAARoK,IACJC,EAAQD,GACRG,EAAYH,EAAK7J,QAuCOoK,CAAiBF,OAI5BH,EACD,6BACA,6BACA,kBAACxO,EAAA,EAAD,CACIF,MAAM,UACNX,QAAQ,YACRc,QAAS,YCjGlB,SAAkB+F,EAAM9B,GACnC,GAAY,MAARA,EAAJ,CACA,IAAI4K,EAAS,IAAIC,WAGZ7K,EAAKO,KAAK+G,MAAM,WAActH,EAAKO,KAAK+G,MAAM,UAMnDsD,EAAOE,QAAU,WACbC,MAAM,+FAGVH,EAAOI,WAAWhL,EAAM,SAGnBA,EAAKO,KAAK+G,MAAM,WAActH,EAAKO,KAAK+G,MAAM,SAKvC,MAARtH,GACA4K,EAAOK,iBAAiB,QAAQ,WAC5B,IAAI9I,EAAOkC,KAAKC,MAAMsG,EAAO3K,QAC7B6B,EAAKK,MAPT4I,MAAM,0IAbNA,MAAM,0ID4FcG,CAASV,EAAUJ,GACnBzJ,MALR,QAWJ,kBAACU,GAAA,EAAD,KACI,kBAACvF,EAAA,EAAD,CAAQC,QAAS4E,EAAa/E,MAAM,WAApC,a,cEhFdtC,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFO,MAAO,OACPkR,SAAU,IACVC,gBAAiB5R,EAAM6R,QAAQzL,WAAWkH,YA+BvC,SAASwE,GAAWzP,GAC/B,IAAMrB,EAAUlB,KAD6B,EAErBmB,IAAMC,UAAS,GAFM,mBAEtCuB,EAFsC,KAEhCD,EAFgC,KAI7C,OACI,yBAAKlB,UAAWN,EAAQd,MACpB,kBAAC6R,GAAA,EAAD,CAAMhQ,UAAU,MAAM4J,aAAW,wBAC7B,kBAACqG,GAAA,EAAD,CAAUjF,QAAM,EAAChL,UAAWC,IAAMC,GAAG,eACjC,kBAACgQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,WAE1B,kBAACH,GAAA,EAAD,CAAUjF,QAAM,EAAChL,UAAWC,IAAMC,GAAG,mBACjC,kBAACgQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAE1B,kBAACH,GAAA,EAAD,CAAUjF,QAAM,EAAChL,UAAWC,IAAMC,GAAG,kBACjC,kBAACgQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAE1B,kBAACH,GAAA,EAAD,CAAUjF,QAAM,EAAChL,UAAWC,IAAMC,GAAG,aACjC,kBAACgQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,SAE1B,kBAACH,GAAA,EAAD,CAAUjF,QAAM,EAAChL,UAAWC,IAAMC,GAAG,gBACjC,kBAACgQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,YAG1B,kBAACC,GAAA,EAAD,MAEA,kBAACJ,GAAA,EAAD,CACIjF,QAAM,EACNxK,QAAS,WACLC,GAAQ,KAGZ,kBAACyP,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,YAG1B,kBAACH,GAAA,EAAD,CACIjF,QAAM,EACNxK,QAAS,YAhFP,SAAC+B,GACnB,IAAIkL,EAAOlL,EAEX,GAA0C,KAAtCkL,EAAKtK,eAAeC,cAAsB,CAC1C4D,QAAQC,IAAI,kBACZ,IAAMqJ,EAAO,IAAIC,KAAK,CAACzH,KAAKE,UAAUyE,IAAQ,CAC1CrM,KAAM,qBAENkB,EAAMkO,OAAOC,IAAIC,gBAAgBJ,GACjCK,EAAOC,SAASC,cAAc,KAElC,GAAW,MAAPvO,EAAa,OAEjBqO,EAAKG,SAAWrD,EAAKtK,eAAeC,cAAgB,OACpDuN,EAAKI,KAAOzO,EACZsO,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLN,SAASI,KAAKG,YAAYR,QAE1BnB,MAAM,CACF4B,QAAS,2BACThQ,KAAM,YA4DMiQ,CAAc/Q,EAAMiC,aAGxB,kBAAC2N,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,aAI9B,kBAAC,GAAD,CACI1P,KAAMA,EACND,QAASA,EACTa,aAAchB,EAAMgB,gBCxGpC,IAAMvD,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFO,MAAO,OACPkR,SAAU,IACVC,gBAAiB5R,EAAM6R,QAAQzL,WAAWkH,YA+BvC,SAASwE,GAAWzP,GAC/B,IAAMrB,EAAUlB,KAD6B,EAErBmB,IAAMC,UAAS,GAFM,mBAEtCuB,EAFsC,KAEhCD,EAFgC,KAI7C,OACI,yBAAKlB,UAAWN,EAAQd,MACpB,kBAAC6R,GAAA,EAAD,CAAMhQ,UAAU,MAAM4J,aAAW,wBAC7B,kBAACqG,GAAA,EAAD,CAAUjF,QAAM,EAAChL,UAAWC,IAAMC,GAAG,eACjC,kBAACgQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,WAE1B,kBAACH,GAAA,EAAD,CAAUjF,QAAM,EAAChL,UAAWC,IAAMC,GAAG,mBACjC,kBAACgQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAE1B,kBAACH,GAAA,EAAD,CAAUjF,QAAM,EAAChL,UAAWC,IAAMC,GAAG,kBACjC,kBAACgQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAE1B,kBAACH,GAAA,EAAD,CAAUjF,QAAM,EAAChL,UAAWC,IAAMC,GAAG,aACjC,kBAACgQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,SAE1B,kBAACH,GAAA,EAAD,CAAUjF,QAAM,EAAChL,UAAWC,IAAMC,GAAG,gBACjC,kBAACgQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,YAG1B,kBAACC,GAAA,EAAD,MAEA,kBAACJ,GAAA,EAAD,CACIjF,QAAM,EACNxK,QAAS,WACLC,GAAQ,KAGZ,kBAACyP,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,YAG1B,kBAACH,GAAA,EAAD,CACIjF,QAAM,EACNxK,QAAS,YAhFP,SAAC+B,GACnB,IAAIkL,EAAOlL,EAEX,GAA0C,KAAtCkL,EAAKtK,eAAeC,cAAsB,CAC1C4D,QAAQC,IAAI,kBACZ,IAAMqJ,EAAO,IAAIC,KAAK,CAACzH,KAAKE,UAAUyE,IAAQ,CAC1CrM,KAAM,qBAENkB,EAAMkO,OAAOC,IAAIC,gBAAgBJ,GACjCK,EAAOC,SAASC,cAAc,KAElC,GAAW,MAAPvO,EAAa,OAEjBqO,EAAKG,SAAWrD,EAAKtK,eAAeC,cAAgB,OACpDuN,EAAKI,KAAOzO,EACZsO,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLN,SAASI,KAAKG,YAAYR,QAE1BnB,MAAM,CACF4B,QAAS,2BACThQ,KAAM,YA4DMiQ,CAAc/Q,EAAMiC,aAGxB,kBAAC2N,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,aAI9B,kBAAC,GAAD,CACI1P,KAAMA,EACND,QAASA,EACTa,aAAchB,EAAMgB,gBCrHpC,IAsBetC,GAtBkB,SAACsB,GAC9B,OACI,6BAEI,kBAACK,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,kBAAC,GAAD,CACI0B,UAAWjC,EAAMiC,UACjBjB,aAAchB,EAAMgB,gBAK5B,kBAACX,EAAA,EAAD,CAAQI,QAAM,EAACF,eAAe,OAC1B,kBAAC,GAAD,CACI0B,UAAWjC,EAAMiC,UACjBjB,aAAchB,EAAMgB,kBCRzBoG,gBAbS,SAACxF,GACvB,MAAO,MAIkB,SAACyF,GACxB,MAAO,CACHrG,aAAc,SAAC2C,GACX0D,EAAS1G,EAAwBK,aAAa,CAAC2C,eAK5CyD,CAGb4J,ICDIvT,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAK,aACDC,SAAU,WACV8M,QAAS,OACT7M,OAAQ,GACPJ,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BoK,WAAY,UAGpBC,OAAO,eACFvT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BoK,WAAY,QACZ7S,MAdI,IAeJ+S,WAAY,IAGpB9S,WAAW,aACPC,YAAaX,EAAMY,QAAQ,IAC1BZ,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1B+D,QAAS,SAGjBwG,QAASzT,EAAM0T,OAAOD,QACtBE,YAAa,CACTlT,MA1BQ,KA4BZmT,QAAS,CACLC,SAAU,EACVtG,QAASvN,EAAMY,QAAQ,SC9CnC,IAMe6I,gBANS,SAACxF,GACrB,MAAO,CACHK,UAAWL,EAAMK,UAAUA,aAIpBmF,EDoDA,SAA0BpH,GAA+B,IAC5DyR,EAAczR,EAAdyR,UACF9S,EAAUlB,KACVE,EAAQ+T,cAEd,SAASC,IACL3R,EAAM4R,eAAe5R,EAAM6R,YAG/B,IAAMX,EACF,6BACI,yBAAKjS,UAAWN,EAAQyS,UAExB,kBAAC,GAAD,CAASnP,UAAWjC,EAAMiC,aAIlC,OACI,yBAAKhD,UAAWN,EAAQd,MACpB,kBAACiU,EAAA,EAAD,MACA,yBAAK7S,UAAWN,EAAQuS,OAAQ5H,aAAW,mBACvC,kBAACjJ,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,kBAACwR,EAAA,EAAD,CACIN,UAAWA,EACXrS,QAAQ,YACR4S,OAA4B,QAApBrU,EAAMsU,UAAsB,QAAU,OAC9C7R,MAAOJ,EAAM6R,WACb7M,QAAS2M,EACTzR,QAASyR,EACThT,QAAS,CACLsM,MAAOtM,EAAQ2S,aAEnBY,WAAY,CACRC,aAAa,IAGhBjB,IAGT,kBAAC7Q,EAAA,EAAD,CAAQI,QAAM,EAACF,eAAe,OAC1B,kBAACwR,EAAA,EAAD,CACIpT,QAAS,CACLsM,MAAOtM,EAAQ2S,aAEnBlS,QAAQ,YACRgB,MAAI,GAEH8Q,KAIb,0BAAMjS,UAAWN,EAAQ4S,SACrB,yBAAKtS,UAAWN,EAAQyS,UACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIgB,OAAK,EACLC,KAAK,cACL3S,UAAW4S,GACXb,UAAWnB,SAASiC,eAAe,cAEvC,kBAAC,IAAD,CAAOF,KAAK,kBAAkB3S,UAAW0L,KACzC,kBAAC,IAAD,CAAOiH,KAAK,iBAAiB3S,UAAW8S,KACxC,kBAAC,IAAD,CAAOH,KAAK,YAAY3S,UAAWuD,KACnC,kBAAC,IAAD,CAAOoP,KAAK,eAAe3S,UAAW+S,W,gBE5H1D5M,EAAQ,KAAU6M,SAElB,IAAMA,GAAS,CACXC,OAAQC,0CACRC,WAAYD,mCACZE,YAAaF,0CACbG,UAAWH,4YAAYI,qBACvBC,cAAeL,GACfM,kBAAmBN,eACnBO,MAAOP,uCAGXQ,iBAAuBV,IAERU,UCLT3V,GAAYC,aAAW,SAACC,GAAD,aACzBC,YAAa,CACT8M,OAAQ,CACJvM,OAAQR,EAAMY,QAAQ,IAE1BoM,MAAO,CACHC,QAAS,QAEbC,UAAU,aACN5D,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAaX,EAAMY,QAAQ,GAC3BH,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAGf2M,MAAO,CACHC,UAAW,IAEfqI,KAAK,aACDjV,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAGf6M,OAAK,GACD9M,OAAQ,OACRC,MAAO,OAFN,cAGAT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAJV,wBAMQT,EAAMY,QAAQ,EAAG,IANzB,GAQL+U,OAAQ,CACJrC,WAAY,YAkHTsC,GAtGiB,SAACvT,GAC7B,IAAMrB,EAAUlB,KAD8B,EAEdmB,IAAMC,SAASmB,EAAM6B,YAFP,mBAEvC2R,EAFuC,KAE7BC,EAF6B,OAGd7U,IAAMC,SAASmB,EAAM8B,SAHP,mBAGvC4R,EAHuC,KAG7BC,EAH6B,OAIpB/U,IAAMC,SAAS,WAJK,mBAIvCC,EAJuC,KAIhCC,EAJgC,KAwB9C,OACI,yBAAKqG,GAAG,SACJ,kBAAC/E,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,wBAAItB,UAAWN,EAAQ2U,UAGVF,GAASQ,OAAOC,YAGrB,6BACK/U,EACD,kBAACmB,EAAA,EAAD,CACIb,QAAQ,YACRW,MAAM,UACNd,UAAWN,EAAQ+L,OACnBxK,QAAS,WAvBjCkT,GACKQ,OACAE,UACA1N,MAAK,WACFrH,EAAS,eAeG,WAcR,6BACI,qCACA,kBAACiK,EAAA,EAAD,CAAO/J,UAAWN,EAAQsM,OACtB,kBAAC/B,GAAA,EAAD,CACI9D,GAAG,WACHvF,MAAM,YACNyI,aAActI,EAAM8B,QACpB7C,UAAWgK,aACPtK,EAAQkM,UACRlM,EAAQoM,OAEZzL,SAAU,SACNC,GAEAkU,EAAYlU,EAAM4J,OAAOrK,QAE7BX,OAAO,UAEX,6BACA,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,WACHvF,MAAM,WACNiB,KAAK,WACLwH,aAActI,EAAM6B,WACpB5C,UAAWgK,aACPtK,EAAQkM,UACRlM,EAAQoM,OAEZzL,SAAU,SACNC,GAEAoU,EAAYpU,EAAM4J,OAAOrK,QAE7BX,OAAO,UAEX,6BACA,kBAAC8B,EAAA,EAAD,CACIb,QAAQ,YACRW,MAAM,UACNd,UAAWN,EAAQ+L,OACnBxK,QAAS,YAnFvB,SAAC6T,EAAeL,GAC1BN,GACKQ,OACAI,2BAA2BD,EAAOL,GAClCtN,MAAK,WACFrH,EAAS,YA+EWkV,CAAMT,EAAUE,KALxB,a,qBCvHbQ,GAnBQ,WACnB,OACI,uBAAKjV,UAAU,OACX,2BACA,2BACA,2BACA,uBAAKkV,IAAKC,KAAMC,IAAI,GAAGjW,MAAM,MAAMkF,OAAO,QAC1C,2BACA,2BAEA,gBAACnE,EAAA,EAAD,6FAEI,2BAFJ,oFCJN1B,GAAYC,aAAW,SAACC,GAAD,aACzBC,YAAa,CACT8M,OAAQ,CACJvM,OAAQR,EAAMY,QAAQ,IAE1BoM,MAAO,CACHC,QAAS,QAEbC,UAAU,aACN5D,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAaX,EAAMY,QAAQ,GAC3BH,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAGf2M,MAAO,CACHC,UAAW,IAEfqI,KAAK,aACDjV,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAGf6M,OAAK,GACD9M,OAAQ,OACRC,MAAO,OAFN,cAGAT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAJV,wBAMQT,EAAMY,QAAQ,EAAG,IANzB,GAQL+U,OAAQ,CACJrC,WAAY,YAmETqD,GAvDmB,SAACtU,GAC/B,IAAMrB,EAAUlB,KADgC,EAEbmB,IAAMC,SAASmB,EAAM6B,YAFR,mBAEzC0S,EAFyC,KAE/BC,EAF+B,OAGlB5V,IAAMC,SAASmB,EAAM8B,SAHH,mBAGzC2S,EAHyC,KAGlCC,EAHkC,KAWhD,OACI,6BACI,kBAACrU,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,wBAAItB,UAAWN,EAAQ2U,UAE3B,uCACA,kBAACtK,EAAA,EAAD,CAAO/J,UAAWN,EAAQsM,OACtB,kBAAC/B,GAAA,EAAD,CACI9D,GAAG,UACHvF,MAAM,eACNyI,aAActI,EAAM8B,QACpB7C,UAAWgK,aAAKtK,EAAQkM,UAAWlM,EAAQoM,OAC3CzL,SAAU,SAACC,GACPmV,EAAanV,EAAM4J,OAAOrK,QAE9BX,OAAO,UAEX,6BACA,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,aACHvF,MAAM,cACNyI,aAActI,EAAM6B,WACpB5C,UAAWgK,aAAKtK,EAAQkM,UAAWlM,EAAQoM,OAC3CzL,SAAU,SAACC,GACPiV,EAAejV,EAAM4J,OAAOrK,QAEhCX,OAAO,UAEX,6BACA,kBAAC8B,EAAA,EAAD,CACIb,QAAQ,YACRW,MAAM,UACNd,UAAWN,EAAQ+L,OACnBxK,QAAS,WAvCV,IAACyU,EAAoBC,EAApBD,EAwCWF,EAxCSG,EAwCFL,EAvC9BvU,EAAMe,WAAW4T,GACjB3U,EAAMY,cAAcgU,GACpBlO,QAAQC,IAAIgO,KAgCJ,UCxEDvN,gBAlBS,SAACxF,GACrB,MAAO,CACHC,WAAYD,EAAMD,QAAQE,WAC1BC,QAASF,EAAMD,QAAQG,YAIJ,SAACuF,GACxB,MAAO,CACHtG,WAAY,SAACiB,GACTqF,EAAS1G,EAAsBI,WAAW,CAACiB,UAE/CpB,cAAe,SAACoB,GACZqF,EAAS1G,EAAsBC,cAAc,CAACoB,aAK3CoF,CAGbkN,I,8BCbI7W,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACT8M,OAAQ,CACJvM,OAAQR,EAAMY,QAAQ,IAE1BoM,MAAO,CACHC,QAAS,QAEbC,UAAW,CACP5D,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,KAEX0M,mBAAoB,CAChB7D,WAAY,EACZ3I,YAAa,EACbF,MAAO,OAEX4I,gBAAiB,CACbC,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,OAEX2M,MAAO,CACHC,UAAW,IAEfqI,KAAM,CACFjV,MAAO,KAEX6M,MAAO,CACH9M,OAAQ,OACR+M,QAASvN,EAAMY,QAAQ,EAAG,GAC1BH,MAAO,OAEX+M,KAAM,CACFhN,OAAQ,OACRC,MAAO,OAEXD,OAAQ,CACJA,OAAQR,EAAMY,QAAQ,IAE1BoG,KAAM,CACFsC,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,aA0SVuW,GA/PkB,SAAC7U,GAC9B,IAAMrB,EAAUlB,KAEhB,OACI,kBAACuL,EAAA,EAAD,CAAO/J,UAAWN,EAAQsM,OACtB,gDAEA,kBAAChL,EAAA,EAAD,CACIb,QAAQ,YACRW,MAAM,UACNG,QAAS,WACLF,EAAMgB,aAjDD,SAACiB,GAKtB,IAAM6S,EAAmB,CACrBjI,MAAO,EACPC,OAAQ,GAGNiI,EAAevM,KAAKC,MAAMD,KAAKE,UAAUzG,IAE/C8S,EAAa3S,cAAcC,KAAOsK,GAAamI,GAAS1Q,OAAS,EACjE,IAAM9B,GAAOqK,GAAamI,GAAS1Q,OAAS,EAC5C2Q,EAAa3S,cAAcE,IAAMA,EACjC,IAAMC,GAAOoK,GAAamI,GAAS1Q,OAAS,EAC5C2Q,EAAa3S,cAAcG,IAAMA,EACjCwS,EAAa3S,cAAcI,KAAOmK,GAAamI,GAAS1Q,OAAS,EACjE2Q,EAAa3S,cAAcK,KAAOkK,GAAamI,GAAS1Q,OAAS,EACjE2Q,EAAa3S,cAAcQ,KAAO+J,GAAamI,GAAS1Q,OAAS,EAAI,EAErE0Q,EAAQjI,MAAQ,EAChB,IAAMnK,GAAOiK,GAAamI,GAAS1Q,OAAS,EAAI,EAQhD,OAPA2Q,EAAa3S,cAAcM,IAAMA,EACjCqS,EAAa3S,cAAcO,KAAOgK,GAAamI,GAAS1Q,OAAS,EAAI,EAErE2Q,EAAalS,eAAeE,GAAKwB,KAAKyQ,MAAM1S,EAAMI,GAAO,GACzDqS,EAAalS,eAAeG,GAAKT,EACjCwS,EAAalS,eAAeI,IAAY,EAANV,EAE3BwS,EAmB4BE,CAAiBjV,EAAMiC,cAJlD,QASA,6BACA,6BAEA,kBAACsJ,GAAA,EAAD,CAAMtM,UAAWN,EAAQwM,MACrB,6BADJ,iBAGI,6BACA,kBAAC5F,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,KACNZ,UAAWN,EAAQgG,OACpB,IACF3E,EAAMiC,UAAUY,eAAeE,GAChC,kBAACwC,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,KACNZ,UAAWN,EAAQgG,OACpB,IACF3E,EAAMiC,UAAUY,eAAeG,GAChC,kBAAC3C,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,8BAEJ,kBAACgF,GAAA,EAAD,CAAMxF,MAAM,UAAUF,MAAM,MAAMZ,UAAWN,EAAQgG,OAAS,IAC7D3E,EAAMiC,UAAUY,eAAeI,IAChC,6BACA,8BAEJ,6BAEA,kBAACsI,GAAA,EAAD,CAAMtM,UAAWN,EAAQwM,MACrB,6BADJ,gBAGI,6BACA,kBAACjC,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLhC,MAAOkB,EAAMiC,UAAUG,cAAcC,IACrCpD,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIG,cAAc,eACPpC,EAAMiC,UAAUG,cADV,CAETC,KAAM9C,EAAM4J,OAAOrK,YAI/BsK,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLhC,MAAOkB,EAAMiC,UAAUG,cAAcE,IACrCrD,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIG,cAAc,eACPpC,EAAMiC,UAAUG,cADV,CAETE,KAAM/C,EAAM4J,OAAOrK,QAEvB+D,eAAe,eACR7C,EAAMiC,UAAUY,eADT,CAEVE,GAAIwB,KAAKyQ,OACHzV,EAAM4J,OAAOrK,MACXkB,EAAMiC,UAAUG,cAAcM,KAC9B,SAKpB0G,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLhC,MAAOkB,EAAMiC,UAAUG,cAAcG,IACrCtD,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIG,cAAc,eACPpC,EAAMiC,UAAUG,cADV,CAETG,KAAMhD,EAAM4J,OAAOrK,QAEvB+D,eAAe,eACR7C,EAAMiC,UAAUY,eADT,CAEVG,IAAKzD,EAAM4J,OAAOrK,MAClBmE,IAA2B,GAArB1D,EAAM4J,OAAOrK,YAI/BsK,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLhC,MAAOkB,EAAMiC,UAAUG,cAAcI,IACrCvD,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIG,cAAc,eACPpC,EAAMiC,UAAUG,cADV,CAETI,KAAMjD,EAAM4J,OAAOrK,YAI/BsK,YAAY,MACZjL,OAAO,WAEX,6BACA,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLhC,MAAOkB,EAAMiC,UAAUG,cAAcK,IACrCxD,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIG,cAAc,eACPpC,EAAMiC,UAAUG,cADV,CAETK,KAAMlD,EAAM4J,OAAOrK,YAI/BsK,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLhC,MAAOkB,EAAMiC,UAAUG,cAAcM,IACrCzD,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIG,cAAc,eACPpC,EAAMiC,UAAUG,cADV,CAETM,KAAMnD,EAAM4J,OAAOrK,QAEvB+D,eAAe,eACR7C,EAAMiC,UAAUY,eADT,CAEVE,GAAIwB,KAAKyQ,OACHzV,EAAM4J,OAAOrK,MACXkB,EAAMiC,UAAUG,cAAcE,KAC9B,SAKpB8G,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLhC,MAAOkB,EAAMiC,UAAUG,cAAcO,IACrC1D,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIG,cAAc,eACPpC,EAAMiC,UAAUG,cADV,CAETO,KAAMpD,EAAM4J,OAAOrK,YAI/BsK,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLhC,MAAOkB,EAAMiC,UAAUG,cAAcQ,IACrC3D,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIG,cAAc,eACPpC,EAAMiC,UAAUG,cADV,CAETQ,KAAMrD,EAAM4J,OAAOrK,YAI/BsK,YAAY,MACZjL,OAAO,WAEX,8BAGJ,6BACA,6BAEA,kBAACoN,GAAA,EAAD,CAAMtM,UAAWN,EAAQwM,MACrB,6BADJ,aAGI,6BACA,kBAAC5F,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,eACNZ,UAAWN,EAAQgG,OACpB,IACkC,EAApC3E,EAAMiC,UAAUG,cAAcI,IAC/B,kBAAC+C,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,2BACNZ,UAAWN,EAAQgG,OACpB,IACkC,EAApC3E,EAAMiC,UAAUG,cAAcO,IAC/B,kBAACtC,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,8BAEJ,kBAACgF,GAAA,EAAD,CAAMxF,MAAM,UAAUF,MAAM,eAAKZ,UAAWN,EAAQgG,OAAS,IACxB,EAApC3E,EAAMiC,UAAUG,cAAcQ,IAC/B,kBAAC2C,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,eACNZ,UAAWN,EAAQgG,OACpB,IACkC,EAApC3E,EAAMiC,UAAUG,cAAcG,IAC/B,6BACA,8BAEJ,+BCrUN9E,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFO,MAAO,OACPmR,gBAAiB5R,EAAM6R,QAAQzL,WAAWkH,OAE9CnE,MAAO,CACH1I,MAAO,OAEX4I,gBAAiB,CACbC,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,QAEXsG,KAAM,CACFtG,MAAO,OAEX0O,OAAQ,CACJ1O,MAAO,OAEX8W,KAAM,CACF9W,MAAO,QAEXsS,KAAM,CACFtS,MAAO,aAKb+W,GAAsC,SAACnV,GACzC,IAAMrB,EAAUlB,KAD6C,EAE3BmB,IAAMC,SACpCmB,EAAMoK,IAAIhC,gBAH+C,mBAEtDgN,EAFsD,KAE3CC,EAF2C,OAKnBzW,IAAMC,SAC5CmB,EAAMoK,IAAI/B,oBAN+C,mBAKtDiN,EALsD,KAKvCC,EALuC,KAS7D,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACxL,EAAA,EAAD,CACI/K,UAAWN,EAAQ+F,KACnB+Q,QAAS,EACT/V,UAAU,KACV+K,MAAM,OAELzK,EAAMoK,IAAIpC,WAEf,kBAACgC,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SACvCjK,EAAMoK,IAAInC,YAEf,kBAAC+B,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SACvCjK,EAAMoK,IAAIlC,WAEf,kBAAC8B,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SACxC,kBAACf,GAAA,EAAD,CACI9D,GAAG,OACHvF,MAAM,OACNiB,KAAK,SACLhC,MAAOsW,EACPnW,UAAWN,EAAQqI,gBACnB1H,SAAU,SAACC,GACoB,KAAvBA,EAAM4J,OAAOrK,MAKbkB,EAAM0V,mBACF1V,EAAMoK,IAAI9B,aACNtI,EAAMoK,IAAI/B,qBACT9I,EAAM4J,OAAOrK,OAClB,KAEHS,EAAM4J,OAAOrK,OAAS,GAEvBuW,GAAc9V,EAAM4J,OAAOrK,OAZ3BuW,EAAa,KAcrBM,OAAQ,SACJpW,GAKIS,EAAM0V,mBACF1V,EAAMoK,IAAI9B,aACNtI,EAAMoK,IAAI/B,qBACT9I,EAAM4J,OAAOrK,OAClB,IAGJkB,EAAM4V,kBACF5V,EAAMoK,IAAIpC,WACTzI,EAAM4J,OAAOrK,QAG1BsK,YAAY,OACZjL,OAAO,YAGf,kBAAC6L,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SACxC,kBAACf,GAAA,EAAD,CACI9D,GAAG,WACHvF,MAAM,WACNiB,KAAK,SACLhC,MAAOwW,EACPrW,UAAWN,EAAQqI,gBACnB1H,SAAU,SAACC,GACoB,KAAvBA,EAAM4J,OAAOrK,MAKbkB,EAAM0V,mBACF1V,EAAMoK,IAAI9B,aACNtI,EAAMoK,IAAIhC,iBACT7I,EAAM4J,OAAOrK,OAClB,KAEHS,EAAM4J,OAAOrK,OAAS,GAEvByW,GAAkBhW,EAAM4J,OAAOrK,OAZ/BuW,EAAa,KAcrBM,OAAQ,SACJpW,GAKIS,EAAM0V,mBACF1V,EAAMoK,IAAI9B,aACNtI,EAAMoK,IAAIhC,iBACT7I,EAAM4J,OAAOrK,OAClB,KAEHS,EAAM4J,OAAOrK,OAAS,GAEvBkB,EAAM6V,sBACF7V,EAAMoK,IAAIpC,WACTzI,EAAM4J,OAAOrK,QAG1BsK,YAAY,WACZjL,OAAO,cA0DZsR,GAnDsB,SAACzP,GAClC,IAAMrB,EAAUlB,KAEhB,OACI,yBAAKwB,UAAWN,EAAQd,MACpB,kBAACgM,EAAA,EAAD,CAAO5K,UAAWN,EAAQmI,MAAOgP,KAAK,SAClC,kBAAChM,EAAA,EAAD,CAAW7K,UAAWN,EAAQuW,MAC1B,kBAACnL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW/K,UAAWN,EAAQ+F,KAAM+Q,QAAS,GAA7C,SAGA,kBAACzL,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SAA5C,SAGA,kBAACD,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SAA5C,QAGA,kBAACD,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SAA5C,QAGA,kBAACD,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SAA5C,cAMPjK,EAAMkC,OAAOiI,KAAI,SAAAC,GACd,GAAW,MAAPA,EAEJ,OACI,kBAACF,EAAA,EAAD,CAAWjL,UAAWN,EAAQ+R,KAAMrG,IAAKD,EAAIpC,WACzC,kBAAC+B,EAAA,EAAD,KACI,kBAAC,GAAD,CACI6L,kBAAmB5V,EAAM4V,kBACzBC,sBACI7V,EAAM6V,sBAEVzL,IAAKA,EACLsL,mBACI1V,EAAM0V,6BC3LxCjY,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFO,MAAO,OACPmR,gBAAiB5R,EAAM6R,QAAQzL,WAAWkH,OAE9CnE,MAAO,CACH1I,MAAO,OAEX4I,gBAAiB,CACbC,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,QAEXsG,KAAM,CACFtG,MAAO,OAEX0O,OAAQ,CACJ1O,MAAO,OAEX8W,KAAM,CACF9W,MAAO,QAEXsS,KAAM,CACFtS,MAAO,aAIb+W,GAAsC,SAACnV,GACzC,IAAMrB,EAAUlB,KAD6C,EAE3BmB,IAAMC,SACpCmB,EAAMoK,IAAIhC,gBAH+C,mBAEtDgN,EAFsD,KAE3CC,EAF2C,OAKnBzW,IAAMC,SAC5CmB,EAAMoK,IAAI/B,oBAN+C,mBAKtDiN,EALsD,KAKvCC,EALuC,KAS7D,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACxL,EAAA,EAAD,CACI/K,UAAWN,EAAQ+F,KACnB+Q,QAAS,EACT/V,UAAU,KACV+K,MAAM,OAELzK,EAAMoK,IAAIpC,WAEf,kBAACgC,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SACvCjK,EAAMoK,IAAInC,YAEf,kBAAC+B,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SACvCjK,EAAMoK,IAAIlC,WAEf,kBAAC8B,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SACxC,kBAACf,GAAA,EAAD,CACI9D,GAAG,OACHvF,MAAM,OACNiB,KAAK,SACLhC,MAAOsW,EACPnW,UAAWN,EAAQqI,gBACnB1H,SAAU,SAACC,GAEHS,EAAM0V,mBACF1V,EAAMoK,IAAI9B,aACNtI,EAAMoK,IAAI/B,qBACT9I,EAAM4J,OAAOrK,OAClB,KAEHS,EAAM4J,OAAOrK,OAAS,GAEvBuW,GAAc9V,EAAM4J,OAAOrK,QAEnC6W,OAAQ,SACJpW,GAKIS,EAAM0V,mBACF1V,EAAMoK,IAAI9B,aACNtI,EAAMoK,IAAI/B,qBACT9I,EAAM4J,OAAOrK,OAClB,IAGJkB,EAAM4V,kBACF5V,EAAMoK,IAAIpC,WACTzI,EAAM4J,OAAOrK,QAG1BsK,YAAY,OACZjL,OAAO,YAGf,kBAAC6L,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SACxC,kBAACf,GAAA,EAAD,CACI9D,GAAG,WACHvF,MAAM,WACNiB,KAAK,SACLhC,MAAOwW,EACPrW,UAAWN,EAAQqI,gBACnB1H,SAAU,SAACC,GAEHS,EAAM0V,mBACF1V,EAAMoK,IAAI9B,aACNtI,EAAMoK,IAAIhC,iBACT7I,EAAM4J,OAAOrK,OAClB,KAEHS,EAAM4J,OAAOrK,OAAS,GAEvByW,GAAkBhW,EAAM4J,OAAOrK,QAEvC6W,OAAQ,SACJpW,GAKIS,EAAM0V,mBACF1V,EAAMoK,IAAI9B,aACNtI,EAAMoK,IAAIhC,iBACT7I,EAAM4J,OAAOrK,OAClB,KAEHS,EAAM4J,OAAOrK,OAAS,GAEvBkB,EAAM6V,sBACF7V,EAAMoK,IAAIpC,WACTzI,EAAM4J,OAAOrK,QAG1BsK,YAAY,WACZjL,OAAO,cAOZ,SAASsR,GAAWzP,GAC/B,IAAMrB,EAAUlB,KAEhB,OACI,yBAAKwB,UAAWN,EAAQd,MACpB,kBAACgM,EAAA,EAAD,CAAO5K,UAAWN,EAAQmI,MAAOgP,KAAK,SAClC,kBAAChM,EAAA,EAAD,CAAW7K,UAAWN,EAAQuW,MAC1B,kBAACnL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW/K,UAAWN,EAAQ+F,KAAM+Q,QAAS,GAA7C,SAGA,kBAACzL,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SAA5C,SAGA,kBAACD,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SAA5C,SAIJ,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SAA5C,QAGA,kBAACD,EAAA,EAAD,CAAW/K,UAAWN,EAAQmO,OAAQ7C,MAAM,SAA5C,cAMPjK,EAAMkC,OAAOiI,KAAI,SAAAC,GACd,GAAW,MAAPA,EAEJ,OACI,kBAACF,EAAA,EAAD,CAAWjL,UAAWN,EAAQ+R,KAAMrG,IAAKD,EAAIpC,WACzC,kBAAC+B,EAAA,EAAD,KACI,kBAAC,GAAD,CACI6L,kBAAmB5V,EAAM4V,kBACzBC,sBACI7V,EAAM6V,sBAEVzL,IAAKA,EACLsL,mBACI1V,EAAM0V,4BCjM/B,SAASjG,GAAWzP,GAC/B,OACI,6BAEI,kBAACK,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,kBAAC,GAAD,CACI2B,OAAQlC,EAAMkC,OACdlB,aAAchB,EAAMgB,aACpB6U,sBAAuB7V,EAAM6V,sBAC7BD,kBAAmB5V,EAAM4V,kBACzBF,mBAAoB1V,EAAM0V,sBAKlC,kBAACrV,EAAA,EAAD,CAAQI,QAAM,EAACF,eAAe,OAC1B,kBAAC,GAAD,CACI2B,OAAQlC,EAAMkC,OACdlB,aAAchB,EAAMgB,aACpB6U,sBAAuB7V,EAAM6V,sBAC7BD,kBAAmB5V,EAAM4V,kBACzBF,mBAAoB1V,EAAM0V,uBC7B9C,IAAMjY,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTmY,KAAM,CACFjY,SAAU,SACVkY,IAAK,OACLjY,OAAQ,GAEZoN,KAAK,aACDhN,OAAQ,EACR6X,IAAK,GACL9X,MAAO,OACP+X,OAAQ,OACRhY,KAAM,GACNH,SAAU,QACVM,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MACP4X,IAAK,OACL9X,MAAO,GACP+X,OAAQ,GACRhY,KAAM,SAGd0G,KAAM,CACFqG,UAAW,OACXkL,aAAc,OACdjP,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,aA6BV6X,GAnBsB,SAACnW,GAClC,IAAMrB,EAAUlB,KAChB,OACI,kBAAC8N,GAAA,EAAD,CAAMtM,UAAWN,EAAQoX,MACrB,kBAACxQ,GAAA,EAAD,CAAMxF,MAAM,UAAUF,MAAM,aAAaZ,UAAWN,EAAQgG,OAAS,IACpE3E,EAAMoW,UACP,kBAAC/V,EAAA,EAAD,CAAQI,QAAM,EAACF,eAAe,OAC1B,8BAEJ,kBAACgF,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,iBACNZ,UAAWN,EAAQgG,OACpB,IACF3E,EAAMqW,cACP,+BChDN5Y,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACT8M,OAAQ,CACJvM,OAAQR,EAAMY,QAAQ,IAE1BoM,MAAO,CACHC,QAAS,QAEbC,UAAW,CACP5D,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,OAEX4I,gBAAiB,CACbC,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,OAEX2M,MAAO,CACHC,UAAW,IAEfqI,KAAM,CACFjV,MAAO,KAEX6M,MAAO,CACH9M,OAAQ,OACR+M,QAASvN,EAAMY,QAAQ,EAAG,GAC1BH,MAAO,OAEX+M,KAAM,CACFhN,OAAQ,OACRC,MAAO,OAEXD,OAAQ,CACJA,OAAQR,EAAMY,QAAQ,IAE1BoG,KAAM,CACFqG,UAAW,OACXkL,aAAc,OACdjP,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,aAsBnBgY,GAAa,CACf,CAAC,eAAM,SACP,CAAC,eAAM,UACP,CAAC,eAAM,OACP,CAAC,eAAM,aACP,CAAC,eAAM,WAGLC,GAAgB,SAACzV,GACnB,MAAa,iBAATA,EAAsB,EACb,iBAATA,EAAsB,EACb,iBAATA,EAAsB,EACb,iBAATA,EAAsB,EACb,iBAATA,EAAsB,GAClB,GAGN0V,GAAgB,SAClB9R,EACA5F,EACA2X,EACAxU,EACAyU,EACA1V,GAEA,KAAIlC,EAAQ,GAAK2X,GAAe,GAAhC,CACA,IAAMlO,EAAYC,KAAKC,MAAMD,KAAKE,UAAUzG,EAAUC,SAEhDyG,EACkB,MAApBJ,EAAUK,QAAuC,IAArBL,EAAUK,YAChCC,EACAN,EAAUO,MACN,SAACC,GAAD,OAA8BA,EAAEf,YAActD,KAG9C,MAAViE,IACA+N,EAAU/N,EAAON,mBAAqBvJ,EACrC6J,EAAOP,eAAiBtJ,EAC7B6J,EAAOV,WACHU,EAAOL,aAAeK,EAAON,mBAAqBM,EAAOP,eAC7DpH,EAAa,eACNiB,EADK,CAERC,OAAQqG,QAuHDsM,GAnHkB,SAAC7U,GAC9B,IAAMrB,EAAUlB,KAD+B,EAEbmB,IAAMC,SACpCyX,GAAWnM,KAAI,SAAApB,GACX,OAAO,MAJgC,mBAExC4N,EAFwC,KAE7BC,EAF6B,KAQzClB,EAAqB,SAACzN,EAAoB4O,GAC5C,QAAI5O,EAAa,GAAKA,EAAa,SAC/B4O,GAAUC,KAA2B,OACpCD,GAAUE,KAA+B,KAsB5CD,EAAwB,WAC1B,OAA2C,GAApC9W,EAAMiC,UAAUG,cAAcQ,KAlBC,IAAlC5C,EAAMiC,UAAUC,OAAO0G,OAAqB,EACzC5I,EAAMiC,UAAUC,OAClBiI,KAAI,SAAApB,GAAC,OAAIA,EAAEX,kBACX6E,QAAO,SAASC,EAAOC,GACpB,OAAOD,EAAQC,OAiBrB4J,EAA4B,WAC9B,OAA2C,GAApC/W,EAAMiC,UAAUG,cAAcO,KAbC,IAAlC3C,EAAMiC,UAAUC,OAAO0G,OAAqB,EACzC5I,EAAMiC,UAAUC,OAClBiI,KAAI,SAAApB,GAAC,OAAIA,EAAEV,sBACX4E,QAAO,SAASC,EAAOC,GACpB,OAAOD,EAAQC,OAYrB6J,EAAY,SAAClW,GACf,IAAMiI,EAAI/I,EAAMiC,UAAUC,OAAO+U,QAAO,SAAArI,GAAC,OAAIA,EAAE1G,YAAcpH,KAC7D,OAAS,MAALiI,EAAkB,CAzGnB,CACHf,UAAW,GACXC,WAAY,EACZC,UAAW,GACXC,aAAa,EACbC,eAAgB,EAChBC,mBAAoB,EACpBC,aAAc,IAmGPS,GAGX,OACI,kBAACC,EAAA,EAAD,CAAO/J,UAAWN,EAAQsM,OACtB,gDACA,kBAAC,GAAD,CACImL,UAAWU,IACXT,cAAeU,MAGlBT,GAAWnM,KAAI,SAAA+M,GACZ,OACI,yBAAK7M,IAAK6M,EAAQ,IACd,6BAEA,kBAACjX,EAAA,EAAD,CACIb,QAAQ,YACRc,QAAS,WACL,IAAMiX,EAAkB,eAAQR,GAChCQ,EAAQZ,GAAcW,EAAQ,MAAQC,EAClCZ,GAAcW,EAAQ,KAE1BN,EAAaO,KAGhBD,EAAQ,IAGb,6BACA,kBAAC3L,GAAA,EAAD,KACKoL,EAAUJ,GAAcW,EAAQ,MAC7B,kBAAC,GAAD,CACIhV,OAAQ8U,EAAUE,EAAQ,IAC1BlW,aAAchB,EAAMgB,aACpB6U,sBAAuB,SACnBnR,EACA5F,GAEA0X,GACI9R,EACA5F,EACAiY,IACA/W,EAAMiC,WACN,EACAjC,EAAMgB,eAGd4U,kBAAmB,SACflR,EACA5F,GAEA0X,GACI9R,EACA5F,EACAgY,IACA9W,EAAMiC,WACN,EACAjC,EAAMgB,eAGd0U,mBAAoBA,WCrNlDjY,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACT8M,OAAQ,CACJvM,OAAQR,EAAMY,QAAQ,IAE1BoM,MAAO,CACHC,QAAS,QAEbC,UAAW,CACP5D,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,OAEX0M,mBAAoB,CAChB7D,WAAY,EACZ3I,YAAa,EACbF,MAAO,OAEX4I,gBAAiB,CACbC,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,OACbF,MAAO,OAEX2M,MAAO,CACHC,UAAW,IAEfqI,KAAM,CACFjV,MAAO,KAEX6M,MAAO,CACH9M,OAAQ,OACR+M,QAASvN,EAAMY,QAAQ,EAAG,GAC1BH,MAAO,OAEX+M,KAAM,CACFhN,OAAQ,OACRC,MAAO,OAEXD,OAAQ,CACJA,OAAQR,EAAMY,QAAQ,IAE1BoG,KAAM,CACFsC,WAAYtJ,EAAMY,QAAQ,GAC1BD,YAAa,aAgMVuW,GAtLkB,SAAC7U,GAC9B,IAAMrB,EAAUlB,KAD+B,EAErBmB,IAAMC,SAAS,GAFM,6BAI/C,OACI,kBAACmK,EAAA,EAAD,CAAO/J,UAAWN,EAAQsM,OACtB,gDACA,6BACA,kBAAC/B,GAAA,EAAD,CACI9D,GAAG,gBACHvF,MAAM,iBACNf,MAAOkB,EAAMiC,UAAUY,eAAeC,cACtC7D,UAAWgK,aAAKtK,EAAQkM,UAAWlM,EAAQoM,OAC3CzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIY,eAAe,eACR7C,EAAMiC,UAAUY,eADT,CAEVC,cAAevD,EAAM4J,OAAOrK,YAIxCX,OAAO,UAEX,6BACA,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,aACHvF,MAAM,aACNwL,WAAS,EACTC,QAAQ,IACRxM,MAAOkB,EAAMiC,UAAUE,oBACvB7C,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIE,oBAAqB5C,EAAM4J,OAAOrK,UAG1CG,UAAWN,EAAQkM,UACnB1M,OAAO,WAEX,kBAACoN,GAAA,EAAD,CAAMtM,UAAWN,EAAQwM,MACrB,6BADJ,mBAGI,6BACA,kBAAC5F,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,KACNZ,UAAWN,EAAQgG,OACpB,IACF3E,EAAMiC,UAAUY,eAAeE,GAChC,kBAACwC,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,KACNZ,UAAWN,EAAQgG,OACpB,IACF3E,EAAMiC,UAAUY,eAAeG,GAChC,kBAACuC,GAAA,EAAD,CACIxF,MAAM,UACNF,MAAM,MACNZ,UAAWN,EAAQgG,OACpB,IACF3E,EAAMiC,UAAUY,eAAeI,IAChC,6BACA,8BAEJ,6BAEA,kBAACsI,GAAA,EAAD,CAAMtM,UAAWN,EAAQwM,MACrB,kBAACjC,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNf,MAAOkB,EAAMiC,UAAUY,eAAeM,IACtClE,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIY,eAAe,eACR7C,EAAMiC,UAAUY,eADT,CAEVM,IAAK5D,EAAM4J,OAAOrK,YAI9BsK,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNiB,KAAK,SACLhC,MAAOkB,EAAMiC,UAAUY,eAAeO,IACtCnE,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIY,eAAe,eACR7C,EAAMiC,UAAUY,eADT,CAEVO,KAAM7D,EAAM4J,OAAOrK,YAI/BsK,YAAY,MACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,MACHvF,MAAM,MACNf,MAAOkB,EAAMiC,UAAUY,eAAeQ,IACtCpE,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIY,eAAe,eACR7C,EAAMiC,UAAUY,eADT,CAEVQ,IAAK9D,EAAM4J,OAAOrK,YAI9BsK,YAAY,MACZjL,OAAO,WAEX,6BAEA,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,SACHvF,MAAM,SACNiB,KAAK,SACLhC,MAAOkB,EAAMiC,UAAUY,eAAeS,OACtCrE,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIY,eAAe,eACR7C,EAAMiC,UAAUY,eADT,CAEVS,QAAS/D,EAAM4J,OAAOrK,YAIlCsK,YAAY,SACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,SACHvF,MAAM,SACNiB,KAAK,SACLhC,MAAOkB,EAAMiC,UAAUY,eAAeU,OACtCtE,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIY,eAAe,eACR7C,EAAMiC,UAAUY,eADT,CAEVU,QAAShE,EAAM4J,OAAOrK,YAIlCsK,YAAY,SACZjL,OAAO,WAEX,kBAAC+K,GAAA,EAAD,CACI9D,GAAG,SACHvF,MAAM,SACNf,MAAOkB,EAAMiC,UAAUY,eAAeW,OACtCvE,UAAWgK,aAAKtK,EAAQmM,mBAAoBnM,EAAQoM,OACpDzL,SAAU,SAACC,GACPS,EAAMgB,aAAN,eACOhB,EAAMiC,UADb,CAEIY,eAAe,eACR7C,EAAMiC,UAAUY,eADT,CAEVW,OAAQjE,EAAM4J,OAAOrK,YAIjCsK,YAAY,SACZjL,OAAO,WAEX,8BAGJ,+B,UCnONV,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTqN,MAAM,aACF9M,OAAQ,OACR+M,QAASvN,EAAMY,QAAQ,EAAG,GAC1BH,MAAO,OACNT,EAAMiJ,YAAYC,GAAG,MAAQ,CAC1BzI,MAAO,MAGfP,KAAM,CACFM,OAAQ,OACRC,MAAO,OAEXsM,OAAQ,CACJvM,OAAQ,OACRG,YAAaX,EAAMY,QAAQ,IAE/B6Y,aAAc,CACVjZ,OAAQ,OACR6M,UAAWrN,EAAMY,QAAQ,GACzB2X,aAAcvY,EAAMY,QAAQ,SAsDxC,IAAMkJ,GAAW,SAACD,EAAcvF,GAC5B,IAAMsG,EAAYtG,EAAUC,OAAO+U,QAC/B,SAAAlO,GAAC,OAAIA,EAAEf,YAAcR,EAAMQ,aAE/B,OAAO,eACA/F,EADP,CAEIC,OAAO,GAAD,mBAAMqG,GAAN,CAAiBf,OAoB/B,IAmLeqN,GAnLkB,SAAC7U,GAC9B,IAAMrB,EAAUlB,KAD+B,EAEbmB,IAAMC,SA5EjC,CACHqD,OAAQmV,GAAcnV,OAAOiI,KAAI,SAAApB,GAC7B,MAAO,CACHf,UAAWe,EAAEf,UACbC,WAAYc,EAAEd,WACdC,UAAWa,EAAEb,UACbC,aAAa,EACbC,eAAgB,EAChBC,mBAAoB,EACpBC,aAAcS,EAAEd,eAIxB9F,oBAAqB,GACrBC,cAAe,CACXC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GAETC,eAAgB,CACZC,cAAe,GACfC,GAAI,EACJC,GAAI,EACJC,IAAK,EACLC,YAAa,GACbC,IAAK,GACLC,IAAK,EACLC,IAAK,GACLC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,MAuC+B,mBAExCvB,EAFwC,KAE7BjB,EAF6B,OAGXpC,IAAMC,SAAS,GAHJ,mBAGxCyY,EAHwC,KAG5BC,EAH4B,OAIjB3Y,IAAMC,SAAS,IAAI2Y,KAJF,mBAIxCC,EAJwC,KAI/BC,EAJ+B,KAKzCC,EAtCC,CACH,4BACA,iBACA,+BAwIJ,OACI,kBAAC3O,EAAA,EAAD,CAAO/J,UAAWN,EAAQsM,OACtB,kBAAC2M,GAAA,EAAD,CAASN,WAAYA,GAChBK,EAAMxN,KAAI,SAACtK,EAAOgY,GAIf,OACI,kBAACC,GAAA,EAAD,eAAMzN,IAAKxK,GAJ4B,IAKnC,kBAACkY,GAAA,EAJ0C,GAIflY,QAM5B,IAAfyX,GACG,kBAACU,GAAD,CACI/V,UAAWA,EACXjB,aAAcA,IAGN,IAAfsW,GACG,kBAACW,GAAD,CACIhW,UAAWA,EACXjB,aAAcA,IAGN,IAAfsW,GACG,kBAACY,GAAD,CACIjW,UAAWA,EACXjB,aAAcA,IAItB,6BACKsW,IAAeK,EAAM/O,OAClB,6BAhFS,SAAC5H,IAPF,SAACA,GACrBiB,EAAUC,OACL+U,QAAO,SAAArI,GAAC,OAAyB,IAArBA,EAAExG,gBAAiD,IAAzBwG,EAAEvG,sBACxC8P,SAAQ,SAAAvJ,GAAC,OAAKA,EAAEzG,aAAc,KACnCnH,EAAa,eAAKiB,IAIlBmW,CAAgBpX,GAChB,IAAMuB,EAAMN,EAAUG,cAAcG,IAC9BI,EAAMV,EAAUG,cAAcO,IAC9BC,EAAMX,EAAUG,cAAcQ,IAEhCmS,EAAetN,GACf,CACIO,UAAW,eACXC,WAAkB,EAAN1F,EACZ2F,UAAW,eACXC,aAAa,EACbC,eAAgB,EAChBC,mBAAoB,EACpBC,aAAoB,EAAN/F,GAElBkF,GACI,CACIO,UAAW,2BACXC,WAAkB,EAANtF,EACZuF,UAAW,eACXC,aAAa,EACbC,eAAgB,EAChBC,mBAAoB,EACpBC,aAAoB,EAAN3F,GAElB8E,GACI,CACIO,UAAW,eACXC,WAAkB,EAANrF,EACZsF,UAAW,eACXC,aAAa,EACbC,eAAgB,EAChBC,mBAAoB,EACpBC,aAAoB,EAAN1F,GAElBX,KAKZjB,EAAa,eAAKiB,EAAN,CAAiBC,OAAQ6S,EAAa7S,UAwCjCmW,CAAiBrY,EAAMgB,cACxB,kBAAC7B,EAAA,EAAD,CAAYF,UAAWN,EAAQyY,cAA/B,0CAKJ,6BACI,kBAACjY,EAAA,EAAD,CAAYF,UAAWN,EAAQyY,cAtKvD,SAAwBkB,GACpB,OAAQA,GACJ,KAAK,EACD,MAAO,WACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,aACX,QACI,MAAO,gBA8JUC,CAAejB,IAEpB,6BACI,kBAACrX,EAAA,EAAD,CACIuY,SAAyB,IAAflB,EACVpX,QAzG5B,WACIqX,GAAc,SAAAkB,GAAc,OAAIA,EAAiB,MAyGzBxZ,UAAWN,EAAQ+L,QAHvB,QAOA,kBAACzK,EAAA,EAAD,CACIb,QAAQ,YACRW,MAAM,UACNG,QAzJ5B,WACI,IAAMsC,EAAMP,EAAUG,cAAcI,IAC9BuS,EAAetN,GACjB,CACIO,UAAW,eACXC,WAAkB,EAANzF,EACZ0F,UAAW,eACXC,aAAa,EACbC,eAAgB,EAChBC,mBAAoB,EACpBC,aAAoB,EAAN9F,GAElBP,GAGJjB,EAAa+T,GAEb/T,EAAa,eACN+T,EADK,CAERlS,eAAe,eACRkS,EAAalS,eADN,CAEVE,IACKgS,EAAa3S,cAAcE,IACxByS,EAAa3S,cAAcM,KAC/B,EACJM,GAAI+R,EAAa3S,cAAcG,IAC/BU,IAAsC,EAAjC8R,EAAa3S,cAAcG,SAIxC,IAlCmB+V,EAkCfI,EAAajB,EAlCEa,EAmCDhB,EAlCXG,EAAQkB,IAAIL,KAmCfI,EAAa,IAAIlB,IAAIkB,EAAWE,WACrBC,OAAOvB,GAGtBC,GAAc,SAAAkB,GAAc,OAAIA,EAAiB,KACjDf,EAAWgB,IAqHazZ,UAAWN,EAAQ+L,QAElB4M,IAAeK,EAAM/O,OAAS,EACzB,SACA,aC5QvBxB,gBAXS,SAACxF,OAGE,SAACyF,GACxB,MAAO,CACHrG,aAAc,SAAC2C,GACX0D,EAAS1G,EAAwBK,aAAa,CAAC2C,eAK5CyD,CAGbyN,ICuBaiE,I,OAhCO,WAAO,IAAD,EACAla,YAAe,GADf,mBACjBwB,EADiB,KACXD,EADW,KAGxB,OACI,uBAAKlB,UAAU,OACX,gBAAC,IAAD,KACI,0BAAQA,UAAU,cACd,gBAAC,EAAD,CAEImB,KAAMA,EACND,QAASA,KAIjB,uBAAKlB,UAAU,WAAWmG,GAAG,YACzB,gBAAC,IAAD,CAAOgN,OAAK,EAACC,KAAK,IAAI3S,UAAWwU,KAEjC,gBAAC,IAAD,CACI7B,KAAK,QACL0G,OAAQ,kBACJ,gBAACC,GAAD,CAAMnH,WAAYzR,EAAMwR,cAAezR,OAG/C,gBAAC,IAAD,CAAOiS,OAAK,EAACC,KAAK,SAAS3S,UAAW6T,KACtC,gBAAC,IAAD,CAAOnB,OAAK,EAACC,KAAK,WAAW3S,UAAW4U,KACxC,gBAAC,IAAD,CAAOlC,OAAK,EAACC,KAAK,UAAU3S,UAAWmV,UCxBrDoE,GAAcC,QACa,cAA7BhJ,OAAOiJ,SAASC,UAEiB,UAA7BlJ,OAAOiJ,SAASC,UAEhBlJ,OAAOiJ,SAASC,SAAS3N,MACrB,2DA8CZ,SAAS4N,GAAgBC,EAAe5G,GACpC6G,UAAUC,cACLC,SAASH,GACTlT,MAAK,SAAAsT,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBhY,QACb2X,UAAUC,cAAcO,YAIxBrT,QAAQC,IACJ,iHAKA+L,GAAUA,EAAOsH,UACjBtH,EAAOsH,SAASN,KAMpBhT,QAAQC,IAAI,sCAGR+L,GAAUA,EAAOuH,WACjBvH,EAAOuH,UAAUP,WAOxClT,OAAM,SAAAC,GACHC,QAAQD,MAAM,4CAA6CA,MC9FvE,IAAMyT,GAAQC,YAAY1Y,GAE1B2Y,IAASrB,OACL,kBAAC,IAAD,CAAUmB,MAAOA,IACb,kBAAC,GAAD,OAEJ5J,SAASiC,eAAe,SDWrB,SAAkBG,GACrB,GAA6C,kBAAmB6G,UAAW,CAMvE,GAJkB,IAAIpJ,IACjByC,GACD1C,OAAOiJ,SAAS1I,MAENjN,SAAW0M,OAAOiJ,SAAS3V,OAIrC,OAGJ0M,OAAOd,iBAAiB,QAAQ,WAC5B,IAAMkK,EAAK,UAAM1G,GAAN,sBAEPqG,KAgEhB,SAAiCK,EAAe5G,GAE5CvM,MAAMmT,GACDlT,MAAK,SAAAG,GAEF,IAAM8T,EAAc9T,EAAS+T,QAAQC,IAAI,gBAEjB,MAApBhU,EAASiU,QACO,MAAfH,IAC0C,IAAvCA,EAAYI,QAAQ,cAGxBlB,UAAUC,cAAckB,MAAMtU,MAAK,SAAAsT,GAC/BA,EAAaiB,aAAavU,MAAK,WAC3B8J,OAAOiJ,SAASyB,eAKxBvB,GAAgBC,EAAO5G,MAG9BlM,OAAM,WACHE,QAAQC,IACJ,oEAtFAkU,CAAwBvB,EAAO5G,GAI/B6G,UAAUC,cAAckB,MAAMtU,MAAK,WAC/BM,QAAQC,IACJ,iHAMR0S,GAAgBC,EAAO5G,OCpCvC8G,I","file":"static/js/main.9df930cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PM_Desine.02fe71ee.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport PalletIcon from '@material-ui/icons/ColorLens';\r\nimport FavoriteIcon from '@material-ui/icons/OfflinePin';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            position: 'fixed',\r\n            zIndex: 1,\r\n        },\r\n        navBar: {\r\n            position: 'absolute',\r\n            left: 0,\r\n            right: 0,\r\n            margin: 'auto',\r\n            width: '50%',\r\n            zIndex: 2,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        title: {\r\n            //flexGrow: 1,\r\n        },\r\n        navBarAction: {\r\n            width: '25%',\r\n        },\r\n    })\r\n);\r\n\r\nconst NavBar: React.SFC = () => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('recents');\r\n\r\n    function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\r\n        setValue(newValue);\r\n    }\r\n\r\n    return (\r\n        <AppBar className={classes.root}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Palletmaster\r\n                </Typography>\r\n\r\n                <BottomNavigation\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    className={classes.navBar}\r\n                >\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/home\"\r\n                        label=\"Pallet\"\r\n                        value=\"pallet\"\r\n                        icon={<PalletIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/login\"\r\n                        label=\"Login\"\r\n                        value=\"login\"\r\n                        icon={<FavoriteIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/setting\"\r\n                        label=\"Setting\"\r\n                        value=\"setting\"\r\n                        icon={<SettingIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/making\"\r\n                        label=\"Create\"\r\n                        value=\"create\"\r\n                        icon={<CreateIcon />}\r\n                    />\r\n                </BottomNavigation>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport PalletIcon from '@material-ui/icons/ColorLens';\r\nimport FavoriteIcon from '@material-ui/icons/OfflinePin';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            position: 'fixed',\r\n            zIndex: 1,\r\n        },\r\n        navBar: {\r\n            position: 'absolute',\r\n            left: 0,\r\n            right: 0,\r\n            margin: 'auto',\r\n            width: '100%',\r\n            zIndex: 2,\r\n        },\r\n        title: {\r\n            //flexGrow: 1,\r\n        },\r\n        navBarAction: {\r\n            width: '20%',\r\n        },\r\n        icon: {\r\n            color: 'white',\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    setOpen: (open: boolean) => void;\r\n};\r\n\r\nconst NavBar: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('recents');\r\n\r\n    function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\r\n        setValue(newValue);\r\n    }\r\n\r\n    return (\r\n        <AppBar className={classes.root}>\r\n            <Toolbar>\r\n                <Button\r\n                    onClick={() => {\r\n                        props.setOpen(!props.open);\r\n                    }}\r\n                >\r\n                    <DehazeIcon className={classes.icon} />\r\n                </Button>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Palletmaster\r\n                </Typography>\r\n            </Toolbar>\r\n            <Toolbar>\r\n                <BottomNavigation\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    className={classes.navBar}\r\n                >\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/home\"\r\n                        label=\"Pallet\"\r\n                        value=\"pallet\"\r\n                        icon={<PalletIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/login\"\r\n                        label=\"Login\"\r\n                        value=\"login\"\r\n                        icon={<FavoriteIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/setting\"\r\n                        label=\"Setting\"\r\n                        value=\"setting\"\r\n                        icon={<SettingIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.navBarAction}\r\n                        component={Link}\r\n                        to=\"/making\"\r\n                        label=\"Create\"\r\n                        value=\"create\"\r\n                        icon={<CreateIcon />}\r\n                    />\r\n                </BottomNavigation>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport NavBar_PC from './NavBar_PC';\r\nimport NavBar_Mobile from './NavBar_Mobile';\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    setOpen: (open: boolean) => void;\r\n};\r\n\r\nconst NavBar: React.SFC<Props> = (props: Props) => {\r\n    return (\r\n        <div>\r\n            {/* タブレット以上なら隠す -- モバイル画面で表示 */}\r\n            <Hidden smUp implementation=\"css\">\r\n                <NavBar_Mobile open={props.open} setOpen={props.setOpen} />\r\n            </Hidden>\r\n\r\n            {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\r\n            <Hidden xsDown implementation=\"css\">\r\n                <NavBar_PC />\r\n            </Hidden>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import { setDiscordUrl, SetDiscordUrlAction } from './SetDiscordUrl';\r\nimport { setDiceUrl, SetDiceUrlAction } from './SetDiceUrl';\r\n\r\ntype Actions = SetDiscordUrlAction | SetDiceUrlAction;\r\n\r\nexport type State = {\r\n    discordUrl: string;\r\n    diceUrl: string;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        discordUrl: '',\r\n        diceUrl: '',\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_DISCORD_URL_SETTING':\r\n            return {\r\n                ...state,\r\n                discordUrl: action.payload.url,\r\n            };\r\n        case 'SET_DICE_URL_SETTING':\r\n            return {\r\n                ...state,\r\n                diceUrl: action.payload.url,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setDiscordUrl,\r\n    setDiceUrl,\r\n};\r\n","import { Action } from 'redux';\r\n\r\nexport type SetDiscordUrlPayload = {\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiscordUrlAction extends Action {\r\n    type: 'SET_DISCORD_URL_SETTING';\r\n    payload: SetDiscordUrlPayload;\r\n}\r\n\r\nexport const setDiscordUrl = (\r\n    payload: SetDiscordUrlPayload\r\n): SetDiscordUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DISCORD_URL_SETTING',\r\n    };\r\n};\r\n","import { Action } from 'redux';\r\n\r\nexport type SetDiceUrlPayload = {\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiceUrlAction extends Action {\r\n    type: 'SET_DICE_URL_SETTING';\r\n    payload: SetDiceUrlPayload;\r\n}\r\n\r\nexport const setDiceUrl = (payload: SetDiceUrlPayload): SetDiceUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DICE_URL_SETTING',\r\n    };\r\n};\r\n","import { setCharacter, SetCharacterAction } from './SetCharacter';\r\nimport { setSkills, SetSkillsAction } from './SetSkills';\r\nimport { setAbilityValues, SetAbilityValuesAction } from './SetAbilityValues';\r\nimport {\r\n    setCharacterInfos,\r\n    SetCharacterInfosAction,\r\n} from './SetCharacterInfos';\r\nimport { setCharacterName, SetCharacterNameAction } from './SetCharacterName';\r\nimport { setHP, SetHPAction } from './SetHP';\r\nimport { setMP, SetMPAction } from './SetMP';\r\nimport { setSAN, SetSANAction } from './SetSAN';\r\nimport {\r\n    setCharacterBackground,\r\n    SetCharacterBackgroundAction,\r\n} from './SetCharacterBackground';\r\n\r\ntype Actions =\r\n    | SetCharacterAction\r\n    | SetSkillsAction\r\n    | SetAbilityValuesAction\r\n    | SetCharacterInfosAction\r\n    | SetCharacterNameAction\r\n    | SetHPAction\r\n    | SetMPAction\r\n    | SetSANAction\r\n    | SetCharacterBackgroundAction;\r\n\r\ntype skill = {\r\n    skillName: string;\r\n    skillValue: number;\r\n    skillType: string;\r\n    skillUnique: boolean;\r\n    skillWorkValue: number;\r\n    skillInterestValue: number;\r\n    defaultValue: number;\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number;\r\n    CON: number;\r\n    POW: number;\r\n    DEX: number;\r\n    APP: number;\r\n    SIZ: number;\r\n    INT: number;\r\n    EDU: number;\r\n};\r\n\r\ntype characterInfo = {\r\n    characterName: string;\r\n    HP: number;\r\n    MP: number;\r\n    SAN: number;\r\n    damageBonus: string;\r\n    job: string;\r\n    age: number;\r\n    sex: string;\r\n    height: number;\r\n    weight: number;\r\n    origin: string;\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n};\r\n\r\nexport type State = {\r\n    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n    character: character;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        character: {\r\n            skills: [],\r\n            characterBackground: '',\r\n            abilityValues: {\r\n                STR: 0,\r\n                CON: 0,\r\n                POW: 0,\r\n                DEX: 0,\r\n                APP: 0,\r\n                SIZ: 0,\r\n                INT: 0,\r\n                EDU: 0,\r\n            },\r\n            characterInfos: {\r\n                characterName: '',\r\n                HP: 0,\r\n                MP: 0,\r\n                SAN: 0,\r\n                damageBonus: '',\r\n                job: '',\r\n                age: 0,\r\n                sex: '',\r\n                height: 0,\r\n                weight: 0,\r\n                origin: '',\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_CHARACTER':\r\n            return Object.assign({}, state, {\r\n                character: action.payload.chara,\r\n            });\r\n        case 'SET_SKILLS':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    skills: action.payload.skills,\r\n                },\r\n            };\r\n        case 'SET_ABILITY_VALUES':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    abilityValues: action.payload.abilityValues,\r\n                },\r\n            };\r\n        case 'SET_CHARACTER_INFOS':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    characterInfos: action.payload.characterInfos,\r\n                },\r\n            };\r\n        case 'SET_CHARACTER_NAME':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        characterName: action.payload.characterName,\r\n                    },\r\n                },\r\n            };\r\n        case 'SET_HP':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        HP: action.payload.hp,\r\n                    },\r\n                },\r\n            };\r\n        case 'SET_MP':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        MP: action.payload.mp,\r\n                    },\r\n                },\r\n            };\r\n        case 'SET_SAN':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        SAN: action.payload.san,\r\n                    },\r\n                },\r\n            };\r\n        case 'SET_CHARACTER_BACKGROUND':\r\n            return {\r\n                ...state,\r\n                character: {\r\n                    ...state.character,\r\n                    characterBackground: action.payload.background,\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setCharacter,\r\n    setSkills,\r\n    setAbilityValues,\r\n    setCharacterInfos,\r\n    setCharacterName,\r\n    setHP,\r\n    setMP,\r\n    setSAN,\r\n    setCharacterBackground,\r\n};\r\n","import { Action } from 'redux';\r\n\r\ntype skill = {\r\n    skillName: string;\r\n    skillValue: number;\r\n    skillType: string;\r\n    skillUnique: boolean;\r\n    skillWorkValue: number;\r\n    skillInterestValue: number;\r\n    defaultValue: number;\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number;\r\n    CON: number;\r\n    POW: number;\r\n    DEX: number;\r\n    APP: number;\r\n    SIZ: number;\r\n    INT: number;\r\n    EDU: number;\r\n};\r\n\r\ntype characterInfo = {\r\n    characterName: string;\r\n    HP: number;\r\n    MP: number;\r\n    SAN: number;\r\n    damageBonus: string;\r\n    job: string;\r\n    age: number;\r\n    sex: string;\r\n    height: number;\r\n    weight: number;\r\n    origin: string;\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n};\r\n\r\nexport type SetCharacterPayload = {\r\n    // todoを追加する時に必要なのはtodoの内容くらい\r\n    chara: character;\r\n};\r\n\r\nexport interface SetCharacterAction extends Action {\r\n    type: 'SET_CHARACTER';\r\n    payload: SetCharacterPayload;\r\n}\r\n\r\nexport const setCharacter = (\r\n    payload: SetCharacterPayload\r\n): SetCharacterAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_CHARACTER',\r\n    };\r\n};\r\n","import { Action } from 'redux';\n\ntype skill = {\n    skillName: string;\n    skillValue: number;\n    skillType: string;\n    skillUnique: boolean;\n    skillWorkValue: number;\n    skillInterestValue: number;\n    defaultValue: number;\n};\n\nexport type SetSkillsPayload = {\n    skills: skill[];\n};\n\nexport interface SetSkillsAction extends Action {\n    type: 'SET_SKILLS';\n    payload: SetSkillsPayload;\n}\n\nexport const setSkills = (payload: SetSkillsPayload): SetSkillsAction => {\n    return {\n        payload,\n        type: 'SET_SKILLS',\n    };\n};\n","import { Action } from 'redux';\n\ntype AbilityValues = {\n    STR: number;\n    CON: number;\n    POW: number;\n    DEX: number;\n    APP: number;\n    SIZ: number;\n    INT: number;\n    EDU: number;\n};\n\nexport type SetAbilityValuesPayload = {\n    // todoを追加する時に必要なのはtodoの内容くらい\n    abilityValues: AbilityValues;\n};\n\nexport interface SetAbilityValuesAction extends Action {\n    type: 'SET_ABILITY_VALUES';\n    payload: SetAbilityValuesPayload;\n}\n\nexport const setAbilityValues = (\n    payload: SetAbilityValuesPayload\n): SetAbilityValuesAction => {\n    return {\n        payload,\n        type: 'SET_ABILITY_VALUES',\n    };\n};\n","import { Action } from 'redux';\n\ntype CharacterInfos = {\n    characterName: string;\n    HP: number;\n    MP: number;\n    SAN: number;\n    damageBonus: string;\n    job: string;\n    age: number;\n    sex: string;\n    height: number;\n    weight: number;\n    origin: string;\n};\n\nexport type SetCharacterInfosPayload = {\n    // todoを追加する時に必要なのはtodoの内容くらい\n    characterInfos: CharacterInfos;\n};\n\nexport interface SetCharacterInfosAction extends Action {\n    type: 'SET_CHARACTER_INFOS';\n    payload: SetCharacterInfosPayload;\n}\n\nexport const setCharacterInfos = (\n    payload: SetCharacterInfosPayload\n): SetCharacterInfosAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_INFOS',\n    };\n};\n","import { Action } from 'redux';\n\nexport type SetCharacterNamePayload = {\n    // todoを追加する時に必要なのはtodoの内容くらい\n    characterName: string;\n};\n\nexport interface SetCharacterNameAction extends Action {\n    type: 'SET_CHARACTER_NAME';\n    payload: SetCharacterNamePayload;\n}\n\nexport const setCharacterName = (\n    payload: SetCharacterNamePayload\n): SetCharacterNameAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_NAME',\n    };\n};\n","import { Action } from 'redux';\n\nexport type SetHPPayload = {\n    hp: number;\n};\n\nexport interface SetHPAction extends Action {\n    type: 'SET_HP';\n    payload: SetHPPayload;\n}\n\nexport const setHP = (payload: SetHPPayload): SetHPAction => {\n    return {\n        payload,\n        type: 'SET_HP',\n    };\n};\n","import { Action } from 'redux';\n\nexport type SetMPPayload = {\n    mp: number;\n};\n\nexport interface SetMPAction extends Action {\n    type: 'SET_MP';\n    payload: SetMPPayload;\n}\n\nexport const setMP = (payload: SetMPPayload): SetMPAction => {\n    return {\n        payload,\n        type: 'SET_MP',\n    };\n};\n","import { Action } from 'redux';\n\nexport type SetSANPayload = {\n    san: number;\n};\n\nexport interface SetSANAction extends Action {\n    type: 'SET_SAN';\n    payload: SetSANPayload;\n}\n\nexport const setSAN = (payload: SetSANPayload): SetSANAction => {\n    return {\n        payload,\n        type: 'SET_SAN',\n    };\n};\n","import { Action } from 'redux';\n\nexport type SetCharacterBackgroundPayload = {\n    // todoを追加する時に必要なのはtodoの内容くらい\n    background: string;\n};\n\nexport interface SetCharacterBackgroundAction extends Action {\n    type: 'SET_CHARACTER_BACKGROUND';\n    payload: SetCharacterBackgroundPayload;\n}\n\nexport const setCharacterBackground = (\n    payload: SetCharacterBackgroundPayload\n): SetCharacterBackgroundAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_BACKGROUND',\n    };\n};\n","import { combineReducers } from 'redux';\r\nimport * as Settings from './settings';\r\nimport * as Characters from './characters';\r\n\r\nexport type RootState = {\r\n    setting: Settings.State;\r\n    character: Characters.State;\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    setting: Settings.reducer,\r\n    character: Characters.reducer,\r\n});\r\n\r\nexport const actionCreator = {\r\n    setting: Settings.actionCreator,\r\n    character: Characters.actionCreator,\r\n};\r\n","interface Item {\r\n    name: string;\r\n    url: string;\r\n    user: string;\r\n    value: string;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\nfunction ShakeDice(item: Item): Result {\r\n    let result: Result = {\r\n        ok: '',\r\n        result: '',\r\n    };\r\n\r\n    let _1d100Value: number = Math.round(Math.random() * 100) + 1;\r\n\r\n    if (_1d100Value <= 5) {\r\n        result.ok = 'クリティカル';\r\n    } else if (_1d100Value <= +item.value) {\r\n        result.ok = '成功';\r\n    } else {\r\n        result.ok = '失敗';\r\n    }\r\n\r\n    result.result =\r\n        '技能:' + item.name + ' ' + _1d100Value + ' <= ' + item.value;\r\n\r\n    return result;\r\n}\r\n\r\nexport default ShakeDice;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ShakeDice from '../modules/ShakeDice';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chip: {\r\n            textAlign: 'center',\r\n        },\r\n    })\r\n);\r\n\r\ninterface Item {\r\n    name: string;\r\n    url: string;\r\n    user: string;\r\n    value: string;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    item: Item;\r\n    setOpen(open: boolean): void;\r\n};\r\n\r\nexport default function AlertDialog(props: Props) {\r\n    const classes = useStyles();\r\n\r\n    let result: Result = {\r\n        ok: '',\r\n        result: '',\r\n    };\r\n\r\n    if (props.open) {\r\n        result = ShakeDice(props.item);\r\n    }\r\n\r\n    function handleClose() {\r\n        props.setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {'Dice Result'}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {result.ok === '失敗' ? (\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Chip\r\n                                color=\"default\"\r\n                                label={result.ok}\r\n                                className={classes.chip}\r\n                            />\r\n                        </DialogContentText>\r\n                    ) : result.ok === '成功' ? (\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Chip\r\n                                color=\"primary\"\r\n                                label={result.ok}\r\n                                className={classes.chip}\r\n                            />\r\n                        </DialogContentText>\r\n                    ) : (\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Chip\r\n                                color=\"secondary\"\r\n                                label={result.ok}\r\n                                className={classes.chip}\r\n                            />\r\n                        </DialogContentText>\r\n                    )}\r\n                    <br />\r\n\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {result.result}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","interface Item {\r\n    name: string;\r\n    url: string;\r\n    user: string;\r\n    value: string;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\nexport default function sendBCDice(item: Item) {\r\n    sendDice(sendDiscordText, item);\r\n}\r\n\r\nfunction sendDiscordText(result: Result, item: Item) {\r\n    if (result.ok) {\r\n        const webhook = require('webhook-discord');\r\n\r\n        const Hook = new webhook.Webhook(item.url);\r\n        Hook.info(item.user, item.name + ' ' + result.result);\r\n    }\r\n}\r\n\r\nasync function sendDice(func: (json: Result, item: Item) => void, item: Item) {\r\n    const url =\r\n        'https://www.taruki.com/bcdice-api' +\r\n        '/v1/diceroll?system=Cthulhu&command=' +\r\n        'CCB<=' +\r\n        item.value; // リクエスト先URL\r\n\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            let json = response;\r\n            if (response.ok) {\r\n                return func(json, item);\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nexport function goodbye(name: string) {\r\n    return `Goodbye ${name}`;\r\n}\r\n","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport clsx from 'clsx';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport sendBCDice from '../modules/sendDiscord';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '75%',\r\n            },\r\n            margin: 'auto',\r\n            marginTop: theme.spacing(3),\r\n            overflowX: 'auto',\r\n        },\r\n        table: {\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                minWidth: 500,\r\n            },\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(5),\r\n            marginRight: 'auto',\r\n            width: 120,\r\n        },\r\n        fab: {\r\n            marginLeft: '5px',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(5),\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        chip: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(5),\r\n                margin: theme.spacing(1),\r\n            },\r\n            [theme.breakpoints.down('xs')]: {\r\n                textAlign: 'left',\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    skills: skill[];\r\n    characterName: string;\r\n    setSkills(skills: skill[]): void;\r\n    discordUrl: string;\r\n};\r\n\r\nexport default function SimpleTable(props: Props) {\r\n    const classes = useStyles();\r\n    const [category, setCategory] = React.useState<string>('unique');\r\n    const [skill, setSkill] = React.useState<string>('');\r\n    const [value, setValue] = React.useState<number>(0);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n    const handleClick = (skillName: string): void => {\r\n        const skill: skill | undefined = props.skills.find(\r\n            s => s.skillName === skillName\r\n        );\r\n        if (skill == null) return;\r\n        setItems(skillName, String(skill.skillValue));\r\n    };\r\n\r\n    function handleChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n        setCategory(event.target.value as string);\r\n    }\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleDialogOpen() {\r\n        console.log(props.discordUrl);\r\n        console.log();\r\n        props.discordUrl !== '' ? sendBCDice(item) : setOpenDialog(true);\r\n    }\r\n\r\n    const [item, setItem] = React.useState({\r\n        name: '',\r\n        url: '',\r\n        user: '',\r\n        value: '',\r\n    });\r\n\r\n    const setItems = (ability: string, value: string): void => {\r\n        setItem({\r\n            name: ability,\r\n            url: props.discordUrl,\r\n            user: props.characterName,\r\n            value: value,\r\n        });\r\n    };\r\n\r\n    const setSkills = (skill: string, value: number): void => {\r\n        const addSkill: skill = {\r\n            skillName: '',\r\n            skillValue: 0,\r\n            skillType: '追加',\r\n            skillUnique: true,\r\n            skillWorkValue: 0,\r\n            skillInterestValue: 0,\r\n            defaultValue: 0,\r\n        };\r\n\r\n        const newSkills = JSON.parse(JSON.stringify(props.skills));\r\n\r\n        const cSkill =\r\n            newSkills.length == null || newSkills.length === 0\r\n                ? undefined\r\n                : newSkills.find(\r\n                      (s: { skillName: string }) => s.skillName === skill\r\n                  );\r\n\r\n        if (cSkill == null) {\r\n            addSkill.skillName = skill;\r\n            addSkill.skillValue = value;\r\n            props.setSkills([...props.skills, addSkill]);\r\n        } else {\r\n            cSkill.skillValue = value;\r\n            props.setSkills(newSkills);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={clsx(classes.root)}>\r\n                <br />\r\n                {/* タブレット以上なら隠す -- モバイル画面で表示 */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Chip color=\"primary\" label=\"Skill\" />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Skill\"\r\n                        type=\"text\"\r\n                        defaultValue={skill}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setSkill(event.target.value);\r\n                        }}\r\n                        placeholder=\"Skill\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <br />\r\n                    <Chip\r\n                        color=\"primary\"\r\n                        label=\"Value\"\r\n                        className={classes.chip}\r\n                    />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Value\"\r\n                        type=\"number\"\r\n                        defaultValue={value}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setValue(+event.target.value);\r\n                        }}\r\n                        placeholder=\"Value\"\r\n                        margin=\"normal\"\r\n                    />\r\n\r\n                    <br />\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        aria-label=\"add\"\r\n                        className={classes.fab}\r\n                    >\r\n                        <AddIcon\r\n                            onClick={() => {\r\n                                setSkills(skill, value);\r\n                            }}\r\n                        />\r\n                    </Fab>\r\n                </Hidden>\r\n\r\n                {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Chip color=\"primary\" label=\"Skill\" />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Skill\"\r\n                        type=\"text\"\r\n                        defaultValue={skill}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setSkill(event.target.value);\r\n                        }}\r\n                        placeholder=\"Skill\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <Chip\r\n                        color=\"primary\"\r\n                        label=\"Value\"\r\n                        className={classes.chip}\r\n                    />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Value\"\r\n                        type=\"number\"\r\n                        defaultValue={value}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setValue(+event.target.value);\r\n                        }}\r\n                        placeholder=\"Value\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        aria-label=\"add\"\r\n                        className={classes.fab}\r\n                    >\r\n                        <AddIcon\r\n                            onClick={() => {\r\n                                setSkills(skill, value);\r\n                            }}\r\n                        />\r\n                    </Fab>\r\n                </Hidden>\r\n\r\n                <br />\r\n                <br />\r\n\r\n                <InputLabel htmlFor=\"demo-controlled-open-select\">\r\n                    Category\r\n                </InputLabel>\r\n                <Select\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    value={category}\r\n                    onChange={handleChange}\r\n                    inputProps={{\r\n                        name: 'category',\r\n                        id: 'demo-controlled-open-select',\r\n                    }}\r\n                >\r\n                    <MenuItem value=\"unique\">\r\n                        <em>Unique</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={'戦闘'}>Fight</MenuItem>\r\n                    <MenuItem value={'探索'}>Search</MenuItem>\r\n                    <MenuItem value={'知識'}>Wisdom</MenuItem>\r\n                    <MenuItem value={'行動'}>Act</MenuItem>\r\n                    <MenuItem value={'交渉'}>Negotiation</MenuItem>\r\n                    <MenuItem value={'all'}>ALL</MenuItem>\r\n                </Select>\r\n                <br />\r\n                <br />\r\n            </Paper>\r\n\r\n            <Paper className={classes.root}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Skill</TableCell>\r\n                            <TableCell align=\"right\">Value</TableCell>\r\n                            <TableCell align=\"right\">Type</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.skills.map(row => {\r\n                            if (category === 'unique' && !row.skillUnique) {\r\n                                return;\r\n                            }\r\n                            if (\r\n                                category !== 'unique' &&\r\n                                category !== 'all' &&\r\n                                row.skillType !== category\r\n                            ) {\r\n                                return;\r\n                            }\r\n\r\n                            return (\r\n                                <TableRow\r\n                                    key={row.skillName}\r\n                                    onClick={_ => {\r\n                                        console.log('onclick');\r\n                                        handleClick(row.skillName);\r\n                                        handleDialogOpen();\r\n                                    }}\r\n                                >\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.skillName}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        {row.skillValue}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        {row.skillType}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                <DiceDialog\r\n                    open={openDialog}\r\n                    setOpen={setOpenDialog}\r\n                    item={item}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Skill from '../pages/Skill';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return { \r\n        skills: state.character.character.skills,\r\n        discordUrl: state.setting.discordUrl,\r\n        characterName: state.character.character.characterInfos.characterName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSkills: (skills: skill[]) => {\r\n            dispatch(actionCreator.character.setSkills({skills}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Skill);","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '80%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 360,\r\n            },\r\n        },\r\n        numberAbilityField: {\r\n            marginLeft: 0,\r\n            marginRight: 6,\r\n            width: '20%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 78,\r\n            },\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '30%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 120,\r\n            },\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            padding: theme.spacing(3, 2),\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 600,\r\n            },\r\n        },\r\n        card: {\r\n            margin: 'auto',\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 500,\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    characterInfos: characterInfo;\r\n    abilityValues: abilityValue;\r\n    characterBackground: string | undefined;\r\n    setCharacterName: (characterName: string) => void;\r\n    setHP: (hp: number) => void;\r\n    setMP: (mp: number) => void;\r\n    setSAN: (san: number) => void;\r\n    setCharacterBackground: (background: string) => void;\r\n    setCharacterInfos: (characterInfos: characterInfo) => void;\r\n    setAbilityValues: (abilityValues: abilityValue) => void;\r\n};\r\n\r\nconst Character: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <h2>Character Infomation</h2>\r\n\r\n            <TextField\r\n                id=\"characterName\"\r\n                label=\"Character Name\"\r\n                value={props.characterInfos.characterName}\r\n                className={clsx(classes.textField, classes.dense)}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    props.setCharacterName(event.target.value);\r\n                }}\r\n                margin=\"dense\"\r\n            />\r\n            <br />\r\n            <TextField\r\n                id=\"background\"\r\n                label=\"Background\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                value={props.characterBackground}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    props.setCharacterBackground(event.target.value);\r\n                }}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n            />\r\n            <Card className={classes.card}>\r\n                <br />\r\n                physical value\r\n                <br />\r\n                <TextField\r\n                    id=\"hp\"\r\n                    label=\"HP\"\r\n                    type=\"number\"\r\n                    defaultValue={props.characterInfos.HP}\r\n                    className={clsx(classes.numberInfoField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setHP(+event.target.value);\r\n                    }}\r\n                    placeholder=\"HP\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"mp\"\r\n                    label=\"MP\"\r\n                    type=\"number\"\r\n                    defaultValue={props.characterInfos.MP}\r\n                    className={clsx(classes.numberInfoField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setMP(+event.target.value);\r\n                    }}\r\n                    placeholder=\"MP\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"san\"\r\n                    label=\"SAN\"\r\n                    type=\"number\"\r\n                    defaultValue={props.characterInfos.SAN}\r\n                    className={clsx(classes.numberInfoField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setSAN(+event.target.value);\r\n                    }}\r\n                    placeholder=\"SAN\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n            </Card>\r\n            <br />\r\n\r\n            <Card className={classes.card}>\r\n                <br />\r\n                ability value\r\n                <br />\r\n                <TextField\r\n                    id=\"str\"\r\n                    label=\"STR\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.STR}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.STR = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"STR\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"con\"\r\n                    label=\"CON\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.CON}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.CON = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"CON\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"pow\"\r\n                    label=\"POW\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.POW}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.POW = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"POW\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"dex\"\r\n                    label=\"DEX\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.DEX}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.DEX = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"DEX\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n                <TextField\r\n                    id=\"app\"\r\n                    label=\"APP\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.APP}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.APP = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"APP\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"siz\"\r\n                    label=\"SIZ\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.SIZ}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.SIZ = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"SIZ\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"int\"\r\n                    label=\"INT\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.INT}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.INT = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"INT\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"edu\"\r\n                    label=\"EDU\"\r\n                    type=\"number\"\r\n                    defaultValue={props.abilityValues.EDU}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        let newAbilityValues: abilityValue =\r\n                            props.abilityValues;\r\n                        newAbilityValues.EDU = +event.target.value;\r\n                        props.setAbilityValues(newAbilityValues);\r\n                    }}\r\n                    placeholder=\"EDU\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n            </Card>\r\n\r\n            <br />\r\n        </Paper>\r\n    );\r\n};\r\nexport default Character;\r\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Character from '../pages/Character';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state.character);\r\n    return {\r\n        characterInfos: state.character.character.characterInfos,\r\n        abilityValues: state.character.character.abilityValues,\r\n        characterBackground: state.character.character.characterBackground,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacterName: (characterName: string) => {\r\n            dispatch(actionCreator.character.setCharacterName({characterName}));\r\n        },\r\n        setHP: (hp: number) => {\r\n            dispatch(actionCreator.character.setHP({hp}));\r\n        },\r\n        setMP: (mp: number) => {\r\n            dispatch(actionCreator.character.setMP({mp}));\r\n        },\r\n        setSAN: (san: number) => {\r\n            dispatch(actionCreator.character.setSAN({san}));\r\n        },\r\n        setCharacterBackground: (background: string) => {\r\n            dispatch(actionCreator.character.setCharacterBackground({background}));\r\n        },\r\n        setCharacterInfos: (characterInfos: characterInfo) => {\r\n            dispatch(actionCreator.character.setCharacterInfos({characterInfos}));\r\n        },\r\n        setAbilityValues: (abilityValues: abilityValue) => {\r\n            dispatch(actionCreator.character.setAbilityValues({abilityValues}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Character);","function getAbilityValue(\r\n    item: string,\r\n    abilityValue: abilityValue,\r\n    power: number\r\n): string {\r\n    return String(getAbility(item, abilityValue) * power);\r\n}\r\n\r\nfunction getAbility(item: string, abilityValue: abilityValue): number {\r\n    const eq = <T>(val1: T) => (val2: T) => val1 === val2;\r\n\r\n    const result = when(item)\r\n        .on(eq('STR'), () => abilityValue.STR)\r\n        .on(eq('CON'), () => abilityValue.CON)\r\n        .on(eq('POW'), () => abilityValue.POW)\r\n        .on(eq('DEX'), () => abilityValue.DEX)\r\n        .on(eq('APP'), () => abilityValue.APP)\r\n        .on(eq('SIZ'), () => abilityValue.SIZ)\r\n        .on(eq('INT'), () => abilityValue.INT)\r\n        .on(eq('EDU'), () => abilityValue.EDU)\r\n        .otherwise(() => -1);\r\n\r\n    return result;\r\n}\r\n\r\ntype ChainedWhen<T, R> = {\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) => ChainedWhen<T, R | A>;\r\n    otherwise: <A>(fn: () => A) => R | A;\r\n};\r\n\r\nconst match = <T, R>(val: any): ChainedWhen<T, R> => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) => match<T, R | A>(val),\r\n    otherwise: <A>(fn: () => A): A | R => val,\r\n});\r\n\r\nconst chain = <T, R>(val: T): ChainedWhen<T, R> => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) =>\r\n        pred(val) ? match(fn()) : chain<T, A | R>(val),\r\n    otherwise: <A>(fn: () => A) => fn(),\r\n});\r\n\r\nconst when = <T>(val: T) => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) =>\r\n        pred(val) ? match<T, A>(fn()) : chain<T, A>(val),\r\n});\r\n\r\nexport default getAbilityValue;\r\n","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport STRIcon from '@material-ui/icons/FlashOn';\r\nimport CONIcon from '@material-ui/icons/Favorite';\r\nimport POWIcon from '@material-ui/icons/Visibility';\r\nimport DEXIcon from '@material-ui/icons/DirectionsRun';\r\nimport APPIcon from '@material-ui/icons/Face';\r\nimport SIZIcon from '@material-ui/icons/AccessibilityNewOutlined';\r\nimport INTIcon from '@material-ui/icons/WbIncandescentOutlined';\r\nimport EDUIcon from '@material-ui/icons/LocalLibrary';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Paper } from '@material-ui/core/';\r\n\r\nimport getAbilityValue from '../modules/getAbilityValue';\r\nimport DiceDialog from '../components/DiceDialog';\r\n\r\nimport sendBCDice from '../modules/sendDiscord';\r\n\r\ninterface Item {\r\n    name: string;\r\n    url: string;\r\n    user: string;\r\n    value: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 500,\r\n            },\r\n            margin: 'auto',\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        numberAbilityField: {\r\n            marginLeft: 0,\r\n            marginRight: 6,\r\n            width: 78,\r\n        },\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 600,\r\n            },\r\n            padding: theme.spacing(3, 2),\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    abilityValues: abilityValue;\r\n    discordUrl: string;\r\n    characterName: string;\r\n};\r\n\r\nconst Ability: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('STR');\r\n    const [power, setPower] = React.useState(5);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [item, setItem] = React.useState({\r\n        name: '',\r\n        url: '',\r\n        user: '',\r\n        value: '',\r\n    });\r\n\r\n    function handleOpen() {\r\n        props.discordUrl !== '' ? sendBCDice(item) : setOpen(true);\r\n    }\r\n\r\n    const setItems = (ability: string, value: string): void => {\r\n        setItem({\r\n            name: ability,\r\n            url: props.discordUrl,\r\n            user: props.characterName,\r\n            value: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Ability Role</h2>\r\n\r\n            <Paper className={classes.paper}>\r\n                ability\r\n                <BottomNavigation\r\n                    value={value}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    showLabels\r\n                    className={classes.root}\r\n                >\r\n                    <BottomNavigationAction\r\n                        value={'STR'}\r\n                        label=\"STR\"\r\n                        icon={<STRIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        value={'CON'}\r\n                        label=\"CON\"\r\n                        icon={<CONIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        value={'POW'}\r\n                        label=\"POW\"\r\n                        icon={<POWIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        value={'DEX'}\r\n                        label=\"DEX\"\r\n                        icon={<DEXIcon />}\r\n                    />\r\n                </BottomNavigation>\r\n                <BottomNavigation\r\n                    value={value}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    showLabels\r\n                    className={classes.root}\r\n                >\r\n                    <BottomNavigationAction\r\n                        value={'APP'}\r\n                        label=\"APP\"\r\n                        icon={<APPIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        value={'SIZ'}\r\n                        label=\"SIZ\"\r\n                        icon={<SIZIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        value={'INT'}\r\n                        label=\"INT\"\r\n                        icon={<INTIcon />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        value={'EDU'}\r\n                        label=\"EDU\"\r\n                        icon={<EDUIcon />}\r\n                    />\r\n                </BottomNavigation>\r\n                <TextField\r\n                    id=\"power\"\r\n                    label=\"Power\"\r\n                    type=\"number\"\r\n                    defaultValue={power}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setPower(+event.target.value);\r\n                    }}\r\n                    placeholder=\"Power\"\r\n                    margin=\"normal\"\r\n                />\r\n            </Paper>\r\n\r\n            <br />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={(): void => {\r\n                    setItems(\r\n                        value,\r\n                        getAbilityValue(value, props.abilityValues, power)\r\n                    );\r\n                    handleOpen();\r\n                }}\r\n            >\r\n                Send\r\n            </Button>\r\n\r\n            <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n        </div>\r\n    );\r\n};\r\nexport default Ability;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { RootState  } from '../states';\r\nimport Ability from '../pages/Ability';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state.character);\r\n    return {\r\n        abilityValues: state.character.character.abilityValues,\r\n        discordUrl: state.setting.discordUrl,\r\n        characterName: state.character.character.characterInfos.characterName,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Ability);","interface ItemNDN {\r\n    count: number;\r\n    number: number;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\nfunction ShakeNDNDice(item: ItemNDN): Result {\r\n    let diceResults: number[] = [];\r\n\r\n    let result: Result = {\r\n        ok: String(item.count) + 'D' + String(item.number),\r\n        result: '',\r\n    };\r\n\r\n    for (var i = 0; i < item.count; i++) {\r\n        diceResults.push(Math.round(Math.random() * item.number) + 1);\r\n    }\r\n\r\n    result.result = String(\r\n        diceResults.reduce(function(total, data) {\r\n            return total + data;\r\n        })\r\n    );\r\n\r\n    return result;\r\n}\r\n\r\nexport default ShakeNDNDice;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\n\r\ninterface ItemNDN {\r\n    count: number;\r\n    number: number;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    item: ItemNDN;\r\n    setOpen(open: boolean): void;\r\n};\r\n\r\nexport default function AlertDialog(props: Props) {\r\n    let result: Result = {\r\n        ok: '',\r\n        result: '',\r\n    };\r\n    if (props.open) {\r\n        result = ShakeNDNDice(props.item);\r\n    }\r\n\r\n    function handleClose() {\r\n        props.setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {'Dice Result'}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {result.ok}\r\n                    </DialogContentText>\r\n                    <br />\r\n\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {result.result}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport DiceNDNDialog from '../components/DiceNDNDialog';\r\n\r\nimport sendBCDice from '../modules/sendDiscord';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            margin: 'auto',\r\n            padding: theme.spacing(3, 2),\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 600,\r\n            },\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(3),\r\n            marginRight: 'auto',\r\n            width: '20%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 120,\r\n                marginLeft: theme.spacing(10),\r\n            },\r\n        },\r\n        fab: {\r\n            marginLeft: theme.spacing(5),\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(1),\r\n            },\r\n            margin: theme.spacing(1),\r\n        },\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    characterName: string;\r\n    discordUrl: string;\r\n}\r\n\r\ninterface PropsMain extends Props {\r\n    skills: skill[];\r\n    SAN: number;\r\n    setSAN: (san: number) => void;\r\n}\r\n\r\ninterface PropsSAN extends Props {\r\n    SAN: number;\r\n    setSAN: (san: number) => void;\r\n}\r\n\r\ninterface PropsIdea extends Props {\r\n    skills: skill[];\r\n}\r\n\r\nconst SANValue: React.SFC<PropsSAN> = (props: PropsSAN) => {\r\n    const classes = useStyles();\r\n    const [diffSAN, setDiffSAN] = React.useState(1);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [item, setItem] = React.useState({\r\n        name: '',\r\n        url: '',\r\n        user: '',\r\n        value: '',\r\n    });\r\n\r\n    const setItems = (ability: string, value: string): void => {\r\n        setItem({\r\n            name: ability,\r\n            url: props.discordUrl,\r\n            user: props.characterName,\r\n            value: value,\r\n        });\r\n    };\r\n\r\n    function handleOpen() {\r\n        props.discordUrl !== '' ? sendBCDice(item) : setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Chip color=\"primary\" label=\"SAN\" /> {props.SAN}\r\n            <TextField\r\n                id=\"san\"\r\n                label=\"SAN\"\r\n                type=\"number\"\r\n                defaultValue={diffSAN}\r\n                className={classes.numberInfoField}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    setDiffSAN(+event.target.value);\r\n                }}\r\n                placeholder=\"SAN\"\r\n                margin=\"normal\"\r\n            />\r\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n                <AddIcon\r\n                    onClick={() => {\r\n                        props.setSAN(props.SAN + diffSAN);\r\n                    }}\r\n                />\r\n            </Fab>\r\n            <br />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={(): void => {\r\n                    setItems('SANチェック', String(props.SAN));\r\n                    handleOpen();\r\n                }}\r\n            >\r\n                SAN Check\r\n            </Button>\r\n            <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst SANFunc: React.SFC<PropsSAN> = (props: PropsSAN) => {\r\n    const classes = useStyles();\r\n    const [countDice, setCountDice] = React.useState(1);\r\n    const [numberDice, setNumberDice] = React.useState(2);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [item, setItem] = React.useState({\r\n        count: 0,\r\n        number: 0,\r\n    });\r\n\r\n    const setItems = (cou: number, num: number): void => {\r\n        setItem({\r\n            count: cou,\r\n            number: num,\r\n        });\r\n    };\r\n\r\n    function handleOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <Paper className={clsx(classes.paper, classes.dense)}>\r\n            <TextField\r\n                id=\"san\"\r\n                label=\"Count\"\r\n                type=\"number\"\r\n                defaultValue={countDice}\r\n                className={classes.numberInfoField}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    setCountDice(+event.target.value);\r\n                }}\r\n                placeholder=\"SAN\"\r\n                margin=\"normal\"\r\n            />\r\n            <TextField\r\n                id=\"san\"\r\n                label=\"Number\"\r\n                type=\"number\"\r\n                defaultValue={numberDice}\r\n                className={classes.numberInfoField}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    setNumberDice(+event.target.value);\r\n                }}\r\n                placeholder=\"SAN\"\r\n                margin=\"normal\"\r\n            />\r\n\r\n            <br />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={(): void => {\r\n                    setItems(countDice, numberDice);\r\n                    handleOpen();\r\n                }}\r\n            >\r\n                Judge\r\n            </Button>\r\n\r\n            <DiceNDNDialog open={open} setOpen={setOpen} item={item} />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst SANIdea: React.SFC<PropsIdea> = (props: PropsIdea) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [item, setItem] = React.useState({\r\n        name: '',\r\n        url: '',\r\n        user: '',\r\n        value: '',\r\n    });\r\n\r\n    const setItems = (ability: string, value: string): void => {\r\n        setItem({\r\n            name: ability,\r\n            url: props.discordUrl,\r\n            user: props.characterName,\r\n            value: value,\r\n        });\r\n    };\r\n\r\n    function handleOpen() {\r\n        props.discordUrl !== '' ? sendBCDice(item) : setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <Paper className={clsx(classes.paper, classes.dense)}>\r\n            <br />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={(): void => {\r\n                    let idea: skill | undefined = props.skills.find(\r\n                        s => s.skillName === 'アイデア'\r\n                    );\r\n                    if (idea == null) return;\r\n\r\n                    setItems('アイデア', String(idea.skillValue));\r\n                    handleOpen();\r\n                }}\r\n            >\r\n                Idea\r\n            </Button>\r\n\r\n            <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst SAN: React.SFC<PropsMain> = (props: PropsMain) => {\r\n    return (\r\n        <div>\r\n            <SANValue\r\n                SAN={props.SAN}\r\n                characterName={props.characterName}\r\n                setSAN={props.setSAN}\r\n                discordUrl={props.discordUrl}\r\n            />\r\n            <SANFunc\r\n                SAN={props.SAN}\r\n                characterName={props.characterName}\r\n                setSAN={props.setSAN}\r\n                discordUrl={props.discordUrl}\r\n            />\r\n            <SANIdea\r\n                skills={props.skills}\r\n                discordUrl={props.discordUrl}\r\n                characterName={props.characterName}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SAN;\r\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport SAN from '../pages/SAN';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        SAN: state.character.character.characterInfos.SAN,\r\n        characterName: state.character.character.characterInfos.characterName, \r\n        skills: state.character.character.skills,\r\n        discordUrl: state.setting.discordUrl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSAN: (san: number) => {\r\n            dispatch(actionCreator.character.setSAN({san}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SAN);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport sendBCDice from '../modules/sendDiscord';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '75%',\r\n            margin: 'auto',\r\n            marginTop: theme.spacing(3),\r\n            overflowX: 'auto',\r\n        },\r\n        table: {\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                minwidth: 500,\r\n            },\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(5),\r\n            marginRight: 'auto',\r\n            width: '20%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 120,\r\n            },\r\n        },\r\n        fab: {\r\n            marginLeft: '5px',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(5),\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        chip: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(5),\r\n                margin: theme.spacing(1),\r\n            },\r\n            [theme.breakpoints.down('xs')]: {\r\n                textAlign: 'left',\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    skills: skill[];\r\n    hp: number;\r\n    damageBonus: string;\r\n    setSkills(skills: skill[]): void;\r\n    setHP(hp: number): void;\r\n    discordUrl: string;\r\n    characterName: string;\r\n};\r\n\r\nexport default function SimpleTable(props: Props) {\r\n    const classes = useStyles();\r\n    const [skill, setSkill] = React.useState<string>('');\r\n    const [value, setValue] = React.useState<number>(0);\r\n    const [HPDiff, setHPDiff] = React.useState<number>(0);\r\n    const [openDialog, setOpenDialog] = React.useState<boolean>(false);\r\n\r\n    const handleClick = (skillName: string): void => {\r\n        const skill: skill | undefined = props.skills.find(\r\n            s => s.skillName === skillName\r\n        );\r\n        if (skill == null) return;\r\n        setItems(skillName, String(skill.skillValue));\r\n    };\r\n\r\n    const [item, setItem] = React.useState({\r\n        name: '',\r\n        url: '',\r\n        user: '',\r\n        value: '',\r\n    });\r\n\r\n    const setItems = (ability: string, value: string): void => {\r\n        setItem({\r\n            name: ability,\r\n            url: props.discordUrl,\r\n            user: props.characterName,\r\n            value: value,\r\n        });\r\n    };\r\n\r\n    function handleOpen() {\r\n        props.discordUrl !== '' ? sendBCDice(item) : setOpenDialog(true);\r\n    }\r\n\r\n    const setSkills = (skill: string, value: number): void => {\r\n        const addSkill: skill = {\r\n            skillName: '',\r\n            skillValue: 0,\r\n            skillType: '戦闘',\r\n            skillUnique: true,\r\n            skillWorkValue: 0,\r\n            skillInterestValue: 0,\r\n            defaultValue: 0,\r\n        };\r\n\r\n        const newSkills = JSON.parse(JSON.stringify(props.skills));\r\n\r\n        const cSkill =\r\n            newSkills.length == null || newSkills.length === 0\r\n                ? undefined\r\n                : newSkills.find(\r\n                      (s: { skillName: string }) => s.skillName === skill\r\n                  );\r\n\r\n        if (cSkill == null) {\r\n            addSkill.skillName = skill;\r\n            addSkill.skillValue = value;\r\n            props.setSkills([...props.skills, addSkill]);\r\n        } else {\r\n            cSkill.skillValue = value;\r\n            props.setSkills(newSkills);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={clsx(classes.root)}>\r\n                <br />\r\n                {/* タブレット以上なら隠す -- モバイル画面で表示 */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Chip color=\"primary\" label=\"Skill\" />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Skill\"\r\n                        type=\"text\"\r\n                        defaultValue={skill}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setSkill(event.target.value);\r\n                        }}\r\n                        placeholder=\"Skill\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <br />\r\n                    <Chip\r\n                        color=\"primary\"\r\n                        label=\"Value\"\r\n                        className={classes.chip}\r\n                    />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Value\"\r\n                        type=\"number\"\r\n                        defaultValue={value}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setValue(+event.target.value);\r\n                        }}\r\n                        placeholder=\"Value\"\r\n                        margin=\"normal\"\r\n                    />\r\n\r\n                    <br />\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        aria-label=\"add\"\r\n                        className={classes.fab}\r\n                    >\r\n                        <AddIcon\r\n                            onClick={() => {\r\n                                setSkills(skill, value);\r\n                            }}\r\n                        />\r\n                    </Fab>\r\n                </Hidden>\r\n                {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Chip color=\"primary\" label=\"Skill\" />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Skill\"\r\n                        type=\"text\"\r\n                        defaultValue={skill}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setSkill(event.target.value);\r\n                        }}\r\n                        placeholder=\"Skill\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <Chip\r\n                        color=\"primary\"\r\n                        label=\"Value\"\r\n                        className={classes.chip}\r\n                    />\r\n                    <TextField\r\n                        id=\"san\"\r\n                        label=\"Value\"\r\n                        type=\"number\"\r\n                        defaultValue={value}\r\n                        className={classes.numberInfoField}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                            setValue(+event.target.value);\r\n                        }}\r\n                        placeholder=\"Value\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        aria-label=\"add\"\r\n                        className={classes.fab}\r\n                    >\r\n                        <AddIcon\r\n                            onClick={() => {\r\n                                setSkills(skill, value);\r\n                            }}\r\n                        />\r\n                    </Fab>\r\n                </Hidden>\r\n                <br />\r\n                <br />\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"HP\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.hp}\r\n                <TextField\r\n                    id=\"hp\"\r\n                    label=\"HP\"\r\n                    type=\"number\"\r\n                    defaultValue={HPDiff}\r\n                    className={classes.numberInfoField}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setHPDiff(+event.target.value);\r\n                    }}\r\n                    placeholder=\"Value\"\r\n                    margin=\"normal\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\" //className={classes.button}\r\n                    onClick={(): void => {\r\n                        props.setHP(props.hp + HPDiff);\r\n                    }}\r\n                >\r\n                    +/-\r\n                </Button>\r\n                <br />\r\n                <br />\r\n            </Paper>\r\n\r\n            <Paper className={classes.root}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Skill</TableCell>\r\n                            <TableCell align=\"right\">Value</TableCell>\r\n                            <TableCell align=\"right\">Type</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.skills.map(row => {\r\n                            if (row.skillType !== '戦闘') {\r\n                                return;\r\n                            }\r\n\r\n                            return (\r\n                                <TableRow\r\n                                    key={row.skillName}\r\n                                    onClick={_ => {\r\n                                        console.log('onclick');\r\n                                        handleClick(row.skillName);\r\n                                        handleOpen();\r\n                                    }}\r\n                                >\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.skillName}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        {row.skillValue}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        {row.skillType}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                <DiceDialog\r\n                    open={openDialog}\r\n                    setOpen={setOpenDialog}\r\n                    item={item}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Battle from '../pages/Battle';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return { \r\n        skills: state.character.character.skills,\r\n        damageBonus: state.character.character.characterInfos.damageBonus,\r\n        hp: state.character.character.characterInfos.HP,\r\n        discordUrl: state.setting.discordUrl,\r\n        characterName: state.character.character.characterInfos.characterName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSkills: (skills: skill[]) => {\r\n            dispatch(actionCreator.character.setSkills({skills}));\r\n        },\r\n        setHP: (hp: number) => {\r\n            dispatch(actionCreator.character.setHP({hp}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Battle);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport onSubmit from '../modules/importPMJ.js';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { character } from '../modules/commonType';\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    setOpen(open: boolean): void;\r\n    setCharacter(character: character): void;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '75%',\r\n            margin: 'auto',\r\n            marginTop: theme.spacing(3),\r\n            overflowX: 'auto',\r\n        },\r\n        nputFileBtnHide: {\r\n            opacity: 0,\r\n            appearance: 'none',\r\n            position: 'absolute',\r\n        },\r\n    })\r\n);\r\nexport default function FormDialog(props: Props) {\r\n    const classes = useStyles();\r\n    const [file, setFile] = React.useState<File>(new File([], ''));\r\n    const [fileName, setFileName] = React.useState<string>('No Select');\r\n\r\n    function handleChangeFile(e: any) {\r\n        const target: HTMLInputElement = e.target as HTMLInputElement;\r\n        if (target == null) return;\r\n        if (target.files == null) return;\r\n\r\n        const file: File | null = target.files.item(0);\r\n        if (file == null) return;\r\n        setFile(file);\r\n        setFileName(file.name);\r\n    }\r\n\r\n    function setChara(character: any) {\r\n        let chara: character = {\r\n            skills: character.skills,\r\n            characterBackground: character.characterBackground,\r\n            abilityValues: character.abilityValues,\r\n            characterInfos: character.characterInfos,\r\n        };\r\n\r\n        console.log(chara);\r\n        props.setCharacter(chara);\r\n    }\r\n\r\n    function handleClose() {\r\n        props.setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Import Character\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Please select and set .pmj file\r\n                    </DialogContentText>\r\n                    <Button color=\"primary\" component=\"label\">\r\n                        Select\r\n                        <input\r\n                            type=\"file\"\r\n                            className={classes.nputFileBtnHide}\r\n                            onChange={e => {\r\n                                handleChangeFile(e);\r\n                            }}\r\n                        />\r\n                    </Button>\r\n                    {fileName}\r\n                    <br />\r\n                    <br />\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            onSubmit(setChara, file);\r\n                            handleClose();\r\n                        }}\r\n                    >\r\n                        set\r\n                    </Button>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","export default function onSubmit(func, item) {\r\n    if (item == null) return;\r\n    let reader = new FileReader();\r\n\r\n    // CSVファイル以外は処理を止める\r\n    if (!item.name.match('.json$') && !item.name.match('.pmj$')) {\r\n        alert('jsonファイル、またはchpファイルを選択してください');\r\n        return;\r\n    }\r\n\r\n    // ファイル読み取りに失敗したとき\r\n    reader.onerror = function() {\r\n        alert('ファイル読み取りに失敗しました');\r\n    };\r\n    //読み込んだファイルの中身を取得する\r\n    reader.readAsText(item, 'UTF-8');\r\n\r\n    // PMJファイル以外は処理を止める\r\n    if (!item.name.match('.json$') && !item.name.match('.pmj$')) {\r\n        alert('jsonファイル、またはchpファイルを選択してください');\r\n        return;\r\n    }\r\n    //ファイルの中身を取得後に処理を行う\r\n    if (item != null) {\r\n        reader.addEventListener('load', function() {\r\n            let json = JSON.parse(reader.result);\r\n            func(json);\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SkillIcon from '@material-ui/icons/Assignment';\nimport CharacterIcon from '@material-ui/icons/Info';\nimport AbillityIcon from '@material-ui/icons/Face';\nimport SANIcon from '@material-ui/icons/OfflineBolt';\nimport BattleIcon from '@material-ui/icons/Security';\nimport ImportIcon from '@material-ui/icons/CloudDownload';\nimport ExportIcon from '@material-ui/icons/CloudUpload';\n\nimport ImportPMJ from './ImportPMJDialog';\nimport Divider from '@material-ui/core/Divider';\n\nimport { character } from '../modules/commonType';\n\ntype Props = {\n    setCharacter: (character: any) => void;\n    character: character;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            backgroundColor: theme.palette.background.paper,\n        },\n    })\n);\n\nconst charaDownload = (character: character) => {\n    let data = character;\n\n    if (data.characterInfos.characterName !== '') {\n        console.log('download start');\n        const blob = new Blob([JSON.stringify(data)], {\n            type: 'application/json',\n        });\n        let url = window.URL.createObjectURL(blob);\n        let link = document.createElement('a');\n\n        if (url == null) return;\n\n        link.download = data.characterInfos.characterName + '.pmj';\n        link.href = url;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    } else {\n        alert({\n            message: \"Warning, can't download.\",\n            type: 'warning',\n        });\n    }\n};\n\nexport default function SimpleList(props: Props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <div className={classes.root}>\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItem button component={Link} to=\"/home/skill\">\n                    <ListItemIcon>\n                        <SkillIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Skill\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/home/character\">\n                    <ListItemIcon>\n                        <CharacterIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Character\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/home/abillity\">\n                    <ListItemIcon>\n                        <AbillityIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Abillity\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/home/san\">\n                    <ListItemIcon>\n                        <SANIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"SAN\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/home/battle\">\n                    <ListItemIcon>\n                        <BattleIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Battle\" />\n                </ListItem>\n\n                <Divider />\n\n                <ListItem\n                    button\n                    onClick={() => {\n                        setOpen(true);\n                    }}\n                >\n                    <ListItemIcon>\n                        <ImportIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Import\" />\n                </ListItem>\n\n                <ListItem\n                    button\n                    onClick={() => {\n                        charaDownload(props.character);\n                    }}\n                >\n                    <ListItemIcon>\n                        <ExportIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Export\" />\n                </ListItem>\n            </List>\n\n            <ImportPMJ\n                open={open}\n                setOpen={setOpen}\n                setCharacter={props.setCharacter}\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SkillIcon from '@material-ui/icons/Assignment';\nimport CharacterIcon from '@material-ui/icons/Info';\nimport AbillityIcon from '@material-ui/icons/Face';\nimport SANIcon from '@material-ui/icons/OfflineBolt';\nimport BattleIcon from '@material-ui/icons/Security';\nimport ImportIcon from '@material-ui/icons/CloudDownload';\nimport ExportIcon from '@material-ui/icons/CloudUpload';\n\nimport ImportPMJ from './ImportPMJDialog';\nimport Divider from '@material-ui/core/Divider';\n\nimport { character } from '../modules/commonType';\n\ntype Props = {\n    setCharacter: (character: any) => void;\n    character: character;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            backgroundColor: theme.palette.background.paper,\n        },\n    })\n);\n\nconst charaDownload = (character: character) => {\n    let data = character;\n\n    if (data.characterInfos.characterName !== '') {\n        console.log('download start');\n        const blob = new Blob([JSON.stringify(data)], {\n            type: 'application/json',\n        });\n        let url = window.URL.createObjectURL(blob);\n        let link = document.createElement('a');\n\n        if (url == null) return;\n\n        link.download = data.characterInfos.characterName + '.pmj';\n        link.href = url;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    } else {\n        alert({\n            message: \"Warning, can't download.\",\n            type: 'warning',\n        });\n    }\n};\n\nexport default function SimpleList(props: Props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <div className={classes.root}>\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItem button component={Link} to=\"/home/skill\">\n                    <ListItemIcon>\n                        <SkillIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Skill\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/home/character\">\n                    <ListItemIcon>\n                        <CharacterIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Character\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/home/abillity\">\n                    <ListItemIcon>\n                        <AbillityIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Abillity\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/home/san\">\n                    <ListItemIcon>\n                        <SANIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"SAN\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/home/battle\">\n                    <ListItemIcon>\n                        <BattleIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Battle\" />\n                </ListItem>\n\n                <Divider />\n\n                <ListItem\n                    button\n                    onClick={() => {\n                        setOpen(true);\n                    }}\n                >\n                    <ListItemIcon>\n                        <ImportIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Import\" />\n                </ListItem>\n\n                <ListItem\n                    button\n                    onClick={() => {\n                        charaDownload(props.character);\n                    }}\n                >\n                    <ListItemIcon>\n                        <ExportIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Export\" />\n                </ListItem>\n            </List>\n\n            <ImportPMJ\n                open={open}\n                setOpen={setOpen}\n                setCharacter={props.setCharacter}\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport SideBarPC from './SideBar_PC';\nimport SideBarMobile from './SideBar_Mobile';\n\nimport { character } from '../modules/commonType';\n\ntype Props = {\n    setCharacter: (character: any) => void;\n    character: character;\n};\n\nconst NavBar: React.SFC<Props> = (props: Props) => {\n    return (\n        <div>\n            {/* タブレット以上なら隠す -- モバイル画面で表示 */}\n            <Hidden smUp implementation=\"css\">\n                <SideBarMobile\n                    character={props.character}\n                    setCharacter={props.setCharacter}\n                />\n            </Hidden>\n\n            {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\n            <Hidden xsDown implementation=\"css\">\n                <SideBarPC\n                    character={props.character}\n                    setCharacter={props.setCharacter}\n                />\n            </Hidden>\n        </div>\n    );\n};\n\nexport default NavBar;\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport SideBar from '../components/SideBar';\r\n\r\n//空でも良いので、mapStateToPropsを記述\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacter: (chara: character) => {\r\n            dispatch(actionCreator.character.setCharacter({chara}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps, //ここでconnectするのも忘れない\r\n    mapDispatchToProps\r\n)(SideBar);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {\r\n    makeStyles,\r\n    useTheme,\r\n    Theme,\r\n    createStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nimport Skill from '../containers/Skill';\r\nimport Character from '../containers/Character';\r\nimport Abillity from '../containers/Ability';\r\nimport SAN from '../containers/SAN';\r\nimport Battle from '../containers/Battle';\r\nimport SideBar from '../containers/SideBar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { character } from '../modules/commonType';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            position: 'relative',\r\n            display: 'flex',\r\n            zIndex: 0,\r\n            [theme.breakpoints.up('sm')]: {\r\n                paddingTop: '100px',\r\n            },\r\n        },\r\n        drawer: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                paddingTop: '100px',\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n        },\r\n    })\r\n);\r\n\r\ninterface ResponsiveDrawerProps {\r\n    container?: Element;\r\n    openMobile: boolean;\r\n    setOpenMobile: (open: boolean) => void;\r\n    character: character;\r\n}\r\n\r\nexport default function ResponsiveDrawer(props: ResponsiveDrawerProps) {\r\n    const { container } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    function handleDrawerToggle() {\r\n        props.setOpenMobile(!props.openMobile);\r\n    }\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            {/* <Divider /> */}\r\n            <SideBar character={props.character} />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={!props.openMobile}\r\n                        onClose={handleDrawerToggle}\r\n                        onClick={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/home/skill\"\r\n                        component={Skill}\r\n                        container={document.getElementById('app-main')}\r\n                    />\r\n                    <Route path=\"/home/character\" component={Character} />\r\n                    <Route path=\"/home/abillity\" component={Abillity} />\r\n                    <Route path=\"/home/san\" component={SAN} />\r\n                    <Route path=\"/home/battle\" component={Battle} />\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import { connect } from 'react-redux';\r\n\r\nimport { RootState } from '../states';\r\nimport Home from '../pages/Home';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        character: state.character.character,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nrequire('dotenv').config();\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport firebase from '../modules/firebase';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n            width: '50%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: 200,\r\n            },\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        menu: {\r\n            width: '50%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: 200,\r\n            },\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            width: '90%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: 450,\r\n            },\r\n            padding: theme.spacing(3, 2),\r\n        },\r\n        mobile: {\r\n            paddingTop: '100',\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    discordUrl: string;\r\n    diceUrl: string;\r\n    setUserName: (url: string) => void;\r\n    setPassword: (url: string) => void;\r\n};\r\n\r\nconst Login: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [userName, setUserName] = React.useState(props.discordUrl);\r\n    const [password, setPassword] = React.useState(props.diceUrl);\r\n    const [value, setValue] = React.useState('recents');\r\n\r\n    const login = (email: string, password: string) => {\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                setValue('login');\r\n            });\r\n    };\r\n\r\n    const logout = (): void => {\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                setValue('logout');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div id=\"login\">\r\n            <Hidden smUp implementation=\"css\">\r\n                <br className={classes.mobile} />\r\n            </Hidden>\r\n            {(() => {\r\n                const user = firebase.auth().currentUser;\r\n                if (user) {\r\n                    return (\r\n                        <div>\r\n                            {value}\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                onClick={(): void => {\r\n                                    logout();\r\n                                }}\r\n                            >\r\n                                Logout\r\n                            </Button>\r\n                        </div>\r\n                    );\r\n                }\r\n                return (\r\n                    <div>\r\n                        <h2>Login</h2>\r\n                        <Paper className={classes.paper}>\r\n                            <TextField\r\n                                id=\"userName\"\r\n                                label=\"User Name\"\r\n                                defaultValue={props.diceUrl}\r\n                                className={clsx(\r\n                                    classes.textField,\r\n                                    classes.dense\r\n                                )}\r\n                                onChange={(\r\n                                    event: React.ChangeEvent<HTMLInputElement>\r\n                                ) => {\r\n                                    setUserName(event.target.value);\r\n                                }}\r\n                                margin=\"dense\"\r\n                            />\r\n                            <br />\r\n                            <TextField\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                defaultValue={props.discordUrl}\r\n                                className={clsx(\r\n                                    classes.textField,\r\n                                    classes.dense\r\n                                )}\r\n                                onChange={(\r\n                                    event: React.ChangeEvent<HTMLInputElement>\r\n                                ) => {\r\n                                    setPassword(event.target.value);\r\n                                }}\r\n                                margin=\"dense\"\r\n                            />\r\n                            <br />\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                onClick={(): void => {\r\n                                    login(userName, password);\r\n                                }}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </Paper>\r\n                    </div>\r\n                );\r\n            })()}\r\n        </div>\r\n    );\r\n};\r\nexport default Login;\r\n","import * as React from 'react';\r\nimport logo from '../PM_Desine.png';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <img src={logo} alt=\"\" width=\"50%\" height=\"40%\" />\r\n            <br />\r\n            <br />\r\n\r\n            <Typography>\r\n                Discordやオフラインセッションでの\r\n                <br />\r\n                キャラクター情報管理ツール\r\n            </Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n            width: '80%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 360,\r\n            },\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        menu: {\r\n            width: '80%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 360,\r\n            },\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 450,\r\n            },\r\n            padding: theme.spacing(3, 2),\r\n        },\r\n        mobile: {\r\n            paddingTop: '100',\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    discordUrl: string;\r\n    diceUrl: string;\r\n    setDiceUrl: (url: string) => void;\r\n    setDiscordUrl: (url: string) => void;\r\n};\r\n\r\nconst Setting: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [nDiscord, setDisordValue] = React.useState(props.discordUrl);\r\n    const [nDice, setDiceValue] = React.useState(props.diceUrl);\r\n\r\n    const setUrl = (newDiceURL: string, newDiscordURL: string): void => {\r\n        props.setDiceUrl(newDiceURL);\r\n        props.setDiscordUrl(newDiscordURL);\r\n        console.log(newDiceURL);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Hidden smUp implementation=\"css\">\r\n                <br className={classes.mobile} />\r\n            </Hidden>\r\n            <h2>Setting</h2>\r\n            <Paper className={classes.paper}>\r\n                <TextField\r\n                    id=\"diceURL\"\r\n                    label=\"Dice API URL\"\r\n                    defaultValue={props.diceUrl}\r\n                    className={clsx(classes.textField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setDiceValue(event.target.value);\r\n                    }}\r\n                    margin=\"dense\"\r\n                />\r\n                <br />\r\n                <TextField\r\n                    id=\"discordURL\"\r\n                    label=\"Discord URL\"\r\n                    defaultValue={props.discordUrl}\r\n                    className={clsx(classes.textField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setDisordValue(event.target.value);\r\n                    }}\r\n                    margin=\"dense\"\r\n                />\r\n                <br />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick={(): void => {\r\n                        setUrl(nDice, nDiscord);\r\n                    }}\r\n                >\r\n                    SET\r\n                </Button>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Setting;\r\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Setting from '../pages/Setting';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        discordUrl: state.setting.discordUrl,\r\n        diceUrl: state.setting.diceUrl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setDiceUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiceUrl({url}));\r\n        },\r\n        setDiscordUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiscordUrl({url}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Setting);","import React, { Dispatch } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: 360,\r\n        },\r\n        numberAbilityField: {\r\n            marginLeft: 0,\r\n            marginRight: 6,\r\n            width: '20%',\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '30%',\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        menu: {\r\n            width: 200,\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            padding: theme.spacing(3, 2),\r\n            width: '90%',\r\n        },\r\n        card: {\r\n            margin: 'auto',\r\n            width: '80%',\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(2),\r\n        },\r\n        chip: {\r\n            marginLeft: theme.spacing(2),\r\n            marginRight: 'auto',\r\n        },\r\n    })\r\n);\r\n\r\nconst setAbilityToDice = (character: character): character => {\r\n    interface ItemNDN {\r\n        count: number;\r\n        number: number;\r\n    }\r\n    const itemNDN: ItemNDN = {\r\n        count: 3,\r\n        number: 6,\r\n    };\r\n\r\n    const newCharacter = JSON.parse(JSON.stringify(character));\r\n\r\n    newCharacter.abilityValues.STR = +ShakeNDNDice(itemNDN).result - 1;\r\n    const CON = +ShakeNDNDice(itemNDN).result - 1;\r\n    newCharacter.abilityValues.CON = CON;\r\n    const POW = +ShakeNDNDice(itemNDN).result - 1;\r\n    newCharacter.abilityValues.POW = POW;\r\n    newCharacter.abilityValues.DEX = +ShakeNDNDice(itemNDN).result - 1;\r\n    newCharacter.abilityValues.APP = +ShakeNDNDice(itemNDN).result - 1;\r\n    newCharacter.abilityValues.EDU = +ShakeNDNDice(itemNDN).result + 3 - 1;\r\n\r\n    itemNDN.count = 2;\r\n    const SIZ = +ShakeNDNDice(itemNDN).result + 6 - 1;\r\n    newCharacter.abilityValues.SIZ = SIZ;\r\n    newCharacter.abilityValues.INT = +ShakeNDNDice(itemNDN).result + 6 - 1;\r\n\r\n    newCharacter.characterInfos.HP = Math.ceil((CON + SIZ) / 2);\r\n    newCharacter.characterInfos.MP = POW;\r\n    newCharacter.characterInfos.SAN = POW * 5;\r\n\r\n    return newCharacter;\r\n};\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <h2>Character Create</h2>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\" //className={classes.button}\r\n                onClick={(): void => {\r\n                    props.setCharacter(setAbilityToDice(props.character));\r\n                }}\r\n            >\r\n                Dice\r\n            </Button>\r\n            <br />\r\n            <br />\r\n\r\n            <Card className={classes.card}>\r\n                <br />\r\n                physical value\r\n                <br />\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"HP\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.characterInfos.HP}\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"MP\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.characterInfos.MP}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <br />\r\n                </Hidden>\r\n                <Chip color=\"primary\" label=\"SAN\" className={classes.chip} />{' '}\r\n                {props.character.characterInfos.SAN}\r\n                <br />\r\n                <br />\r\n            </Card>\r\n            <br />\r\n\r\n            <Card className={classes.card}>\r\n                <br />\r\n                ability value\r\n                <br />\r\n                <TextField\r\n                    id=\"str\"\r\n                    label=\"STR\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.STR}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                STR: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"STR\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"con\"\r\n                    label=\"CON\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.CON}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                CON: +event.target.value,\r\n                            },\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                HP: Math.ceil(\r\n                                    (+event.target.value +\r\n                                        props.character.abilityValues.SIZ) /\r\n                                        2\r\n                                ),\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"CON\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"pow\"\r\n                    label=\"POW\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.POW}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                POW: +event.target.value,\r\n                            },\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                MP: +event.target.value,\r\n                                SAN: +event.target.value * 5,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"POW\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"dex\"\r\n                    label=\"DEX\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.DEX}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                DEX: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"DEX\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n                <TextField\r\n                    id=\"app\"\r\n                    label=\"APP\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.APP}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                APP: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"APP\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"siz\"\r\n                    label=\"SIZ\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.SIZ}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                SIZ: +event.target.value,\r\n                            },\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                HP: Math.ceil(\r\n                                    (+event.target.value +\r\n                                        props.character.abilityValues.CON) /\r\n                                        2\r\n                                ),\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"SIZ\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"int\"\r\n                    label=\"INT\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.INT}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                INT: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"INT\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"edu\"\r\n                    label=\"EDU\"\r\n                    type=\"number\"\r\n                    value={props.character.abilityValues.EDU}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            abilityValues: {\r\n                                ...props.character.abilityValues,\r\n                                EDU: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"EDU\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n            </Card>\r\n\r\n            <br />\r\n            <br />\r\n\r\n            <Card className={classes.card}>\r\n                <br />\r\n                role value\r\n                <br />\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"回避\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.abilityValues.DEX * 2}\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"アイデア\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.abilityValues.INT * 5}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <br />\r\n                </Hidden>\r\n                <Chip color=\"primary\" label=\"知識\" className={classes.chip} />{' '}\r\n                {props.character.abilityValues.EDU * 5}\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"幸運\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.abilityValues.POW * 5}\r\n                <br />\r\n                <br />\r\n            </Card>\r\n            <br />\r\n        </Paper>\r\n    );\r\n};\r\nexport default Making;\r\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport { skill, character } from '../modules/commonType';\n\ntype Props = {\n    skills: skill[];\n    setCharacter: (character: character) => void;\n    setSkillWorkValue: (name: string, work: number) => void;\n    setSkillInterestValue: (name: string, interest: number) => void;\n    checkSetSkillValue: (value: number, isWork: boolean) => boolean;\n};\n\ntype PropsRow = {\n    row: skill;\n    setSkillWorkValue: (name: string, work: number) => void;\n    setSkillInterestValue: (name: string, interest: number) => void;\n    checkSetSkillValue: (value: number, isWork: boolean) => boolean;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        table: {\n            width: '90%',\n        },\n        numberInfoField: {\n            marginLeft: theme.spacing(5),\n            marginRight: 'auto',\n            width: '100%',\n        },\n        name: {\n            width: '40%',\n        },\n        number: {\n            width: '25%',\n        },\n        head: {\n            width: '100%',\n        },\n        body: {\n            width: '100%',\n        },\n    })\n);\n\nconst SkillsTableRow: React.SFC<PropsRow> = (props: PropsRow) => {\n    const classes = useStyles();\n    const [skillWork, setSkillWork] = React.useState<number | string>(\n        props.row.skillWorkValue\n    );\n    const [skillInterest, setSkillInterest] = React.useState<number | string>(\n        props.row.skillInterestValue\n    );\n\n    return (\n        <React.Fragment>\n            <TableCell\n                className={classes.name}\n                rowSpan={2}\n                component=\"th\"\n                scope=\"row\"\n            >\n                {props.row.skillName}\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                {props.row.skillValue}\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                {props.row.skillType}\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                <TextField\n                    id=\"work\"\n                    label=\"Work\"\n                    type=\"number\"\n                    value={skillWork}\n                    className={classes.numberInfoField}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        if (event.target.value === '') {\n                            setSkillWork('');\n                            return;\n                        }\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillInterestValue +\n                                    +event.target.value,\n                                true\n                            ) &&\n                            +event.target.value >= 0\n                        )\n                            setSkillWork(+event.target.value);\n                    }}\n                    onBlur={(\n                        event: React.ChangeEvent<\n                            HTMLInputElement | HTMLTextAreaElement\n                        >\n                    ) => {\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillInterestValue +\n                                    +event.target.value,\n                                true\n                            )\n                        )\n                            props.setSkillWorkValue(\n                                props.row.skillName,\n                                +event.target.value\n                            );\n                    }}\n                    placeholder=\"Work\"\n                    margin=\"normal\"\n                />\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                <TextField\n                    id=\"interest\"\n                    label=\"Interest\"\n                    type=\"number\"\n                    value={skillInterest}\n                    className={classes.numberInfoField}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        if (event.target.value === '') {\n                            setSkillWork('');\n                            return;\n                        }\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillWorkValue +\n                                    +event.target.value,\n                                false\n                            ) &&\n                            +event.target.value >= 0\n                        )\n                            setSkillInterest(+event.target.value);\n                    }}\n                    onBlur={(\n                        event: React.ChangeEvent<\n                            HTMLInputElement | HTMLTextAreaElement\n                        >\n                    ) => {\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillWorkValue +\n                                    +event.target.value,\n                                false\n                            ) &&\n                            +event.target.value >= 0\n                        )\n                            props.setSkillInterestValue(\n                                props.row.skillName,\n                                +event.target.value\n                            );\n                    }}\n                    placeholder=\"Interest\"\n                    margin=\"normal\"\n                />\n            </TableCell>\n        </React.Fragment>\n    );\n};\n\nconst SimpleList: React.SFC<Props> = (props: Props) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table className={classes.table} size=\"small\">\n                <TableHead className={classes.head}>\n                    <TableRow>\n                        <TableCell className={classes.name} rowSpan={2}>\n                            Skill\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Value\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Type\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Work\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Interest\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n\n                {props.skills.map(row => {\n                    if (row == null) return;\n\n                    return (\n                        <TableBody className={classes.body} key={row.skillName}>\n                            <TableRow>\n                                <SkillsTableRow\n                                    setSkillWorkValue={props.setSkillWorkValue}\n                                    setSkillInterestValue={\n                                        props.setSkillInterestValue\n                                    }\n                                    row={row}\n                                    checkSetSkillValue={\n                                        props.checkSetSkillValue\n                                    }\n                                />\n                            </TableRow>\n                        </TableBody>\n                    );\n                })}\n            </Table>\n        </div>\n    );\n};\n\nexport default SimpleList;\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\n\nimport { skill, character } from '../modules/commonType';\n\ntype Props = {\n    skills: skill[];\n    setCharacter: (character: character) => void;\n    setSkillWorkValue: (name: string, work: number) => void;\n    setSkillInterestValue: (name: string, interest: number) => void;\n    checkSetSkillValue: (value: number, isWork: boolean) => boolean;\n};\n\ntype PropsRow = {\n    row: skill;\n    setSkillWorkValue: (name: string, work: number) => void;\n    setSkillInterestValue: (name: string, interest: number) => void;\n    checkSetSkillValue: (value: number, isWork: boolean) => boolean;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        table: {\n            width: '90%',\n        },\n        numberInfoField: {\n            marginLeft: theme.spacing(5),\n            marginRight: 'auto',\n            width: '100%',\n        },\n        name: {\n            width: '40%',\n        },\n        number: {\n            width: '25%',\n        },\n        head: {\n            width: '100%',\n        },\n        body: {\n            width: '100%',\n        },\n    })\n);\nconst SkillsTableRow: React.SFC<PropsRow> = (props: PropsRow) => {\n    const classes = useStyles();\n    const [skillWork, setSkillWork] = React.useState<number | undefined>(\n        props.row.skillWorkValue\n    );\n    const [skillInterest, setSkillInterest] = React.useState<number>(\n        props.row.skillInterestValue\n    );\n\n    return (\n        <React.Fragment>\n            <TableCell\n                className={classes.name}\n                rowSpan={2}\n                component=\"th\"\n                scope=\"row\"\n            >\n                {props.row.skillName}\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                {props.row.skillValue}\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                {props.row.skillType}\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                <TextField\n                    id=\"work\"\n                    label=\"Work\"\n                    type=\"number\"\n                    value={skillWork}\n                    className={classes.numberInfoField}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillInterestValue +\n                                    +event.target.value,\n                                true\n                            ) &&\n                            +event.target.value >= 0\n                        )\n                            setSkillWork(+event.target.value);\n                    }}\n                    onBlur={(\n                        event: React.ChangeEvent<\n                            HTMLInputElement | HTMLTextAreaElement\n                        >\n                    ) => {\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillInterestValue +\n                                    +event.target.value,\n                                true\n                            )\n                        )\n                            props.setSkillWorkValue(\n                                props.row.skillName,\n                                +event.target.value\n                            );\n                    }}\n                    placeholder=\"Work\"\n                    margin=\"normal\"\n                />\n            </TableCell>\n            <TableCell className={classes.number} align=\"right\">\n                <TextField\n                    id=\"interest\"\n                    label=\"Interest\"\n                    type=\"number\"\n                    value={skillInterest}\n                    className={classes.numberInfoField}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillWorkValue +\n                                    +event.target.value,\n                                false\n                            ) &&\n                            +event.target.value >= 0\n                        )\n                            setSkillInterest(+event.target.value);\n                    }}\n                    onBlur={(\n                        event: React.ChangeEvent<\n                            HTMLInputElement | HTMLTextAreaElement\n                        >\n                    ) => {\n                        if (\n                            props.checkSetSkillValue(\n                                props.row.defaultValue +\n                                    props.row.skillWorkValue +\n                                    +event.target.value,\n                                false\n                            ) &&\n                            +event.target.value >= 0\n                        )\n                            props.setSkillInterestValue(\n                                props.row.skillName,\n                                +event.target.value\n                            );\n                    }}\n                    placeholder=\"Interest\"\n                    margin=\"normal\"\n                />\n            </TableCell>\n        </React.Fragment>\n    );\n};\n\nexport default function SimpleList(props: Props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table className={classes.table} size=\"small\">\n                <TableHead className={classes.head}>\n                    <TableRow>\n                        <TableCell className={classes.name} rowSpan={2}>\n                            Skill\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Value\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Type\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell className={classes.number} align=\"right\">\n                            Work\n                        </TableCell>\n                        <TableCell className={classes.number} align=\"right\">\n                            Interest\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n\n                {props.skills.map(row => {\n                    if (row == null) return;\n\n                    return (\n                        <TableBody className={classes.body} key={row.skillName}>\n                            <TableRow>\n                                <SkillsTableRow\n                                    setSkillWorkValue={props.setSkillWorkValue}\n                                    setSkillInterestValue={\n                                        props.setSkillInterestValue\n                                    }\n                                    row={row}\n                                    checkSetSkillValue={\n                                        props.checkSetSkillValue\n                                    }\n                                />\n                            </TableRow>\n                        </TableBody>\n                    );\n                })}\n            </Table>\n        </div>\n    );\n}\n","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\nimport SkillListPC from './SkillList_PC';\nimport SkillListMobile from './SkillList_Mobile';\n\nimport { skill, character } from '../modules/commonType';\n\ntype Props = {\n    skills: skill[];\n    setCharacter: (character: character) => void;\n    setSkillWorkValue: (name: string, work: number) => void;\n    setSkillInterestValue: (name: string, interest: number) => void;\n    checkSetSkillValue: (value: number, isWork: boolean) => boolean;\n};\n\nexport default function SimpleList(props: Props) {\n    return (\n        <div>\n            {/* タブレット以上なら隠す -- モバイル画面で表示 */}\n            <Hidden smUp implementation=\"css\">\n                <SkillListMobile\n                    skills={props.skills}\n                    setCharacter={props.setCharacter}\n                    setSkillInterestValue={props.setSkillInterestValue}\n                    setSkillWorkValue={props.setSkillWorkValue}\n                    checkSetSkillValue={props.checkSetSkillValue}\n                />\n            </Hidden>\n\n            {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\n            <Hidden xsDown implementation=\"css\">\n                <SkillListPC\n                    skills={props.skills}\n                    setCharacter={props.setCharacter}\n                    setSkillInterestValue={props.setSkillInterestValue}\n                    setSkillWorkValue={props.setSkillWorkValue}\n                    checkSetSkillValue={props.checkSetSkillValue}\n                />\n            </Hidden>\n        </div>\n    );\n}\n","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        test: {\r\n            position: 'sticky' /* 要素をスクロールに応じて固定 */,\r\n            top: '30px' /* 縦スクロールに追従 */,\r\n            zIndex: 1 /* z-indexで最前面に持ってくる */,\r\n        },\r\n        card: {\r\n            margin: 0,\r\n            top: 10,\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            left: 10,\r\n            position: 'fixed',\r\n            width: '50%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '20%',\r\n                top: 'auto',\r\n                right: 20,\r\n                bottom: 20,\r\n                left: 'auto',\r\n            },\r\n        },\r\n        chip: {\r\n            marginTop: '10px',\r\n            marginBottom: '10px',\r\n            marginLeft: theme.spacing(5),\r\n            marginRight: 'auto',\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    workPoint: number;\r\n    interestPoint: number;\r\n};\r\n\r\nconst SkillPoint: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.test}>\r\n            <Chip color=\"primary\" label=\"Work Point\" className={classes.chip} />{' '}\r\n            {props.workPoint}\r\n            <Hidden xsDown implementation=\"css\">\r\n                <br />\r\n            </Hidden>\r\n            <Chip\r\n                color=\"primary\"\r\n                label=\"Interest Point\"\r\n                className={classes.chip}\r\n            />{' '}\r\n            {props.interestPoint}\r\n            <br />\r\n        </Card>\r\n    );\r\n};\r\nexport default SkillPoint;\r\n","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport SkillList from '../components/SkillList';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport SkillPoint from '../components/SkillPoint';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '90%',\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '90%',\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        menu: {\r\n            width: 200,\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            padding: theme.spacing(3, 2),\r\n            width: '90%',\r\n        },\r\n        card: {\r\n            margin: 'auto',\r\n            width: '90%',\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(2),\r\n        },\r\n        chip: {\r\n            marginTop: '10px',\r\n            marginBottom: '10px',\r\n            marginLeft: theme.spacing(5),\r\n            marginRight: 'auto',\r\n        },\r\n    })\r\n);\r\n\r\nconst initSkill = (): skill => {\r\n    return {\r\n        skillName: '',\r\n        skillValue: 0,\r\n        skillType: '',\r\n        skillUnique: false,\r\n        skillWorkValue: 0,\r\n        skillInterestValue: 0,\r\n        defaultValue: 0,\r\n    };\r\n};\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst skillTypes = [\r\n    ['戦闘', 'Fight'],\r\n    ['探索', 'Search'],\r\n    ['行動', 'Act'],\r\n    ['交渉', 'Negotiate'],\r\n    ['知識', 'Wisdom'],\r\n];\r\n\r\nconst getSkillIndex = (type: string): number => {\r\n    if (type === '戦闘') return 0;\r\n    if (type === '探索') return 1;\r\n    if (type === '行動') return 2;\r\n    if (type === '交渉') return 3;\r\n    if (type === '知識') return 4;\r\n    return -1;\r\n};\r\n\r\nconst setSkillValue = (\r\n    name: string,\r\n    value: number,\r\n    remainPoint: number,\r\n    character: character,\r\n    interest: boolean,\r\n    setCharacter: (character: character) => void\r\n) => {\r\n    if (value < 0 || remainPoint <= 0) return;\r\n    const newSkills = JSON.parse(JSON.stringify(character.skills));\r\n\r\n    const cSkill =\r\n        newSkills.length == null || newSkills.length === 0\r\n            ? undefined\r\n            : newSkills.find(\r\n                  (s: { skillName: string }) => s.skillName === name\r\n              );\r\n\r\n    if (cSkill == null) return;\r\n    if (interest) cSkill.skillInterestValue = value;\r\n    else cSkill.skillWorkValue = value;\r\n    cSkill.skillValue =\r\n        cSkill.defaultValue + cSkill.skillInterestValue + cSkill.skillWorkValue;\r\n    setCharacter({\r\n        ...character,\r\n        skills: newSkills,\r\n    });\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [openTable, setOpenTable] = React.useState<boolean[]>(\r\n        skillTypes.map(s => {\r\n            return false;\r\n        })\r\n    );\r\n\r\n    const checkSetSkillValue = (skillValue: number, isWork: boolean) => {\r\n        if (skillValue < 0 || skillValue > 100) return false;\r\n        if (isWork && getRemainingWorkPoint() <= 0) return false;\r\n        if (!isWork && getRemainingInterestPoint() <= 0) return false;\r\n        return true;\r\n    };\r\n\r\n    const getWorkPoint = () => {\r\n        if (props.character.skills.length === 0) return 0;\r\n        return props.character.skills\r\n            .map(s => s.skillWorkValue)\r\n            .reduce(function(total, data) {\r\n                return total + data;\r\n            });\r\n    };\r\n\r\n    const getInterestPoint = () => {\r\n        if (props.character.skills.length === 0) return 0;\r\n        return props.character.skills\r\n            .map(s => s.skillInterestValue)\r\n            .reduce(function(total, data) {\r\n                return total + data;\r\n            });\r\n    };\r\n\r\n    const getRemainingWorkPoint = () => {\r\n        return props.character.abilityValues.EDU * 20 - getWorkPoint();\r\n    };\r\n\r\n    const getRemainingInterestPoint = () => {\r\n        return props.character.abilityValues.INT * 10 - getInterestPoint();\r\n    };\r\n\r\n    const getSkills = (type: string): skill[] => {\r\n        const s = props.character.skills.filter(e => e.skillType === type);\r\n        if (s == null) return [initSkill()];\r\n        return s;\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <h2>Character Create</h2>\r\n            <SkillPoint\r\n                workPoint={getRemainingWorkPoint()}\r\n                interestPoint={getRemainingInterestPoint()}\r\n            />\r\n\r\n            {skillTypes.map(element => {\r\n                return (\r\n                    <div key={element[1]}>\r\n                        <br />\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                const newOpen: boolean[] = { ...openTable };\r\n                                newOpen[getSkillIndex(element[0])] = !newOpen[\r\n                                    getSkillIndex(element[0])\r\n                                ];\r\n                                setOpenTable(newOpen);\r\n                            }}\r\n                        >\r\n                            {element[1]}\r\n                        </Button>\r\n\r\n                        <br />\r\n                        <Card>\r\n                            {openTable[getSkillIndex(element[0])] && (\r\n                                <SkillList\r\n                                    skills={getSkills(element[0])}\r\n                                    setCharacter={props.setCharacter}\r\n                                    setSkillInterestValue={(\r\n                                        name: string,\r\n                                        value: number\r\n                                    ) => {\r\n                                        setSkillValue(\r\n                                            name,\r\n                                            value,\r\n                                            getRemainingInterestPoint(),\r\n                                            props.character,\r\n                                            true,\r\n                                            props.setCharacter\r\n                                        );\r\n                                    }}\r\n                                    setSkillWorkValue={(\r\n                                        name: string,\r\n                                        value: number\r\n                                    ) => {\r\n                                        setSkillValue(\r\n                                            name,\r\n                                            value,\r\n                                            getRemainingWorkPoint(),\r\n                                            props.character,\r\n                                            false,\r\n                                            props.setCharacter\r\n                                        );\r\n                                    }}\r\n                                    checkSetSkillValue={checkSetSkillValue}\r\n                                />\r\n                            )}\r\n                        </Card>\r\n                    </div>\r\n                );\r\n            })}\r\n        </Paper>\r\n    );\r\n};\r\nexport default Making;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '90%',\r\n        },\r\n        numberAbilityField: {\r\n            marginLeft: 0,\r\n            marginRight: 6,\r\n            width: '30%',\r\n        },\r\n        numberInfoField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: 'auto',\r\n            width: '30%',\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        },\r\n        menu: {\r\n            width: 200,\r\n        },\r\n        paper: {\r\n            margin: 'auto',\r\n            padding: theme.spacing(3, 2),\r\n            width: '90%',\r\n        },\r\n        card: {\r\n            margin: 'auto',\r\n            width: '90%',\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(2),\r\n        },\r\n        chip: {\r\n            marginLeft: theme.spacing(2),\r\n            marginRight: 'auto',\r\n        },\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [count, setCount] = React.useState(0);\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <h2>Character Create</h2>\r\n            <br />\r\n            <TextField\r\n                id=\"characterName\"\r\n                label=\"Character Name\"\r\n                value={props.character.characterInfos.characterName}\r\n                className={clsx(classes.textField, classes.dense)}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    props.setCharacter({\r\n                        ...props.character,\r\n                        characterInfos: {\r\n                            ...props.character.characterInfos,\r\n                            characterName: event.target.value,\r\n                        },\r\n                    });\r\n                }}\r\n                margin=\"dense\"\r\n            />\r\n            <br />\r\n            <TextField\r\n                id=\"background\"\r\n                label=\"Background\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                value={props.character.characterBackground}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    props.setCharacter({\r\n                        ...props.character,\r\n                        characterBackground: event.target.value,\r\n                    });\r\n                }}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n            />\r\n            <Card className={classes.card}>\r\n                <br />\r\n                infomation value\r\n                <br />\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"HP\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.characterInfos.HP}\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"MP\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.characterInfos.MP}\r\n                <Chip\r\n                    color=\"primary\"\r\n                    label=\"SAN\"\r\n                    className={classes.chip}\r\n                />{' '}\r\n                {props.character.characterInfos.SAN}\r\n                <br />\r\n                <br />\r\n            </Card>\r\n            <br />\r\n\r\n            <Card className={classes.card}>\r\n                <TextField\r\n                    id=\"job\"\r\n                    label=\"job\"\r\n                    value={props.character.characterInfos.job}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                job: event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"JOB\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"age\"\r\n                    label=\"age\"\r\n                    type=\"number\"\r\n                    value={props.character.characterInfos.age}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                age: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"AGE\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"sex\"\r\n                    label=\"sex\"\r\n                    value={props.character.characterInfos.sex}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                sex: event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"SEX\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n\r\n                <TextField\r\n                    id=\"height\"\r\n                    label=\"height\"\r\n                    type=\"number\"\r\n                    value={props.character.characterInfos.height}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                height: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"HEIGHT\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"weight\"\r\n                    label=\"weight\"\r\n                    type=\"number\"\r\n                    value={props.character.characterInfos.weight}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                weight: +event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"WEIGHT\"\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"origin\"\r\n                    label=\"origin\"\r\n                    value={props.character.characterInfos.origin}\r\n                    className={clsx(classes.numberAbilityField, classes.dense)}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        props.setCharacter({\r\n                            ...props.character,\r\n                            characterInfos: {\r\n                                ...props.character.characterInfos,\r\n                                origin: event.target.value,\r\n                            },\r\n                        });\r\n                    }}\r\n                    placeholder=\"ORIGIN\"\r\n                    margin=\"normal\"\r\n                />\r\n                <br />\r\n            </Card>\r\n\r\n            <br />\r\n        </Paper>\r\n    );\r\n};\r\nexport default Making;\r\n","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport CreateAbility from './CreateAbility';\r\nimport CreateSkills from './CreateSkills';\r\nimport CreateInfos from './CreateInfos';\r\nimport defaultSkills from '../characterMakingSkills.json';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            margin: 'auto',\r\n            padding: theme.spacing(3, 2),\r\n            width: '90%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 600,\r\n            },\r\n        },\r\n        root: {\r\n            margin: 'auto',\r\n            width: '80%',\r\n        },\r\n        button: {\r\n            margin: 'auto',\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        instructions: {\r\n            margin: 'auto',\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    })\r\n);\r\n\r\nconst init = (): character => {\r\n    return {\r\n        skills: defaultSkills.skills.map(s => {\r\n            return {\r\n                skillName: s.skillName,\r\n                skillValue: s.skillValue,\r\n                skillType: s.skillType,\r\n                skillUnique: false,\r\n                skillWorkValue: 0,\r\n                skillInterestValue: 0,\r\n                defaultValue: s.skillValue,\r\n            };\r\n        }),\r\n\r\n        characterBackground: '',\r\n        abilityValues: {\r\n            STR: 0,\r\n            CON: 0,\r\n            POW: 0,\r\n            DEX: 0,\r\n            APP: 0,\r\n            SIZ: 0,\r\n            INT: 0,\r\n            EDU: 0,\r\n        },\r\n        characterInfos: {\r\n            characterName: '',\r\n            HP: 0,\r\n            MP: 0,\r\n            SAN: 0,\r\n            damageBonus: '',\r\n            job: '',\r\n            age: 0,\r\n            sex: '',\r\n            height: 0,\r\n            weight: 0,\r\n            origin: '',\r\n        },\r\n    };\r\n};\r\n\r\nfunction getSteps() {\r\n    return [\r\n        'Select character abilitys',\r\n        'Setting skills',\r\n        'Create character infomation',\r\n    ];\r\n}\r\n\r\nconst setSkill = (skill: skill, character: character): character => {\r\n    const newSkills = character.skills.filter(\r\n        s => s.skillName !== skill.skillName\r\n    );\r\n    return {\r\n        ...character,\r\n        skills: [...newSkills, skill],\r\n    };\r\n};\r\n\r\nfunction getStepContent(step: number) {\r\n    switch (step) {\r\n        case 0:\r\n            return 'abilitys';\r\n        case 1:\r\n            return 'skills';\r\n        case 2:\r\n            return 'infomation';\r\n        default:\r\n            return 'Unknown step';\r\n    }\r\n}\r\ntype Props = {\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [character, setCharacter] = React.useState(init());\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [skipped, setSkipped] = React.useState(new Set<number>());\r\n    const steps = getSteps();\r\n\r\n    function isStepSkipped(step: number) {\r\n        return skipped.has(step);\r\n    }\r\n\r\n    function handleNext() {\r\n        const DEX = character.abilityValues.DEX;\r\n        const newCharacter = setSkill(\r\n            {\r\n                skillName: '回避',\r\n                skillValue: DEX * 2,\r\n                skillType: '戦闘',\r\n                skillUnique: true,\r\n                skillWorkValue: 0,\r\n                skillInterestValue: 0,\r\n                defaultValue: DEX * 2,\r\n            },\r\n            character\r\n        );\r\n\r\n        setCharacter(newCharacter);\r\n\r\n        setCharacter({\r\n            ...newCharacter,\r\n            characterInfos: {\r\n                ...newCharacter.characterInfos,\r\n                HP:\r\n                    (newCharacter.abilityValues.CON +\r\n                        newCharacter.abilityValues.SIZ) /\r\n                    2,\r\n                MP: newCharacter.abilityValues.POW,\r\n                SAN: newCharacter.abilityValues.POW * 5,\r\n            },\r\n        });\r\n\r\n        let newSkipped = skipped;\r\n        if (isStepSkipped(activeStep)) {\r\n            newSkipped = new Set(newSkipped.values());\r\n            newSkipped.delete(activeStep);\r\n        }\r\n\r\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n        setSkipped(newSkipped);\r\n    }\r\n\r\n    function handleBack() {\r\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n    }\r\n\r\n    const setUniqueSkills = (setCharacter: (character: character) => void) => {\r\n        character.skills\r\n            .filter(e => e.skillWorkValue !== 0 || e.skillInterestValue !== 0)\r\n            .forEach(e => (e.skillUnique = true));\r\n        setCharacter({ ...character });\r\n    };\r\n\r\n    const setLastCharacter = (setCharacter: (character: character) => void) => {\r\n        setUniqueSkills(setCharacter);\r\n        const POW = character.abilityValues.POW;\r\n        const INT = character.abilityValues.INT;\r\n        const EDU = character.abilityValues.EDU;\r\n\r\n        let newCharacter = setSkill(\r\n            {\r\n                skillName: '幸運',\r\n                skillValue: POW * 5,\r\n                skillType: '探索',\r\n                skillUnique: true,\r\n                skillWorkValue: 0,\r\n                skillInterestValue: 0,\r\n                defaultValue: POW * 5,\r\n            },\r\n            setSkill(\r\n                {\r\n                    skillName: 'アイデア',\r\n                    skillValue: INT * 5,\r\n                    skillType: '探索',\r\n                    skillUnique: true,\r\n                    skillWorkValue: 0,\r\n                    skillInterestValue: 0,\r\n                    defaultValue: INT * 5,\r\n                },\r\n                setSkill(\r\n                    {\r\n                        skillName: '知識',\r\n                        skillValue: EDU * 5,\r\n                        skillType: '探索',\r\n                        skillUnique: true,\r\n                        skillWorkValue: 0,\r\n                        skillInterestValue: 0,\r\n                        defaultValue: EDU * 5,\r\n                    },\r\n                    character\r\n                )\r\n            )\r\n        );\r\n\r\n        setCharacter({ ...character, skills: newCharacter.skills });\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps: { completed?: boolean } = {};\r\n                    const labelProps: { optional?: React.ReactNode } = {};\r\n\r\n                    return (\r\n                        <Step key={label} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <CreateAbility\r\n                    character={character}\r\n                    setCharacter={setCharacter}\r\n                />\r\n            )}\r\n            {activeStep === 1 && (\r\n                <CreateSkills\r\n                    character={character}\r\n                    setCharacter={setCharacter}\r\n                />\r\n            )}\r\n            {activeStep === 2 && (\r\n                <CreateInfos\r\n                    character={character}\r\n                    setCharacter={setCharacter}\r\n                />\r\n            )}\r\n\r\n            <div>\r\n                {activeStep === steps.length ? (\r\n                    <div>\r\n                        {setLastCharacter(props.setCharacter)}\r\n                        <Typography className={classes.instructions}>\r\n                            All steps completed - you&apos;re finished\r\n                        </Typography>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <Typography className={classes.instructions}>\r\n                            {getStepContent(activeStep)}\r\n                        </Typography>\r\n                        <div>\r\n                            <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={handleBack}\r\n                                className={classes.button}\r\n                            >\r\n                                Back\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleNext}\r\n                                className={classes.button}\r\n                            >\r\n                                {activeStep === steps.length - 1\r\n                                    ? 'Finish'\r\n                                    : 'Next'}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Making;\r\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Making from '../pages/Making';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacter: (chara: character) => {\r\n            dispatch(actionCreator.character.setCharacter({chara}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Making);","import * as React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport Home from './containers/Home';\nimport Login from './pages/Login';\nimport Main from './pages/Main';\nimport Setting from './containers/Setting';\nimport Making from './containers/Making';\nimport './App.css';\n\nconst App: React.FC = () => {\n    const [open, setOpen] = React.useState(true);\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <header className=\"App-header\">\n                    <NavBar\n                        //mobile={navigator.userAgent.match(/(iPhone|iPad|iPod|Android)/i) == null}\n                        open={open}\n                        setOpen={setOpen}\n                    />\n                </header>\n\n                <div className=\"App-main\" id=\"app-main\">\n                    <Route exact path=\"/\" component={Main} />\n\n                    <Route\n                        path=\"/home\"\n                        render={() => (\n                            <Home openMobile={open} setOpenMobile={setOpen} />\n                        )}\n                    />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/setting\" component={Setting} />\n                    <Route exact path=\"/making\" component={Making} />\n                </div>\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport './index.css';\n\nimport App from './App';\nimport { rootReducer } from './states';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}