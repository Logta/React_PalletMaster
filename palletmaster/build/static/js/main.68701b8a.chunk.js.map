{"version":3,"sources":["PM_Desine.png","components/NavBar.tsx","states/settings/index.ts","states/settings/SetDiscordUrl.ts","states/settings/SetDiceUrl.ts","states/characters/index.ts","states/characters/SetCharacter.ts","states/characters/SetSkills.ts","states/characters/SetAbilityValues.ts","states/characters/SetCharacterInfos.ts","states/characters/SetCharacterName.ts","states/characters/SetHP.ts","states/characters/SetMP.ts","states/characters/SetSAN.ts","states/characters/SetCharacterBackground.ts","states/index.ts","modules/sendDiscord.ts","components/DiceDialog.tsx","pages/Skill.tsx","containers/Skill.tsx","pages/Character.tsx","containers/Character.tsx","modules/getAbilityValue.ts","pages/Ability.tsx","containers/Ability.tsx","modules/shakeNDNDice.ts","components/DiceNDNDialog.tsx","pages/SAN.tsx","containers/SAN.tsx","pages/Battle.tsx","containers/Battle.tsx","components/ImportPMJDialog.tsx","modules/importPMJ.js","components/SideBar.tsx","containers/SideBar.tsx","pages/Home.tsx","modules/firebase.ts","pages/Login.tsx","pages/Main.tsx","pages/Setting.tsx","containers/Setting.tsx","pages/CreateAbility.tsx","components/SkillList.tsx","pages/CreateSkills.tsx","pages/CreateInfos.tsx","pages/Making.tsx","containers/Making.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","position","zIndex","navBar","left","right","margin","width","menuButton","marginRight","spacing","title","login","NavBar","classes","React","useState","value","setValue","AppBar","className","Toolbar","Typography","variant","BottomNavigation","onChange","event","newValue","BottomNavigationAction","component","Link","to","label","icon","Button","color","actionCreator","setDiscordUrl","payload","type","setDiceUrl","setCharacter","setSkills","setAbilityValues","setCharacterInfos","setCharacterName","setHP","setMP","setSAN","setCharacterBackground","rootReducer","combineReducers","setting","state","discordUrl","diceUrl","action","url","character","skills","characterBackground","abilityValues","STR","CON","POW","DEX","APP","SIZ","INT","EDU","characterInfos","characterName","HP","MP","SAN","damageBonus","job","age","sex","height","weight","origin","Object","assign","chara","hp","mp","san","background","Settings","Characters","ShakeDice","item","result","ok","_1d100Value","Math","round","random","name","AlertDialog","props","handleClose","setOpen","open","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","onClick","autoFocus","marginTop","overflowX","table","minWidth","numberInfoField","marginLeft","fab","chip","connect","dispatch","category","setCategory","skill","setSkill","openDialog","setOpenDialog","user","setItem","setItems","ability","Paper","clsx","Chip","TextField","defaultValue","target","placeholder","Fab","aria-label","addSkill","skillName","skillValue","skillType","skillUnique","skillWorkValue","skillInterestValue","newSkills","JSON","parse","stringify","cSkill","length","undefined","find","s","InputLabel","htmlFor","Select","onOpen","inputProps","MenuItem","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","_","console","log","String","handleClick","scope","button","input","display","textField","numberAbilityField","dense","menu","paper","padding","card","Character","multiline","rowsMax","Card","newAbilityValues","match","val","on","pred","fn","otherwise","when","chain","getAbilityValue","abilityValue","power","eq","val1","val2","getAbility","Ability","setPower","showLabels","ShakeNDNDice","diceResults","count","number","i","push","reduce","total","data","SANValue","diffSAN","setDiffSAN","SANFunc","countDice","setCountDice","numberDice","setNumberDice","SANIdea","idea","HPDiff","setHPDiff","FormDialog","File","file","setFile","setChara","e","files","handleChangeFile","func","reader","FileReader","onerror","alert","readAsText","addEventListener","json","onSubmit","maxWidth","backgroundColor","palette","List","ListItem","ListItemIcon","ListItemText","primary","Divider","drawer","breakpoints","up","flexShrink","toolbar","mixins","drawerPaper","content","flexGrow","ResponsiveDrawer","container","useTheme","mobileOpen","setMobileOpen","SideBar","CssBaseline","Drawer","anchor","direction","ModalProps","keepMounted","exact","path","Skill","document","getElementById","Abillity","Battle","require","config","apiKey","process","authDomain","databaseURL","projectId","REACT_APP_PROJECT_ID","storageBucket","messagingSenderId","appId","firebase","Login","userName","setUserName","password","setPassword","auth","currentUser","signOut","then","email","signInWithEmailAndPassword","Main","src","logo","alt","Setting","nDiscord","setDisordValue","nDice","setDiceValue","newDiceURL","newDiscordURL","Making","itemNDN","newCharacter","setAbilityToDice","SimpleList","size","setSkillWorkValue","setSkillInterestValue","skillTypes","getWorkPoint","getRemainingWorkPoint","getRemainingInterestPoint","getSkills","filter","element","instructions","marginBottom","defaultSkills","activeStep","setActiveStep","Set","skipped","setSkipped","steps","Stepper","index","Step","StepLabel","CreateAbility","CreateSkills","CreateInfos","forEach","step","getStepContent","disabled","prevActiveStep","newSkipped","has","values","delete","App","Home","Boolean","window","location","hostname","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68701b8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PM_Desine.02fe71ee.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport PalletIcon from '@material-ui/icons/ColorLens';\r\nimport FavoriteIcon from '@material-ui/icons/OfflinePin';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'fixed',\r\n      zIndex: 1,\r\n    },\r\n    navBar:{\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      margin: 'auto',\r\n      width: 500,\r\n      zIndex: 2,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      //flexGrow: 1,\r\n    },\r\n    login: {\r\n      margin: '0 0 0 auto', \r\n    }\r\n  })\r\n);\r\n\r\nconst NavBar: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    \r\n    <AppBar\r\n    className={classes.root}>\r\n    <Toolbar>\r\n      {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n        <MenuIcon />\r\n      </IconButton> */}\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n        Palletmaster\r\n      </Typography>\r\n\r\n      <BottomNavigation value={value} onChange={handleChange} \r\n        className={classes.navBar}>\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/home\" label=\"Pallet\" value=\"pallet\" icon={<PalletIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/login\" label=\"Login\" value=\"login\" icon={<FavoriteIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/setting\" label=\"Setting\" value=\"setting\" icon={<SettingIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/making\" label=\"Create\" value=\"create\" icon={<CreateIcon />} />\r\n      </BottomNavigation>\r\n      \r\n      <Button color=\"inherit\" className={classes.login}>Login</Button>\r\n    </Toolbar>\r\n  </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import { setDiscordUrl, SetDiscordUrlAction } from './SetDiscordUrl';\r\nimport { setDiceUrl, SetDiceUrlAction } from './SetDiceUrl';\r\n\r\ntype Actions\r\n    = SetDiscordUrlAction\r\n    | SetDiceUrlAction;\r\n\r\nexport type State = {    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n    discordUrl: string;\r\n    diceUrl: string;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        discordUrl: \"\",\r\n        diceUrl: \"\",\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_DISCORD_URL_SETTING':\r\n            return {\r\n                ...state,\r\n                discordUrl: action.payload.url,\r\n            };\r\n        case 'SET_DICE_URL_SETTING':\r\n            return{\r\n                ...state,\r\n                diceUrl: action.payload.url,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setDiscordUrl,\r\n    setDiceUrl,\r\n};","import { Action } from 'redux';\r\n\r\nexport type SetDiscordUrlPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiscordUrlAction extends Action {\r\n    type: 'SET_DISCORD_URL_SETTING';\r\n    payload: SetDiscordUrlPayload;\r\n}\r\n\r\nexport const setDiscordUrl = (payload: SetDiscordUrlPayload): SetDiscordUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DISCORD_URL_SETTING',\r\n    };\r\n};","import { Action } from 'redux';\r\n\r\nexport type SetDiceUrlPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiceUrlAction extends Action {\r\n    type: 'SET_DICE_URL_SETTING';\r\n    payload: SetDiceUrlPayload;\r\n}\r\n\r\nexport const setDiceUrl = (payload: SetDiceUrlPayload): SetDiceUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DICE_URL_SETTING',\r\n    };\r\n};","import { setCharacter, SetCharacterAction } from './SetCharacter';\r\nimport { setSkills, SetSkillsAction } from './SetSkills';\r\nimport { setAbilityValues, SetAbilityValuesAction } from './SetAbilityValues';\r\nimport { setCharacterInfos, SetCharacterInfosAction } from './SetCharacterInfos';\r\nimport { setCharacterName, SetCharacterNameAction } from './SetCharacterName';\r\nimport { setHP, SetHPAction } from './SetHP';\r\nimport { setMP, SetMPAction } from './SetMP';\r\nimport { setSAN, SetSANAction } from './SetSAN';\r\nimport { setCharacterBackground, SetCharacterBackgroundAction } from './SetCharacterBackground';\r\n\r\ntype Actions\r\n    = SetCharacterAction | \r\n    SetSkillsAction| \r\n    SetAbilityValuesAction| \r\n    SetCharacterInfosAction| \r\n    SetCharacterNameAction| \r\n    SetHPAction| \r\n    SetMPAction|\r\n    SetSANAction|\r\n    SetCharacterBackgroundAction ;\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\nexport type State = {    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n    character: character;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        character: {\r\n            skills: [],\r\n            characterBackground: \"\",\r\n            abilityValues: {\r\n                STR: 0,\r\n                CON: 0,\r\n                POW: 0,\r\n                DEX: 0,\r\n                APP: 0,\r\n                SIZ: 0,\r\n                INT: 0,\r\n                EDU: 0\r\n            },\r\n            characterInfos: {\r\n                characterName: \"\",\r\n                HP: 0,\r\n                MP: 0,\r\n                SAN: 0,\r\n                damageBonus: \"\",\r\n                job: \"\",\r\n                age: 0,\r\n                sex: \"\",\r\n                height: 0,\r\n                weight: 0,\r\n                origin: \"\"\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_CHARACTER':\r\n            return Object.assign({}, state, {\r\n                character: action.payload.chara,\r\n              });\r\n        case 'SET_SKILLS':\r\n            return{\r\n                ...state,\r\n                character:{\r\n                    ...state.character,\r\n                    skills: action.payload.skills,\r\n                }\r\n            };\r\n        case 'SET_ABILITY_VALUES':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    abilityValues: action.payload.abilityValues,\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_INFOS':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: action.payload.characterInfos,\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_NAME':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        characterName: action.payload.characterName,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_HP':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        HP: action.payload.hp,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_MP':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        MP: action.payload.mp,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_SAN':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        SAN: action.payload.san,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_BACKGROUND':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterBackground: action.payload.background,\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setCharacter,\r\n    setSkills,\r\n    setAbilityValues,\r\n    setCharacterInfos,\r\n    setCharacterName,\r\n    setHP,\r\n    setMP,\r\n    setSAN,\r\n    setCharacterBackground\r\n};","import { Action } from 'redux';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\n\r\nexport type SetCharacterPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    chara: character\r\n};\r\n\r\nexport interface SetCharacterAction extends Action {\r\n    type: 'SET_CHARACTER';\r\n    payload: SetCharacterPayload;\r\n}\r\n\r\nexport const setCharacter = (payload: SetCharacterPayload): SetCharacterAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_CHARACTER',\r\n    };\r\n};","import { Action } from 'redux';\n\ntype skill = {\n    skillName: string,\n    skillValue: number,\n    skillType: string,\n    skillUnique: boolean,\n    skillWorkValue: number,\n    skillInterestValue: number,\n    defaultValue: number\n};\n\nexport type SetSkillsPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    skills: skill[];\n};\n\nexport interface SetSkillsAction extends Action {\n    type: 'SET_SKILLS';\n    payload: SetSkillsPayload;\n}\n\nexport const setSkills = (payload: SetSkillsPayload): SetSkillsAction => {\n    return {\n        payload,\n        type: 'SET_SKILLS',\n    };\n};","import { Action } from 'redux';\n\ntype AbilityValues = {\n    STR: number,\n    CON: number,\n    POW: number,\n    DEX: number,\n    APP: number,\n    SIZ: number,\n    INT: number,\n    EDU: number,\n};\n\nexport type SetAbilityValuesPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    abilityValues: AbilityValues;\n};\n\nexport interface SetAbilityValuesAction extends Action {\n    type: 'SET_ABILITY_VALUES';\n    payload: SetAbilityValuesPayload;\n}\n\nexport const setAbilityValues = (payload: SetAbilityValuesPayload): SetAbilityValuesAction => {\n    return {\n        payload,\n        type: 'SET_ABILITY_VALUES',\n    };\n};","import { Action } from 'redux';\n\ntype CharacterInfos = {\n    characterName: string,\n    HP: number,\n    MP: number,\n    SAN: number,\n    damageBonus: string,\n    job: string,\n    age: number,\n    sex: string,\n    height: number,\n    weight: number,\n    origin: string,\n};\n\nexport type SetCharacterInfosPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    characterInfos: CharacterInfos;\n};\n\nexport interface SetCharacterInfosAction extends Action {\n    type: 'SET_CHARACTER_INFOS';\n    payload: SetCharacterInfosPayload;\n}\n\nexport const setCharacterInfos = (payload: SetCharacterInfosPayload): SetCharacterInfosAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_INFOS',\n    };\n};","import { Action } from 'redux';\n\nexport type SetCharacterNamePayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    characterName: string;\n};\n\nexport interface SetCharacterNameAction extends Action {\n    type: 'SET_CHARACTER_NAME';\n    payload: SetCharacterNamePayload;\n}\n\nexport const setCharacterName = (payload: SetCharacterNamePayload): SetCharacterNameAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_NAME',\n    };\n};","import { Action } from 'redux';\n\nexport type SetHPPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    hp: number;\n};\n\nexport interface SetHPAction extends Action {\n    type: 'SET_HP';\n    payload: SetHPPayload;\n}\n\nexport const setHP = (payload: SetHPPayload): SetHPAction => {\n    return {\n        payload,\n        type: 'SET_HP',\n    };\n};","import { Action } from 'redux';\n\nexport type SetMPPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    mp: number;\n};\n\nexport interface SetMPAction extends Action {\n    type: 'SET_MP';\n    payload: SetMPPayload;\n}\n\nexport const setMP = (payload: SetMPPayload): SetMPAction => {\n    return {\n        payload,\n        type: 'SET_MP',\n    };\n};","import { Action } from 'redux';\n\nexport type SetSANPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    san: number;\n};\n\nexport interface SetSANAction extends Action {\n    type: 'SET_SAN';\n    payload: SetSANPayload;\n}\n\nexport const setSAN = (payload: SetSANPayload): SetSANAction => {\n    return {\n        payload,\n        type: 'SET_SAN',\n    };\n};","import { Action } from 'redux';\n\nexport type SetCharacterBackgroundPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    background: string;\n};\n\nexport interface SetCharacterBackgroundAction extends Action {\n    type: 'SET_CHARACTER_BACKGROUND';\n    payload: SetCharacterBackgroundPayload;\n}\n\nexport const setCharacterBackground = (payload: SetCharacterBackgroundPayload): SetCharacterBackgroundAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_BACKGROUND',\n    };\n};","import { combineReducers } from 'redux';\r\nimport * as Settings from './settings';\r\nimport * as Characters from './characters';\r\n\r\nexport type RootState = {\r\n    setting: Settings.State;\r\n    character: Characters.State;\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    setting: Settings.reducer,\r\n    character: Characters.reducer,\r\n});\r\n\r\nexport const actionCreator = {\r\n    setting: Settings.actionCreator,\r\n    character: Characters.actionCreator,\r\n};","interface Item {\r\n  name: string;\r\n  url: string;\r\n  user: string;\r\n  value: string;\r\n}\r\n\r\ninterface Result {\r\n  ok: string;\r\n  result: string;\r\n}\r\n\r\nexport function sendBCDice(item: Item) \r\n{\r\n  sendDice(sendDiscordText, item);\r\n}\r\n\r\nfunction ShakeDice(item: Item): Result\r\n{\r\n  let result: Result = {\r\n    ok :\"\",\r\n    result : \"\",\r\n  };\r\n  let _1d100Value: number = Math.round(Math.random() * 100) + 1;\r\n  if(_1d100Value <= 5){\r\n    result.ok = \"クリティカル\"\r\n  }else if(_1d100Value <= +item.value){\r\n    result.ok = \"成功\"\r\n  }else{\r\n    result.ok = \"失敗\"\r\n  }\r\n\r\n  result.result = \"技能:\" + item.name + \" \" + _1d100Value\r\n   + \" <= \" + item.value;\r\n\r\n   return result;\r\n}\r\n\r\nfunction sendDiscordText(result: Result, item: Item) {\r\n  if (result.ok) {\r\n    const webhook = require(\"webhook-discord\");\r\n\r\n    const Hook = new webhook.Webhook(item.url);\r\n    Hook.info(item.user, item.name + \" \" + result.result);\r\n  }\r\n}\r\n\r\nasync function sendDice(func: (json: Result, item: Item) => void, item: Item) {\r\n  const url =\r\n    \"https://www.taruki.com/bcdice-api\" +\r\n    \"/v1/diceroll?system=Cthulhu&command=\" +\r\n    \"CCB<=\" +\r\n    item.value; // リクエスト先URL\r\n\r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then(response => {\r\n      let json = response;\r\n      const jsonLog = JSON.stringify(json);\r\n      if (response.ok) {\r\n        return func(json, item);\r\n      }\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nexport function goodbye(name: string) {\r\n  return `Goodbye ${name}`;\r\n}\r\n\r\nexport default ShakeDice;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ShakeDice from '../modules/sendDiscord';\r\n\r\ninterface Item {\r\n    name: string;\r\n    url: string;\r\n    user: string;\r\n    value: string;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    item: Item;\r\n    setOpen(open :boolean) : void;\r\n};\r\n\r\nexport default function AlertDialog(props: Props) {\r\n  let result :Result = {\r\n    ok: \"\",\r\n    result: \"\",\r\n  }\r\n  if(props.open){\r\n    result = ShakeDice(props.item);\r\n  }\r\n\r\n  function handleClickOpen() {\r\n    props.setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Dice Result\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.ok }\r\n          </DialogContentText><br />\r\n          \r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.result }\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport clsx from 'clsx';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '75%',\r\n      margin: 'auto',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 500,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    fab: {\r\n      marginLeft: theme.spacing(5),\r\n      margin: theme.spacing(1),\r\n    },\r\n    chip: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype Props = {\r\n    skills: skill[];\r\n    setSkills(skills: skill[]) : void;\r\n};\r\n\r\nexport default function SimpleTable(props: Props) {\r\n  const classes = useStyles();\r\n  const [category, setCategory] = React.useState<string>(\"unique\");\r\n  const [skill, setSkill] = React.useState<string>(\"\");\r\n  const [value, setValue] = React.useState<number>(0);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const handleClick = (skillName: string ): void =>\r\n  {\r\n    const skill: skill | undefined = props.skills.find(s =>(s.skillName === skillName));\r\n    if(skill == null) return;\r\n    setItems(skillName, String(skill.skillValue));\r\n  }\r\n\r\n  function handleChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n    setCategory(event.target.value as string);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  const setSkills = (skill: string, value: number): void =>\r\n  {\r\n    const addSkill : skill = {\r\n      skillName: \"\",\r\n      skillValue: 0,\r\n      skillType: \"追加\",\r\n      skillUnique: true,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: 0\r\n  };\r\n  \r\n    const newSkills = JSON.parse(JSON.stringify(props.skills));\r\n\r\n    const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n      undefined : \r\n      newSkills.find((s: { skillName: string; }) => s.skillName === skill);\r\n\r\n    if(cSkill == null){\r\n      addSkill.skillName = skill;\r\n      addSkill.skillValue = value;\r\n      props.setSkills([...props.skills, addSkill]);\r\n    }else{\r\n      cSkill.skillValue = value;\r\n      props.setSkills(newSkills);\r\n    }\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    <Paper className={clsx(classes.root)}>\r\n      <br />\r\n      <Chip color=\"primary\" label=\"Skill\" />        \r\n      <TextField\r\n        id=\"san\"\r\n        label=\"Skill\"\r\n        type=\"text\"\r\n        defaultValue={skill}\r\n        className={classes.numberInfoField}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setSkill(event.target.value)}}\r\n        placeholder=\"Skill\"\r\n        margin=\"normal\"\r\n        />      \r\n        <Chip color=\"primary\" label=\"Value\" className={classes.chip}　/>    \r\n        <TextField\r\n          id=\"san\"\r\n          label=\"Value\"\r\n          type=\"number\"\r\n          defaultValue={value}\r\n          className={classes.numberInfoField}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setValue(+event.target.value)}}\r\n          placeholder=\"Value\"\r\n          margin=\"normal\"\r\n          />\r\n\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <AddIcon onClick={() => {setSkills(skill, value)}}/>\r\n        </Fab>\r\n      <br />\r\n      <br />\r\n\r\n      <InputLabel htmlFor=\"demo-controlled-open-select\">Category</InputLabel>\r\n      <Select\r\n        open={open}\r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        value={category}\r\n        onChange={handleChange}\r\n        inputProps={{\r\n          name: 'category',\r\n          id: 'demo-controlled-open-select',\r\n        }}\r\n      >\r\n        <MenuItem value=\"unique\">\r\n          <em>Unique</em>\r\n        </MenuItem>\r\n        <MenuItem value={\"戦闘\"}>Fight</MenuItem>\r\n        <MenuItem value={\"探索\"}>Search</MenuItem>\r\n        <MenuItem value={\"知識\"}>Wisdom</MenuItem>\r\n        <MenuItem value={\"行動\"}>Act</MenuItem>\r\n        <MenuItem value={\"交渉\"}>Negotiation</MenuItem>\r\n        <MenuItem value={\"all\"}>ALL</MenuItem>\r\n      </Select>\r\n      <br />\r\n      <br />\r\n    </Paper>\r\n\r\n    <Paper className={classes.root}>\r\n\r\n\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Skill</TableCell>\r\n            <TableCell align=\"right\">Value</TableCell>\r\n            <TableCell align=\"right\">Type</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.skills.map(row => {\r\n            if(category === \"unique\" && !row.skillUnique){ return };\r\n            if(category !== \"unique\" && category !== \"all\" && row.skillType !== category){ return };\r\n\r\n            return <TableRow key={row.skillName} \r\n              onClick={_ => {\r\n                console.log(\"onclick\");\r\n                handleClick(row.skillName)\r\n                setOpenDialog(true);}\r\n              }>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.skillName}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.skillValue}</TableCell>\r\n              <TableCell align=\"right\">{row.skillType}</TableCell>\r\n            </TableRow>\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <DiceDialog open={openDialog} setOpen={setOpenDialog} item={item} />\r\n    </Paper>\r\n    </div>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Skill from '../pages/Skill';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return { \r\n        skills: state.character.character.skills,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSkills: (skills: skill[]) => {\r\n            dispatch(actionCreator.character.setSkills({skills}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Skill);","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 360,\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: 78,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: 600,\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: 500,\r\n    }\r\n  }),\r\n);\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype Props = {\r\n  characterInfos: characterInfo;\r\n  abilityValues: abilityValue;\r\n  characterBackground: string | undefined;\r\n  setCharacterName: (characterName: string) => void;\r\n  setHP: (hp: number) => void;\r\n  setMP: (mp: number) => void;\r\n  setSAN: (san: number) => void;\r\n  setCharacterBackground: (background: string) => void;\r\n  setCharacterInfos: (characterInfos: characterInfo) => void;\r\n  setAbilityValues: (abilityValues: abilityValue) => void;\r\n};\r\n\r\nconst Character: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Infomation</h2>\r\n\r\n      <TextField\r\n        id=\"characterName\"\r\n        label=\"Character Name\"\r\n        value={props.characterInfos.characterName}\r\n        className={clsx(classes.textField, classes.dense)}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {props.setCharacterName(event.target.value);}}\r\n        margin=\"dense\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        id=\"background\"\r\n        label=\"Background\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={props.characterBackground}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setCharacterBackground(event.target.value)}}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        physical value\r\n        <br />\r\n        \r\n        <TextField\r\n        id=\"hp\"\r\n        label=\"HP\"\r\n        type=\"number\"\r\n        value={props.characterInfos.HP}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setHP(+event.target.value)}}\r\n        placeholder=\"HP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"mp\"\r\n        label=\"MP\"\r\n        type=\"number\"\r\n        value={props.characterInfos.MP}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setMP(+event.target.value)}}\r\n        placeholder=\"MP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"san\"\r\n        label=\"SAN\"\r\n        type=\"number\"\r\n        value={props.characterInfos.SAN}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setSAN(+event.target.value)}}\r\n        placeholder=\"SAN\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n      <br />\r\n\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        ability value\r\n        <br />\r\n        <TextField\r\n        id=\"str\"\r\n        label=\"STR\"\r\n        type=\"number\"\r\n        value={props.abilityValues.STR}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={\r\n          (event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.STR = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);\r\n        }}\r\n        placeholder=\"STR\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"con\"\r\n        label=\"CON\"\r\n        type=\"number\"\r\n        value={props.abilityValues.CON}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={\r\n          (event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.CON = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"CON\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"pow\"\r\n        label=\"POW\"\r\n        type=\"number\"\r\n        value={props.abilityValues.POW}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.POW = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"POW\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"dex\"\r\n        label=\"DEX\"\r\n        type=\"number\"\r\n        value={props.abilityValues.DEX}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.DEX = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"DEX\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n\r\n        <TextField\r\n        id=\"app\"\r\n        label=\"APP\"\r\n        type=\"number\"\r\n        value={props.abilityValues.APP}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.APP = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"APP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"siz\"\r\n        label=\"SIZ\"\r\n        type=\"number\"\r\n        value={props.abilityValues.SIZ}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.SIZ = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"SIZ\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"int\"\r\n        label=\"INT\"\r\n        type=\"number\"\r\n        value={props.abilityValues.INT}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.INT = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"INT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"edu\"\r\n        label=\"EDU\"\r\n        type=\"number\"\r\n        value={props.abilityValues.EDU}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.EDU = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"EDU\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n\r\n      <br />\r\n    </Paper>\r\n  );\r\n}\r\nexport default Character;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Character from '../pages/Character';\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state.character);\r\n    return {\r\n        characterInfos: state.character.character.characterInfos,\r\n        abilityValues: state.character.character.abilityValues,\r\n        characterBackground: state.character.character.characterBackground,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacterName: (characterName: string) => {\r\n            dispatch(actionCreator.character.setCharacterName({characterName}));\r\n        },\r\n        setHP: (hp: number) => {\r\n            dispatch(actionCreator.character.setHP({hp}));\r\n        },\r\n        setMP: (mp: number) => {\r\n            dispatch(actionCreator.character.setMP({mp}));\r\n        },\r\n        setSAN: (san: number) => {\r\n            dispatch(actionCreator.character.setSAN({san}));\r\n        },\r\n        setCharacterBackground: (background: string) => {\r\n            dispatch(actionCreator.character.setCharacterBackground({background}));\r\n        },\r\n        setCharacterInfos: (characterInfos: characterInfo) => {\r\n            dispatch(actionCreator.character.setCharacterInfos({characterInfos}));\r\n        },\r\n        setAbilityValues: (abilityValues: abilityValue) => {\r\n            dispatch(actionCreator.character.setAbilityValues({abilityValues}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Character);","type abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n  };\r\n\r\nfunction getAbilityValue(item: string, abilityValue: abilityValue, power: number) : string{\r\n\r\n    return String(getAbility(item, abilityValue) * power);\r\n};\r\n\r\nfunction getAbility(item: string, abilityValue: abilityValue) : number{\r\n    const eq = <T>(val1: T) => (val2: T) => val1 === val2;\r\n        \r\n    const result = when(item)\r\n    .on(eq(\"STR\"), () => abilityValue.STR)\r\n    .on(eq(\"CON\"), () => abilityValue.CON)\r\n    .on(eq(\"POW\"), () => abilityValue.POW)\r\n    .on(eq(\"DEX\"), () => abilityValue.DEX)\r\n    .on(eq(\"APP\"), () => abilityValue.APP)\r\n    .on(eq(\"SIZ\"), () => abilityValue.SIZ)\r\n    .on(eq(\"INT\"), () => abilityValue.INT)\r\n    .on(eq(\"EDU\"), () => abilityValue.EDU)\r\n    .otherwise(() => -1)\r\n\r\n    return result;\r\n};\r\n\r\ntype ChainedWhen<T, R> = {\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) => ChainedWhen<T, R | A>;\r\n    otherwise: <A>(fn: () => A) => R | A;\r\n};\r\n\r\nconst match = <T, R>(val: any): ChainedWhen<T, R> => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) => match<T, R | A>(val),\r\n    otherwise: <A>(fn: () => A): A | R => val\r\n});\r\n\r\nconst chain = <T, R>(val: T): ChainedWhen<T, R> => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) =>\r\n        pred(val) ? match(fn()) : chain<T, A | R>(val),\r\n    otherwise: <A>(fn: () => A) => fn()\r\n});\r\n\r\nconst when = <T>(val: T) => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) =>\r\n        pred(val) ? match<T, A>(fn()) : chain<T, A>(val)\r\n});\r\n\r\nexport default getAbilityValue;","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport STRIcon from '@material-ui/icons/FlashOn';\r\nimport CONIcon from '@material-ui/icons/Favorite';\r\nimport POWIcon from '@material-ui/icons/Visibility';\r\nimport DEXIcon from '@material-ui/icons/DirectionsRun';\r\nimport APPIcon from '@material-ui/icons/Face';\r\nimport SIZIcon from '@material-ui/icons/AccessibilityNewOutlined';\r\nimport INTIcon from '@material-ui/icons/WbIncandescentOutlined';\r\nimport EDUIcon from '@material-ui/icons/LocalLibrary';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Paper } from '@material-ui/core/';\r\n\r\nimport getAbilityValue from '../modules/getAbilityValue';\r\nimport DiceDialog from '../components/DiceDialog';\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ninterface Item {\r\n  name: string;\r\n  url: string;\r\n  user: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 500,\r\n      margin: \"auto\"\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: 78,\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      width:600,\r\n      padding: theme.spacing(3, 2),\r\n    }\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  abilityValues: abilityValue;\r\n};\r\n\r\nconst Ability: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"STR\");\r\n  const [power, setPower] = React.useState(5);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Ability Role</h2>\r\n\r\n      <Paper className = {classes.paper}>\r\n      ability\r\n      <BottomNavigation\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction value={\"STR\"} label=\"STR\" icon={<STRIcon />} />\r\n        <BottomNavigationAction value={\"CON\"} label=\"CON\" icon={<CONIcon />} />\r\n        <BottomNavigationAction value={\"POW\"} label=\"POW\" icon={<POWIcon />} />\r\n        <BottomNavigationAction value={\"DEX\"} label=\"DEX\" icon={<DEXIcon />} />\r\n      </BottomNavigation>\r\n      <BottomNavigation\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction value={\"APP\"} label=\"APP\" icon={<APPIcon />} />\r\n        <BottomNavigationAction value={\"SIZ\"} label=\"SIZ\" icon={<SIZIcon />} />\r\n        <BottomNavigationAction value={\"INT\"} label=\"INT\" icon={<INTIcon />} />\r\n        <BottomNavigationAction value={\"EDU\"} label=\"EDU\" icon={<EDUIcon />} />\r\n      </BottomNavigation>\r\n\r\n      <TextField\r\n        id=\"power\"\r\n        label=\"Power\"\r\n        type=\"number\"\r\n        defaultValue={power}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={\r\n          (event: React.ChangeEvent<HTMLInputElement>) => {setPower(+event.target.value);}}\r\n        placeholder=\"Power\"\r\n        margin=\"normal\"\r\n        />\r\n        </Paper>\r\n\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{\r\n          setItems(value, getAbilityValue(value, props.abilityValues, power));\r\n          setOpen(true);\r\n          }}>\r\n          Send\r\n        </Button>\r\n\r\n        <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n    </div>\r\n  );\r\n}\r\nexport default Ability;","import { connect } from 'react-redux';\r\n\r\nimport { RootState  } from '../states';\r\nimport Ability from '../pages/Ability';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state.character);\r\n    return {\r\n        abilityValues: state.character.character.abilityValues,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Ability);","interface ItemNDN {\r\n  count: number;\r\n  number: number;\r\n}\r\n\r\ninterface Result {\r\n  ok: string;\r\n  result: string;\r\n}\r\n\r\nfunction ShakeNDNDice(item: ItemNDN): Result\r\n{\r\n  let diceResults: number[] = [];\r\n\r\n  let result: Result = {\r\n    ok : String(item.count) + \"D\" + String(item.number),\r\n    result : \"\",\r\n  };\r\n\r\n  for(var i = 0; i < item.count ; i++){\r\n    diceResults.push(Math.round(Math.random() * item.number) + 1);\r\n  }\r\n\r\n  result.result = String(diceResults.reduce(function(total, data){return total + data}));\r\n\r\n  return result;\r\n}\r\n\r\nexport default ShakeNDNDice;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\n\r\ninterface ItemNDN {\r\n  count: number;\r\n  number: number;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    item: ItemNDN;\r\n    setOpen(open :boolean) : void;\r\n};\r\n\r\nexport default function AlertDialog(props: Props) {\r\n  let result :Result = {\r\n    ok: \"\",\r\n    result: \"\",\r\n  }\r\n  if(props.open){\r\n    result = ShakeNDNDice(props.item);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Dice Result\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.ok }\r\n          </DialogContentText><br />\r\n          \r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.result }\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport DiceNDNDialog from '../components/DiceNDNDialog';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: 600,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(10),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    fab: {\r\n      marginLeft: theme.spacing(5),\r\n      margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype Props = {\r\n  skills: skill[],\r\n  SAN: number,\r\n  characterName: string,\r\n  setSAN: (san: number) => void,\r\n};\r\n\r\ntype PropsSAN = {\r\n  SAN: number,\r\n  characterName: string,\r\n  setSAN: (san: number) => void,\r\n};\r\n\r\ntype PropsIdea = {\r\n  skills: skill[],\r\n};\r\n\r\nconst SANValue: React.SFC<PropsSAN> = (props: PropsSAN) => {\r\n  const classes = useStyles();\r\n  const [diffSAN, setDiffSAN] = React.useState(1);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <Chip color=\"primary\" label=\"SAN\" /> {props.SAN}        \r\n      <TextField\r\n        id=\"san\"\r\n        label=\"SAN\"\r\n        type=\"number\"\r\n        defaultValue={diffSAN}\r\n        className={classes.numberInfoField}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setDiffSAN(+event.target.value)}}\r\n        placeholder=\"SAN\"\r\n        margin=\"normal\"\r\n        />\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <AddIcon onClick={() => {props.setSAN(props.SAN + diffSAN)}}/>\r\n        </Fab>\r\n\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{\r\n          setItems(\"SANチェック\", String(props.SAN));\r\n          setOpen(true);\r\n          }}>\r\n          SAN Check\r\n        </Button>\r\n\r\n        <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SANFunc: React.SFC<PropsSAN> = (props: PropsSAN) => {\r\n  const classes = useStyles();\r\n  const [countDice, setCountDice] = React.useState(1);\r\n  const [numberDice, setNumberDice] = React.useState(2);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    count: 0,\r\n    number: 0,\r\n  });\r\n\r\n  const setItems = (cou: number, num: number): void =>\r\n  {\r\n    setItem({\r\n      count: cou,\r\n      number: num,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Paper className = {clsx(classes.paper, classes.dense)}>       \r\n    <TextField\r\n      id=\"san\"\r\n      label=\"Count\"\r\n      type=\"number\"\r\n      defaultValue={countDice}\r\n      className={classes.numberInfoField}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setCountDice(+event.target.value)}}\r\n      placeholder=\"SAN\"\r\n      margin=\"normal\"\r\n    />       \r\n    <TextField\r\n      id=\"san\"\r\n      label=\"Number\"\r\n      type=\"number\"\r\n      defaultValue={numberDice}\r\n      className={classes.numberInfoField}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setNumberDice(+event.target.value)}}\r\n      placeholder=\"SAN\"\r\n      margin=\"normal\"\r\n    />\r\n\r\n<br />\r\n      <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n      onClick = {():void =>{\r\n        setItems(countDice, numberDice);\r\n        setOpen(true);\r\n        }}>\r\n        Judge\r\n      </Button>\r\n\r\n    <DiceNDNDialog open={open} setOpen={setOpen} item={item} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SANIdea: React.SFC<PropsIdea> = (props: PropsIdea) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Paper className = {clsx(classes.paper, classes.dense)}>      \r\n\r\n    <br />\r\n    <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n    onClick = {():void =>{\r\n      let idea: skill | undefined = props.skills.find(s => s.skillName === 'アイデア');\r\n      if(idea == null) return;\r\n\r\n      setItems(\"アイデア\", String(idea.skillValue));\r\n      setOpen(true);\r\n      }}>\r\n      SAN Check\r\n    </Button>\r\n\r\n    <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SAN: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <SANValue SAN={props.SAN} characterName={props.characterName} setSAN={props.setSAN}/>\r\n      <SANFunc SAN={props.SAN} characterName={props.characterName} setSAN={props.setSAN} />\r\n      <SANIdea skills={props.skills}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SAN;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport SAN from '../pages/SAN';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        SAN: state.character.character.characterInfos.SAN,\r\n        characterName: state.character.character.characterInfos.characterName, \r\n        skills: state.character.character.skills,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSAN: (san: number) => {\r\n            dispatch(actionCreator.character.setSAN({san}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SAN);","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '75%',\r\n      margin: 'auto',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 500,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    fab: {\r\n      marginLeft: theme.spacing(5),\r\n      margin: theme.spacing(1),\r\n    },\r\n    chip: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype Props = {\r\n    skills: skill[];\r\n    hp: number;\r\n    damageBonus: string;\r\n    setSkills(skills: skill[]) : void;\r\n    setHP(hp: number) : void;\r\n};\r\n\r\nexport default function SimpleTable(props: Props) {\r\n  const classes = useStyles();\r\n  const [skill, setSkill] = React.useState<string>(\"\");\r\n  const [value, setValue] = React.useState<number>(0);\r\n  const [HPDiff, setHPDiff] = React.useState<number>(0);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const handleClick = (skillName: string ): void =>\r\n  {\r\n    const skill: skill | undefined = props.skills.find(s =>(s.skillName === skillName));\r\n    if(skill == null) return;\r\n    setItems(skillName, String(skill.skillValue));\r\n  }\r\n\r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  const setSkills = (skill: string, value: number): void =>\r\n  {\r\n    const addSkill : skill = {\r\n      skillName: \"\",\r\n      skillValue: 0,\r\n      skillType: \"戦闘\",\r\n      skillUnique: true,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: 0\r\n    };\r\n  \r\n    const newSkills = JSON.parse(JSON.stringify(props.skills));\r\n\r\n    const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n      undefined : \r\n      newSkills.find((s: { skillName: string; }) => s.skillName === skill);\r\n\r\n    if(cSkill == null){\r\n      addSkill.skillName = skill;\r\n      addSkill.skillValue = value;\r\n      props.setSkills([...props.skills, addSkill]);\r\n    }else{\r\n      cSkill.skillValue = value;\r\n      props.setSkills(newSkills);\r\n    }\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    <Paper className={clsx(classes.root)}>\r\n      <br />\r\n      <Chip color=\"primary\" label=\"Skill\" />        \r\n      <TextField\r\n        id=\"san\"\r\n        label=\"Skill\"\r\n        type=\"text\"\r\n        defaultValue={skill}\r\n        className={classes.numberInfoField}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setSkill(event.target.value)}}\r\n        placeholder=\"Skill\"\r\n        margin=\"normal\"\r\n        />      \r\n        <Chip color=\"primary\" label=\"Value\" className={classes.chip}　/>    \r\n        <TextField\r\n          id=\"san\"\r\n          label=\"Value\"\r\n          type=\"number\"\r\n          defaultValue={value}\r\n          className={classes.numberInfoField}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setValue(+event.target.value)}}\r\n          placeholder=\"Value\"\r\n          margin=\"normal\"\r\n          />\r\n\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <AddIcon onClick={() => {setSkills(skill, value)}}/>\r\n        </Fab>\r\n      <br />\r\n      <br />\r\n\r\n      <Chip color=\"primary\" label=\"HP\" className={classes.chip}　/> {props.hp}\r\n        <TextField\r\n          id=\"hp\"\r\n          label=\"HP\"\r\n          type=\"number\"\r\n          defaultValue={HPDiff}\r\n          className={classes.numberInfoField}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setHPDiff(+event.target.value)}}\r\n          placeholder=\"Value\"\r\n          margin=\"normal\"\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" //className={classes.button}\r\n          onClick = {():void =>{props.setHP(props.hp + HPDiff)}}>\r\n        +/-</Button>\r\n\r\n      <br />\r\n      <br />\r\n    </Paper>\r\n\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Skill</TableCell>\r\n            <TableCell align=\"right\">Value</TableCell>\r\n            <TableCell align=\"right\">Type</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            props.skills.map(row => {\r\n            if(row.skillType !== \"戦闘\"){ return };\r\n\r\n            return <TableRow key={row.skillName} \r\n              onClick={_ => {\r\n                console.log(\"onclick\");\r\n                handleClick(row.skillName)\r\n                setOpenDialog(true);}\r\n              }>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.skillName}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.skillValue}</TableCell>\r\n              <TableCell align=\"right\">{row.skillType}</TableCell>\r\n            </TableRow>\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <DiceDialog open={openDialog} setOpen={setOpenDialog} item={item} />\r\n    </Paper>\r\n    </div>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Battle from '../pages/Battle';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return { \r\n        skills: state.character.character.skills,\r\n        damageBonus: state.character.character.characterInfos.damageBonus,\r\n        hp: state.character.character.characterInfos.HP,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSkills: (skills: skill[]) => {\r\n            dispatch(actionCreator.character.setSkills({skills}));\r\n        },\r\n        setHP: (hp: number) => {\r\n            dispatch(actionCreator.character.setHP({hp}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Battle);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport onSubmit from '../modules/importPMJ.js';\r\nimport { Redirect } from 'react-router';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    setOpen(open :boolean) : void;\r\n    setCharacter(character: character) : void;\r\n};\r\n\r\nexport default function FormDialog(props: Props) {\r\n  const [file, setFile] = React.useState(new File([],\"\"));\r\n\r\n  function handleChangeFile(e: any) {\r\n    const target: HTMLInputElement = e.target as HTMLInputElement;\r\n    if(target == null) return;\r\n    if(target.files == null) return;\r\n\r\n    const file: File| null = target.files.item(0);\r\n    if(file == null) return;\r\n    setFile(file);\r\n  }\r\n\r\n  function setChara(character: any){\r\n    let chara: character = {\r\n        skills: character.skills,\r\n        characterBackground: character.characterBackground,\r\n        abilityValues: character.abilityValues,\r\n        characterInfos: character.characterInfos\r\n    };\r\n        \r\n    console.log(chara);\r\n    props.setCharacter(chara);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Import Character</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Import .pmj file\r\n          </DialogContentText>\r\n            <input type=\"file\" onChange={(e) => \r\n            {handleChangeFile(e)}\r\n        }/>\r\n\r\n            <button onClick={() => {\r\n                onSubmit(setChara, file);\r\n                handleClose();\r\n                }}>set</button>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","\r\nexport default function onSubmit(func, item) {\r\n    if(item == null) return;\r\n    let reader = new FileReader();\r\n\r\n    // CSVファイル以外は処理を止める\r\n    if(!item.name.match(\".json$\") && !item.name.match(\".pmj$\")) \r\n    {\r\n        alert('jsonファイル、またはchpファイルを選択してください');\r\n        return;\r\n    }\r\n\r\n        // ファイル読み取りに失敗したとき\r\n    reader.onerror = function() {\r\n        alert('ファイル読み取りに失敗しました')\r\n    }\r\n        //読み込んだファイルの中身を取得する\r\n    reader.readAsText( item , 'Shift_JIS');\r\n\r\n    // PMJファイル以外は処理を止める\r\n    if(!item.name.match(\".json$\") && !item.name.match(\".pmj$\")) {\r\n        alert('jsonファイル、またはchpファイルを選択してください');\r\n        return;\r\n    }\r\n    //ファイルの中身を取得後に処理を行う\r\n    if( item != null ){\r\n        reader.addEventListener( 'load', function() {\r\n            let json = JSON.parse(reader.result);\r\n            func(json);\r\n        })\r\n    }\r\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SkillIcon from '@material-ui/icons/Assignment';\nimport CharacterIcon from '@material-ui/icons/Info';\nimport AbillityIcon from '@material-ui/icons/Face';\nimport SANIcon from '@material-ui/icons/OfflineBolt';\nimport BattleIcon from '@material-ui/icons/Security';\nimport ImportIcon from '@material-ui/icons/AssignmentReturnedRounded';\n\nimport ImportPMJ from './ImportPMJDialog';\nimport Divider from '@material-ui/core/Divider';\n\ntype Props = {\n  setCharacter: (character: any) => void,\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nexport default function SimpleList(props: Props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem button \n          component={Link}\n          to=\"/home/skill\">\n          <ListItemIcon>\n            <SkillIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Skill\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/character\">\n          <ListItemIcon>\n            <CharacterIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Character\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/abillity\">\n          <ListItemIcon>\n            <AbillityIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Abillity\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/san\">\n          <ListItemIcon>\n            <SANIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"SAN\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/battle\">\n          <ListItemIcon>\n            <BattleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Battle\" />\n        </ListItem>\n\n        <Divider />\n\n        <ListItem button\n          onClick={()=>{\n            setOpen(true);\n          }}>\n          <ListItemIcon>\n            <ImportIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </ListItem>\n      </List>\n\n      <ImportPMJ open={open} setOpen={setOpen} setCharacter={props.setCharacter}/>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport SideBar from '../components/SideBar';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\n//空でも良いので、mapStateToPropsを記述\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacter: (chara: character) => {\r\n            dispatch(actionCreator.character.setCharacter({chara}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps, //ここでconnectするのも忘れない\r\n    mapDispatchToProps\r\n)(SideBar);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nimport Skill from '../containers/Skill';\r\nimport Character from '../containers/Character';\r\nimport Abillity from '../containers/Ability';\r\nimport SAN from '../containers/SAN';\r\nimport Battle from '../containers/Battle';\r\nimport SideBar from '../containers/SideBar';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'relative',\r\n      display: 'flex',\r\n      zIndex: 0,\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ResponsiveDrawerProps {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  container?: Element;\r\n}\r\n\r\nexport default function ResponsiveDrawer(props: ResponsiveDrawerProps) {\r\n  const { container } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  function handleDrawerToggle() {\r\n    setMobileOpen(!mobileOpen);\r\n  }\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      {/* <Divider /> */}\r\n      <SideBar />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        \r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Drawer\r\n            container={container}\r\n            variant=\"permanent\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />   \r\n          <Switch>     \r\n            <Route exact path='/home/skill' component={Skill} container={document.getElementById(\"app-main\")}/>\r\n            <Route path='/home/character' component={Character} />\r\n            <Route path='/home/abillity' component={Abillity} />\r\n            <Route path='/home/san' component={SAN} />\r\n            <Route path='/home/battle' component={Battle} />\r\n          </Switch>  \r\n      </main>\r\n    </div>\r\n  );\r\n}","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth'\r\nrequire('dotenv').config();\r\n\r\nconst config = {\r\n    apiKey:  process.env.REACT_APP_API_KEY,\r\n    authDomain:  process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL:  process.env.REACT_APP_DATABASE_URL,\r\n    projectId:  process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId:  process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport default firebase","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport firebase from '../modules/firebase'\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      width:450,\r\n      padding: theme.spacing(3, 2),\r\n    }\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setUserName: (url: string) => void;\r\n  setPassword: (url: string) => void;\r\n};\r\n\r\nconst Login: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = React.useState(props.discordUrl);\r\n  const [password, setPassword] = React.useState(props.diceUrl);\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  const login = (email: string, password: string) => {\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then(\r\n      ()=>{setValue('login');}\r\n    );\r\n  }\r\n\r\n  const logout = ():void =>{\r\n    firebase.auth().signOut().then(\r\n      ()=>{setValue('logout');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id='login'>\r\n    {(() => {\r\n        const user = firebase.auth().currentUser;\r\n        if (user) {\r\n            return <div>\r\n              { value }\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n              onClick = {():void =>{logout()}}>\r\n                Logout\r\n              </Button>\r\n            </div>;\r\n        }\r\n        return <div>\r\n        <h2>Login</h2>\r\n        <Paper className = {classes.paper}>\r\n        <TextField\r\n          id=\"userName\"\r\n          label=\"User Name\"\r\n          defaultValue={props.diceUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setUserName(event.target.value);}}\r\n          margin=\"dense\"\r\n        /><br />\r\n        <TextField\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          defaultValue={props.discordUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setPassword(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{login(userName, password)}}>\r\n          Login\r\n        </Button>\r\n        </Paper>\r\n        </div>;\r\n    })()}\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import * as React from 'react';\r\nimport logo from '../PM_Desine.png';\r\n\r\nconst Main: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n        <img\r\n        src={logo}\r\n        alt=\"\" width=\"500\" height=\"400\"\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 360,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 360,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      width:450,\r\n      padding: theme.spacing(3, 2),\r\n    }\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setDiceUrl: (url: string) => void;\r\n  setDiscordUrl: (url: string) => void;\r\n};\r\n\r\nconst Setting: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [nDiscord, setDisordValue] = React.useState(props.discordUrl);\r\n  const [nDice, setDiceValue] = React.useState(props.diceUrl);\r\n\r\n  const setUrl = (newDiceURL: string, newDiscordURL: string):void => {\r\n    props.setDiceUrl(newDiceURL);\r\n    props.setDiscordUrl(newDiscordURL);\r\n    console.log(newDiceURL);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Setting</h2>\r\n      <Paper className = {classes.paper}>\r\n        <TextField\r\n          id=\"diceURL\"\r\n          label=\"Dice API URL\"\r\n          defaultValue={props.diceUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setDiceValue(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <TextField\r\n          id=\"discordURL\"\r\n          label=\"Discord URL\"\r\n          defaultValue={props.discordUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setDisordValue(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{setUrl(nDice, nDiscord)}}>\r\n          SET\r\n        </Button>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Setting;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Setting from '../pages/Setting';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        discordUrl: state.setting.discordUrl,\r\n        diceUrl: state.setting.diceUrl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setDiceUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiceUrl({url}));\r\n        },\r\n        setDiscordUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiscordUrl({url}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Setting);","import React, { Dispatch } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 360,\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: 78,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: 600,\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: 500,\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\nconst setAbilityToDice = (character: character):character =>{\r\n  interface ItemNDN {\r\n    count: number;\r\n    number: number;\r\n  }\r\n  const itemNDN: ItemNDN ={\r\n    count: 3,\r\n    number: 6,\r\n  }\r\n\r\n  const newCharacter = JSON.parse(JSON.stringify(character));\r\n\r\n  newCharacter.abilityValues.STR = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.CON = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.POW = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.DEX = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.APP = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.EDU = +ShakeNDNDice(itemNDN).result + 3 - 1;\r\n  \r\n  itemNDN.count = 2;\r\n  newCharacter.abilityValues.SIZ = +ShakeNDNDice(itemNDN).result + 6 - 1;\r\n  newCharacter.abilityValues.INT = +ShakeNDNDice(itemNDN).result + 6 - 1;\r\n  return newCharacter;\r\n}\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Create</h2>\r\n    \r\n    <Button variant=\"contained\" color=\"primary\" //className={classes.button}\r\n        onClick = {\r\n            ():void => {\r\n            props.setCharacter(setAbilityToDice(props.character));\r\n            }\r\n            }>\r\n        Dice</Button>\r\n      <br />\r\n      \r\n      <Card className = {classes.card}>\r\n        <br />\r\n        physical value\r\n        <br />\r\n        \r\n        <TextField\r\n        id=\"hp\"\r\n        label=\"HP\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.HP}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos:{\r\n              ...props.character.characterInfos,\r\n              HP: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"HP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"mp\"\r\n        label=\"MP\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.MP}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos:{\r\n              ...props.character.characterInfos,\r\n              MP: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"MP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"san\"\r\n        label=\"SAN\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.SAN}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos:{\r\n              ...props.character.characterInfos,\r\n              SAN: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"SAN\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n      <br />\r\n\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        ability value\r\n        <br />\r\n        <TextField\r\n        id=\"str\"\r\n        label=\"STR\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.STR}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              STR: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"STR\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"con\"\r\n        label=\"CON\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.CON}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              CON: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"CON\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"pow\"\r\n        label=\"POW\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.POW}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              POW: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"POW\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"dex\"\r\n        label=\"DEX\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.DEX}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {\r\n            props.setCharacter({\r\n              ...props.character,\r\n              abilityValues : {\r\n                ...props.character.abilityValues,\r\n                DEX: +event.target.value,\r\n              }\r\n            })\r\n          ;}\r\n        }\r\n        placeholder=\"DEX\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n\r\n        <TextField\r\n        id=\"app\"\r\n        label=\"APP\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.APP}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              APP: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"APP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"siz\"\r\n        label=\"SIZ\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.SIZ}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              SIZ: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"SIZ\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"int\"\r\n        label=\"INT\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.INT}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              INT: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"INT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"edu\"\r\n        label=\"EDU\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.EDU}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              EDU: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"EDU\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n\r\n      <br />\r\n    </Paper>\r\n  );\r\n}\r\nexport default Making;","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport clsx from 'clsx';\n\ntype skill = {\n  skillName: string,\n  skillValue: number,\n  skillType: string,\n  skillUnique: boolean,\n  skillWorkValue: number,\n  skillInterestValue: number,\n  defaultValue: number\n};\n\ntype abilityValue = {\n  STR: number,\n  CON: number,\n  POW: number,\n  DEX: number,\n  APP: number,\n  SIZ: number,\n  INT: number,\n  EDU: number\n};\n\ntype characterInfo = {\n  characterName: string,\n  HP: number,\n  MP: number,\n  SAN: number,\n  damageBonus: string,\n  job: string,\n  age: number,\n  sex: string,\n  height: number,\n  weight: number,\n  origin: string\n};\n\ntype character = {\n  skills: skill[];\n  characterBackground: string;\n  abilityValues: abilityValue;\n  characterInfos: characterInfo;\n}\n\ntype Props = {\n  skills: skill[],\n  setCharacter: (character: character) => void;\n  setSkillWorkValue: (name: string, work: number) => void;\n  setSkillInterestValue: (name: string, interest: number) => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n    },\n    table: {\n      width: '100%',\n    },\n    numberInfoField: {\n      marginLeft: theme.spacing(5),\n      marginRight: 'auto',\n      width: 40,\n    },\n    dense: {\n      marginTop: 19,\n    },\n  }),\n);\n\nexport default function SimpleList(props: Props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n  <Table className={classes.table} size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Skill</TableCell>\n            <TableCell align=\"right\">Value</TableCell>\n            <TableCell align=\"right\">Type</TableCell>\n            <TableCell align=\"right\">Work</TableCell>\n            <TableCell align=\"right\">Interest</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.skills.map(row => {\n            if(row == null) return;\n\n            return (\n            <TableRow key={row.skillName}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.skillName}\n              </TableCell>\n              <TableCell align=\"right\">{row.skillValue}</TableCell>\n              <TableCell align=\"right\">{row.skillType}</TableCell>\n              <TableCell align=\"right\">       \n                <TextField\n                  id=\"work\"\n                  label=\"Work\"\n                  type=\"number\"\n                  defaultValue={row.skillWorkValue}\n                  className={clsx(classes.numberInfoField, classes.dense)}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => \n                    {props.setSkillWorkValue(row.skillName, +event.target.value);}\n                  }\n                  placeholder=\"Work\"\n                  margin=\"normal\"\n                  />\n                </TableCell>\n              <TableCell align=\"right\">       \n                <TextField\n                  id=\"interest\"\n                  label=\"Interest\"\n                  type=\"number\"\n                  defaultValue={row.skillWorkValue}\n                  className={clsx(classes.numberInfoField, classes.dense)}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => \n                    {props.setSkillInterestValue(row.skillName, +event.target.value);}\n                  }\n                  placeholder=\"Interest\"\n                  margin=\"normal\"\n                  />\n                </TableCell>\n            </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n","import React, { Dispatch } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport SkillList from '../components/SkillList'\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { setCharacter } from '../states/characters/SetCharacter';\r\nimport { element } from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 360,\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: 78,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: 600,\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: 500,\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    chip: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\nconst initSkill = ():skill => {\r\n  return({\r\n      skillName: \"\",\r\n      skillValue: 0,\r\n      skillType: \"\",\r\n      skillUnique: false,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: 0\r\n    }\r\n  )\r\n}\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst skillTypes = [\r\n  ['戦闘','Fight'],\r\n  ['探索','Search'],\r\n  ['行動','Act'],\r\n  ['交渉','Negotiate'],\r\n  ['知識','Wisdom'],\r\n];\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const getWorkPoint = () => {\r\n    if(props.character.skills.length === 0) return 0;\r\n    return props.character.skills.map(s=>s.skillWorkValue).reduce(function(total, data)\r\n    {return total + data});\r\n  };\r\n\r\n  const getInterestPoint = () => {\r\n    if(props.character.skills.length === 0) return 0;\r\n    return props.character.skills.map(s=>s.skillInterestValue).reduce(function(total, data)\r\n    {return total + data});\r\n  };\r\n\r\n  const getRemainingWorkPoint = () => {\r\n    return props.character.abilityValues.EDU * 20 - getWorkPoint();\r\n  };\r\n\r\n  const getRemainingInterestPoint = () => {\r\n    return props.character.abilityValues.INT * 10 - getInterestPoint();\r\n  };\r\n\r\n  const getSkills = (type: string): skill[] =>{\r\n    const s = props.character.skills.filter(e => e.skillType=== type);\r\n    if(s == null) return[initSkill()];\r\n    return s;\r\n  }\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Create</h2>\r\n      <Card>\r\n        <Chip color=\"primary\" label=\"Work Point\" className={classes.chip}　/> {getRemainingWorkPoint()}\r\n        <Chip color=\"primary\" label=\"Interest Point\" className={classes.chip}　/> {getRemainingInterestPoint()}\r\n        <br />\r\n      </Card>\r\n\r\n      {skillTypes.map(element => {\r\n        return(\r\n          <div>\r\n            <br />\r\n            <br />\r\n            {element[1]}\r\n            <br />\r\n            <Card>\r\n              <SkillList \r\n                skills={getSkills(element[0])} \r\n                setCharacter={props.setCharacter} \r\n                setSkillInterestValue={\r\n                  (name: string, value: number)=>{\r\n                    if(value < 0 || getRemainingInterestPoint() - value < 0) return;\r\n                  const newSkills = JSON.parse(JSON.stringify(props.character.skills));\r\n\r\n                  const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n                    undefined : \r\n                    newSkills.find((s: { skillName: string; }) => s.skillName === name);\r\n\r\n                  if(cSkill == null) return;\r\n                    cSkill.skillInterestValue = value;\r\n                    cSkill.skillValue = cSkill.defaultValue + value;\r\n                    props.setCharacter({\r\n                      ...props.character,\r\n                      skills: newSkills\r\n                      }\r\n                    );\r\n                  }r\n                } \r\n                setSkillWorkValue={\r\n                  (name: string, value: number)=>{\r\n                    console.log( getWorkPoint() )\r\n                    if(value < 0 || getRemainingWorkPoint() - value < 0) return;\r\n                  const newSkills = JSON.parse(JSON.stringify(props.character.skills));\r\n\r\n                  const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n                    undefined : \r\n                    newSkills.find((s: { skillName: string; }) => s.skillName === name);\r\n\r\n                  if(cSkill == null) return;\r\n                    cSkill.skillWorkValue = value;\r\n                    cSkill.skillValue = cSkill.defaultValue + value;\r\n                    props.setCharacter({\r\n                      ...props.character,\r\n                      skills: newSkills\r\n                      }\r\n                    );\r\n                  }      \r\n                }\r\n                />\r\n            </Card>\r\n          </div>\r\n          );\r\n      })}\r\n    </Paper>\r\n  );\r\n}\r\nexport default Making;","import React, { Dispatch } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\nimport Button from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 360,\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: 78,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: 600,\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: 500,\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    chip: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [count, setCount]= React.useState(0);\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Create</h2>\r\n      <br />\r\n      <TextField\r\n        id=\"characterName\"\r\n        label=\"Character Name\"\r\n        value={props.character.characterInfos.characterName}\r\n        className={clsx(classes.textField, classes.dense)}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos:{\r\n              ...props.character.characterInfos,\r\n              characterName: event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        margin=\"dense\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        id=\"background\"\r\n        label=\"Background\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={props.character.characterBackground}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterBackground: event.target.value,\r\n          });}\r\n        }\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        infomation value\r\n        <br />\r\n        \r\n        <Chip color=\"primary\" label=\"HP\" className={classes.chip}　/> {props.character.characterInfos.HP}\r\n        <Chip color=\"primary\" label=\"MP\" className={classes.chip}　/> {props.character.characterInfos.MP}\r\n        <Chip color=\"primary\" label=\"SAN\" className={classes.chip}　/> {props.character.characterInfos.SAN}\r\n\r\n        <br />\r\n        <br />\r\n      </Card>\r\n      <br />\r\n\r\n      <Card className = {classes.card}>\r\n        <TextField\r\n        id=\"job\"\r\n        label=\"job\"\r\n        value={props.character.characterInfos.job}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              job: event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"JOB\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"age\"\r\n        label=\"age\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.age}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              age: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"AGE\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"sex\"\r\n        label=\"sex\"\r\n        value={props.character.characterInfos.sex}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              sex: event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"SEX\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n        \r\n        <TextField\r\n        id=\"height\"\r\n        label=\"height\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.height}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              height: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"HEIGHT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"weight\"\r\n        label=\"weight\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.weight}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              weight: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"WEIGHT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"origin\"\r\n        label=\"origin\"\r\n        value={props.character.characterInfos.origin}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              origin: event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"ORIGIN\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n\r\n      <br />\r\n    </Paper>\r\n  );\r\n}\r\nexport default Making;","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport CreateAbility from './CreateAbility';\r\nimport CreateSkills from './CreateSkills';\r\nimport CreateInfos from './CreateInfos';\r\nimport defaultSkills from '../characterMakingSkills.json';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: 600,\r\n    },\r\n    root: {\r\n      width: '90%',\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\nconst init = (): character => {\r\n  return {\r\n\r\n    skills: defaultSkills.skills.map(s => {\r\n      return{\r\n        skillName: s.skillName,\r\n        skillValue: s.skillValue,\r\n        skillType: s.skillType,\r\n        skillUnique: false,\r\n        skillWorkValue: 0,\r\n        skillInterestValue: 0,\r\n        defaultValue: s.skillValue\r\n      }\r\n    }),\r\n\r\n    characterBackground: \"\",\r\n    abilityValues: {\r\n        STR: 0,\r\n        CON: 0,\r\n        POW: 0,\r\n        DEX: 0,\r\n        APP: 0,\r\n        SIZ: 0,\r\n        INT: 0,\r\n        EDU: 0\r\n    },\r\n    characterInfos: {\r\n        characterName: \"\",\r\n        HP: 0,\r\n        MP: 0,\r\n        SAN: 0,\r\n        damageBonus: \"\",\r\n        job: \"\",\r\n        age: 0,\r\n        sex: \"\",\r\n        height: 0,\r\n        weight: 0,\r\n        origin: \"\"\r\n    },\r\n  };\r\n};\r\n\r\nfunction getSteps() {\r\n  return ['Select character abilitys', 'Setting skills', 'Create character infomation'];\r\n}\r\n\r\nfunction getStepContent(step: number) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'abilitys';\r\n    case 1:\r\n      return 'skills';\r\n    case 2:\r\n      return 'infomation';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\ntype Props = {\r\n  setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [character, setCharacter] = React.useState(init());\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set<number>());\r\n  const steps = getSteps();\r\n\r\n  function isStepSkipped(step: number) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function handleNext() {\r\n    setSkill({\r\n      skillName: \"回避\",\r\n      skillValue: character.abilityValues.DEX * 2,\r\n      skillType: \"戦闘\",\r\n      skillUnique: true,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: character.abilityValues.DEX * 2\r\n    })\r\n\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n  \r\n  const setSkills = (skill: skill[]): void =>\r\n  {\r\n    setCharacter(\r\n    {\r\n      ...character,\r\n      skills: skill,\r\n    });\r\n  }\r\n  \r\n  const setSkill = (skill: skill): void =>\r\n  {\r\n    const newSkills = JSON.parse(JSON.stringify(character.skills));\r\n    \r\n    const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n      undefined : \r\n      newSkills.find((s: { skillName: string; }) => s.skillName === skill.skillName);\r\n\r\n    //if(cSkill.skillValue !== 0) return;\r\n    if(cSkill == null){\r\n      setCharacter(\r\n      {\r\n        ...character,\r\n        skills: [...character.skills, skill]\r\n      });\r\n    }else{\r\n      cSkill.skillValue = skill.skillValue;\r\n      cSkill.defaultValue = skill.defaultValue;\r\n      setCharacter(\r\n      {\r\n        ...character,\r\n        skills: newSkills\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps: { completed?: boolean } = {};\r\n          const labelProps: { optional?: React.ReactNode } = {};\r\n\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n\r\n        {(activeStep === 0) && (\r\n          <CreateAbility character={character} setCharacter={setCharacter}/>\r\n        )}\r\n        {(activeStep === 1) && (\r\n          <CreateSkills character={character} setCharacter={setCharacter}/>\r\n        )}\r\n        {(activeStep === 2) && (\r\n          <CreateInfos character={character} setCharacter={setCharacter}/>\r\n        )}\r\n\r\n      <div>\r\n        {\r\n          activeStep === steps.length ? (\r\n          <div>\r\n            {character.skills.filter(e=> e.skillWorkValue !== 0 || e.skillInterestValue !== 0 ).forEach(e=> e.skillUnique = true)}\r\n            {props.setCharacter(character)}\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Making;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Making from '../pages/Making';\r\n\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n  };\r\n  \r\n  type abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n  };\r\n  \r\n  type characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n  };\r\n  \r\n  type character = {\r\n    skills: skill[];\r\n    characterBackground: string;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n  }\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacter: (chara: character) => {\r\n            dispatch(actionCreator.character.setCharacter({chara}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Making);","import * as React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Main from './pages/Main';\nimport Setting from './containers/Setting';\nimport Making from './containers/Making';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <header className=\"App-header\">\n          <NavBar />\n        </header>\n\n        <div className='App-main' id='app-main'>\n          <Route exact path='/' component={Main}/>\n          \n          <Route path='/home' component={Home} container={document.getElementById(\"app-main\")}/>\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/setting' component={Setting} />\n          <Route exact path='/making' component={Making} />\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport './index.css';\n\nimport App from './App';\nimport { rootReducer } from './states';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App />\n    </Provider>,\n     document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}