{"version":3,"sources":["PM_Desine.png","components/NavBar_PC.tsx","components/NavBar_Mobile.tsx","components/NavBar.tsx","states/settings/index.ts","states/settings/SetDiscordUrl.ts","states/settings/SetDiceUrl.ts","states/characters/index.ts","states/characters/SetCharacter.ts","states/characters/SetSkills.ts","states/characters/SetAbilityValues.ts","states/characters/SetCharacterInfos.ts","states/characters/SetCharacterName.ts","states/characters/SetHP.ts","states/characters/SetMP.ts","states/characters/SetSAN.ts","states/characters/SetCharacterBackground.ts","states/index.ts","modules/sendDiscord.ts","components/DiceDialog.tsx","pages/Skill.tsx","containers/Skill.tsx","pages/Character.tsx","containers/Character.tsx","modules/getAbilityValue.ts","pages/Ability.tsx","containers/Ability.tsx","modules/shakeNDNDice.ts","components/DiceNDNDialog.tsx","pages/SAN.tsx","containers/SAN.tsx","pages/Battle.tsx","containers/Battle.tsx","components/ImportPMJDialog.tsx","modules/importPMJ.js","components/SideBar.tsx","containers/SideBar.tsx","pages/Home.tsx","modules/firebase.ts","pages/Login.tsx","pages/Main.tsx","pages/Setting.tsx","containers/Setting.tsx","pages/CreateAbility.tsx","components/SkillList.tsx","pages/CreateSkills.tsx","pages/CreateInfos.tsx","pages/Making.tsx","containers/Making.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","position","zIndex","navBar","left","right","margin","width","menuButton","marginRight","spacing","title","NavBar","classes","React","useState","value","setValue","AppBar","className","Toolbar","Typography","variant","BottomNavigation","onChange","event","newValue","BottomNavigationAction","component","Link","to","label","icon","props","Button","onClick","setOpen","open","Hidden","smUp","implementation","NavBar_Mobile","xsDown","NavBar_PC","actionCreator","setDiscordUrl","payload","type","setDiceUrl","setCharacter","setSkills","setAbilityValues","setCharacterInfos","setCharacterName","setHP","setMP","setSAN","setCharacterBackground","rootReducer","combineReducers","setting","state","discordUrl","diceUrl","action","url","character","skills","characterBackground","abilityValues","STR","CON","POW","DEX","APP","SIZ","INT","EDU","characterInfos","characterName","HP","MP","SAN","damageBonus","job","age","sex","height","weight","origin","Object","assign","chara","hp","mp","san","background","Settings","Characters","ShakeDice","item","result","ok","_1d100Value","Math","round","random","name","AlertDialog","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","color","autoFocus","marginTop","overflowX","table","minWidth","numberInfoField","marginLeft","fab","chip","connect","dispatch","category","setCategory","skill","setSkill","openDialog","setOpenDialog","user","setItem","setItems","ability","Paper","clsx","Chip","TextField","defaultValue","target","placeholder","Fab","aria-label","addSkill","skillName","skillValue","skillType","skillUnique","skillWorkValue","skillInterestValue","newSkills","JSON","parse","stringify","cSkill","length","undefined","find","s","InputLabel","htmlFor","Select","onOpen","inputProps","MenuItem","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","_","console","log","String","handleClick","scope","button","input","display","textField","numberAbilityField","dense","menu","paper","padding","card","Character","multiline","rowsMax","Card","newAbilityValues","match","val","on","pred","fn","otherwise","when","chain","getAbilityValue","abilityValue","power","eq","val1","val2","getAbility","Ability","setPower","showLabels","ShakeNDNDice","diceResults","count","number","i","push","reduce","total","data","SANValue","diffSAN","setDiffSAN","SANFunc","countDice","setCountDice","numberDice","setNumberDice","SANIdea","idea","HPDiff","setHPDiff","FormDialog","File","file","setFile","setChara","e","files","handleChangeFile","func","reader","FileReader","onerror","alert","readAsText","addEventListener","json","onSubmit","maxWidth","backgroundColor","palette","List","ListItem","ListItemText","primary","ListItemIcon","Divider","breakpoints","up","paddingTop","drawer","flexShrink","toolbar","mixins","drawerPaper","content","flexGrow","ResponsiveDrawer","container","useTheme","mobileOpen","setMobileOpen","SideBar","CssBaseline","Drawer","anchor","direction","ModalProps","keepMounted","exact","path","Skill","document","getElementById","Abillity","Battle","require","config","apiKey","process","authDomain","databaseURL","projectId","REACT_APP_PROJECT_ID","storageBucket","messagingSenderId","appId","firebase","mobile","Login","userName","setUserName","password","setPassword","auth","currentUser","signOut","then","email","signInWithEmailAndPassword","login","Main","src","logo","alt","Setting","nDiscord","setDisordValue","nDice","setDiceValue","newDiceURL","newDiscordURL","Making","itemNDN","newCharacter","setAbilityToDice","head","body","SimpleList","size","rowSpan","setSkillWorkValue","setSkillInterestValue","marginBottom","skillTypes","getWorkPoint","getRemainingWorkPoint","getRemainingInterestPoint","getSkills","filter","element","instructions","defaultSkills","activeStep","setActiveStep","Set","skipped","setSkipped","steps","Stepper","index","Step","StepLabel","CreateAbility","CreateSkills","CreateInfos","forEach","step","getStepContent","disabled","prevActiveStep","newSkipped","has","values","delete","App","render","Boolean","window","location","hostname","store","createStore","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2cc4e30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PM_Desine.02fe71ee.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport PalletIcon from '@material-ui/icons/ColorLens';\r\nimport FavoriteIcon from '@material-ui/icons/OfflinePin';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'fixed',\r\n      zIndex: 1,\r\n    },\r\n    navBar:{\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      margin: 'auto',\r\n      width: '30%',\r\n      zIndex: 2,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    title: {\r\n      //flexGrow: 1,\r\n    }\r\n  })\r\n);\r\n\r\nconst NavBar: React.SFC = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <AppBar\r\n    className={classes.root}>\r\n    <Toolbar>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n        Palletmaster\r\n      </Typography>\r\n\r\n      <BottomNavigation value={value} onChange={handleChange} \r\n        className={classes.navBar}>\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/home\" label=\"Pallet\" value=\"pallet\" icon={<PalletIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/login\" label=\"Login\" value=\"login\" icon={<FavoriteIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/setting\" label=\"Setting\" value=\"setting\" icon={<SettingIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/making\" label=\"Create\" value=\"create\" icon={<CreateIcon />} />\r\n      </BottomNavigation>\r\n    </Toolbar>\r\n  </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport PalletIcon from '@material-ui/icons/ColorLens';\r\nimport FavoriteIcon from '@material-ui/icons/OfflinePin';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'fixed',\r\n      zIndex: 1,\r\n    },\r\n    navBar:{\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      margin: 'auto',\r\n      width: '100%',\r\n      zIndex: 2,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    title: {\r\n      //flexGrow: 1,\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  open : boolean;\r\n  setOpen: (open: boolean) => void;\r\n};\r\n\r\nconst NavBar: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <AppBar\r\n    className={classes.root}>\r\n    <Toolbar> \r\n      <Button className={classes.title} onClick={()=>{props.setOpen(!props.open)}}>\r\n        <DehazeIcon />\r\n      </Button>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n        Palletmaster\r\n      </Typography>\r\n    </Toolbar>\r\n    <Toolbar>\r\n\r\n      <BottomNavigation value={value} onChange={handleChange} \r\n        className={classes.navBar}>\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/home\" label=\"Pallet\" value=\"pallet\" icon={<PalletIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/login\" label=\"Login\" value=\"login\" icon={<FavoriteIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/setting\" label=\"Setting\" value=\"setting\" icon={<SettingIcon />} />\r\n        <BottomNavigationAction\r\n          component={Link}\r\n          to=\"/making\" label=\"Create\" value=\"create\" icon={<CreateIcon />} />\r\n      </BottomNavigation>\r\n    </Toolbar>\r\n  </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport NavBar_PC from './NavBar_PC';\r\nimport NavBar_Mobile from './NavBar_Mobile';\r\n\r\ntype Props = {\r\n  open : boolean;\r\n  setOpen: (open: boolean) => void;\r\n};\r\n\r\nconst NavBar: React.SFC<Props> = (props: Props) => {\r\n  return (\r\n    <div>\r\n      {/* タブレット以上なら隠す -- モバイル画面で表示 */}\r\n      <Hidden smUp implementation=\"css\">\r\n        <NavBar_Mobile open={props.open} setOpen={props.setOpen} />\r\n      </Hidden>\r\n\r\n      {/* モバイル以下なら隠す -- モバイル画面以外で表示 */}\r\n      <Hidden xsDown implementation=\"css\">\r\n        <NavBar_PC />\r\n      </Hidden>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import { setDiscordUrl, SetDiscordUrlAction } from './SetDiscordUrl';\r\nimport { setDiceUrl, SetDiceUrlAction } from './SetDiceUrl';\r\n\r\ntype Actions\r\n    = SetDiscordUrlAction\r\n    | SetDiceUrlAction;\r\n\r\nexport type State = {    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n    discordUrl: string;\r\n    diceUrl: string;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        discordUrl: \"\",\r\n        diceUrl: \"\",\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_DISCORD_URL_SETTING':\r\n            return {\r\n                ...state,\r\n                discordUrl: action.payload.url,\r\n            };\r\n        case 'SET_DICE_URL_SETTING':\r\n            return{\r\n                ...state,\r\n                diceUrl: action.payload.url,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setDiscordUrl,\r\n    setDiceUrl,\r\n};","import { Action } from 'redux';\r\n\r\nexport type SetDiscordUrlPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiscordUrlAction extends Action {\r\n    type: 'SET_DISCORD_URL_SETTING';\r\n    payload: SetDiscordUrlPayload;\r\n}\r\n\r\nexport const setDiscordUrl = (payload: SetDiscordUrlPayload): SetDiscordUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DISCORD_URL_SETTING',\r\n    };\r\n};","import { Action } from 'redux';\r\n\r\nexport type SetDiceUrlPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    url: string;\r\n};\r\n\r\nexport interface SetDiceUrlAction extends Action {\r\n    type: 'SET_DICE_URL_SETTING';\r\n    payload: SetDiceUrlPayload;\r\n}\r\n\r\nexport const setDiceUrl = (payload: SetDiceUrlPayload): SetDiceUrlAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_DICE_URL_SETTING',\r\n    };\r\n};","import { setCharacter, SetCharacterAction } from './SetCharacter';\r\nimport { setSkills, SetSkillsAction } from './SetSkills';\r\nimport { setAbilityValues, SetAbilityValuesAction } from './SetAbilityValues';\r\nimport { setCharacterInfos, SetCharacterInfosAction } from './SetCharacterInfos';\r\nimport { setCharacterName, SetCharacterNameAction } from './SetCharacterName';\r\nimport { setHP, SetHPAction } from './SetHP';\r\nimport { setMP, SetMPAction } from './SetMP';\r\nimport { setSAN, SetSANAction } from './SetSAN';\r\nimport { setCharacterBackground, SetCharacterBackgroundAction } from './SetCharacterBackground';\r\n\r\ntype Actions\r\n    = SetCharacterAction | \r\n    SetSkillsAction| \r\n    SetAbilityValuesAction| \r\n    SetCharacterInfosAction| \r\n    SetCharacterNameAction| \r\n    SetHPAction| \r\n    SetMPAction|\r\n    SetSANAction|\r\n    SetCharacterBackgroundAction ;\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\nexport type State = {    // ページ全体で保持しとくべき情報はTodoの配列くらい\r\n    character: character;\r\n};\r\n\r\nconst init = (): State => {\r\n    return {\r\n        character: {\r\n            skills: [],\r\n            characterBackground: \"\",\r\n            abilityValues: {\r\n                STR: 0,\r\n                CON: 0,\r\n                POW: 0,\r\n                DEX: 0,\r\n                APP: 0,\r\n                SIZ: 0,\r\n                INT: 0,\r\n                EDU: 0\r\n            },\r\n            characterInfos: {\r\n                characterName: \"\",\r\n                HP: 0,\r\n                MP: 0,\r\n                SAN: 0,\r\n                damageBonus: \"\",\r\n                job: \"\",\r\n                age: 0,\r\n                sex: \"\",\r\n                height: 0,\r\n                weight: 0,\r\n                origin: \"\"\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nexport const reducer = (state: State = init(), action: Actions) => {\r\n    switch (action.type) {\r\n        case 'SET_CHARACTER':\r\n            return Object.assign({}, state, {\r\n                character: action.payload.chara,\r\n              });\r\n        case 'SET_SKILLS':\r\n            return{\r\n                ...state,\r\n                character:{\r\n                    ...state.character,\r\n                    skills: action.payload.skills,\r\n                }\r\n            };\r\n        case 'SET_ABILITY_VALUES':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    abilityValues: action.payload.abilityValues,\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_INFOS':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: action.payload.characterInfos,\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_NAME':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        characterName: action.payload.characterName,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_HP':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        HP: action.payload.hp,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_MP':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        MP: action.payload.mp,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_SAN':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterInfos: {\r\n                        ...state.character.characterInfos,\r\n                        SAN: action.payload.san,\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_CHARACTER_BACKGROUND':\r\n            return{\r\n                ...state,\r\n                character:\r\n                {\r\n                    ...state.character,\r\n                    characterBackground: action.payload.background,\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreator = {\r\n    setCharacter,\r\n    setSkills,\r\n    setAbilityValues,\r\n    setCharacterInfos,\r\n    setCharacterName,\r\n    setHP,\r\n    setMP,\r\n    setSAN,\r\n    setCharacterBackground\r\n};","import { Action } from 'redux';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\n\r\nexport type SetCharacterPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\r\n    chara: character\r\n};\r\n\r\nexport interface SetCharacterAction extends Action {\r\n    type: 'SET_CHARACTER';\r\n    payload: SetCharacterPayload;\r\n}\r\n\r\nexport const setCharacter = (payload: SetCharacterPayload): SetCharacterAction => {\r\n    return {\r\n        payload,\r\n        type: 'SET_CHARACTER',\r\n    };\r\n};","import { Action } from 'redux';\n\ntype skill = {\n    skillName: string,\n    skillValue: number,\n    skillType: string,\n    skillUnique: boolean,\n    skillWorkValue: number,\n    skillInterestValue: number,\n    defaultValue: number\n};\n\nexport type SetSkillsPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    skills: skill[];\n};\n\nexport interface SetSkillsAction extends Action {\n    type: 'SET_SKILLS';\n    payload: SetSkillsPayload;\n}\n\nexport const setSkills = (payload: SetSkillsPayload): SetSkillsAction => {\n    return {\n        payload,\n        type: 'SET_SKILLS',\n    };\n};","import { Action } from 'redux';\n\ntype AbilityValues = {\n    STR: number,\n    CON: number,\n    POW: number,\n    DEX: number,\n    APP: number,\n    SIZ: number,\n    INT: number,\n    EDU: number,\n};\n\nexport type SetAbilityValuesPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    abilityValues: AbilityValues;\n};\n\nexport interface SetAbilityValuesAction extends Action {\n    type: 'SET_ABILITY_VALUES';\n    payload: SetAbilityValuesPayload;\n}\n\nexport const setAbilityValues = (payload: SetAbilityValuesPayload): SetAbilityValuesAction => {\n    return {\n        payload,\n        type: 'SET_ABILITY_VALUES',\n    };\n};","import { Action } from 'redux';\n\ntype CharacterInfos = {\n    characterName: string,\n    HP: number,\n    MP: number,\n    SAN: number,\n    damageBonus: string,\n    job: string,\n    age: number,\n    sex: string,\n    height: number,\n    weight: number,\n    origin: string,\n};\n\nexport type SetCharacterInfosPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    characterInfos: CharacterInfos;\n};\n\nexport interface SetCharacterInfosAction extends Action {\n    type: 'SET_CHARACTER_INFOS';\n    payload: SetCharacterInfosPayload;\n}\n\nexport const setCharacterInfos = (payload: SetCharacterInfosPayload): SetCharacterInfosAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_INFOS',\n    };\n};","import { Action } from 'redux';\n\nexport type SetCharacterNamePayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    characterName: string;\n};\n\nexport interface SetCharacterNameAction extends Action {\n    type: 'SET_CHARACTER_NAME';\n    payload: SetCharacterNamePayload;\n}\n\nexport const setCharacterName = (payload: SetCharacterNamePayload): SetCharacterNameAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_NAME',\n    };\n};","import { Action } from 'redux';\n\nexport type SetHPPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    hp: number;\n};\n\nexport interface SetHPAction extends Action {\n    type: 'SET_HP';\n    payload: SetHPPayload;\n}\n\nexport const setHP = (payload: SetHPPayload): SetHPAction => {\n    return {\n        payload,\n        type: 'SET_HP',\n    };\n};","import { Action } from 'redux';\n\nexport type SetMPPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    mp: number;\n};\n\nexport interface SetMPAction extends Action {\n    type: 'SET_MP';\n    payload: SetMPPayload;\n}\n\nexport const setMP = (payload: SetMPPayload): SetMPAction => {\n    return {\n        payload,\n        type: 'SET_MP',\n    };\n};","import { Action } from 'redux';\n\nexport type SetSANPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    san: number;\n};\n\nexport interface SetSANAction extends Action {\n    type: 'SET_SAN';\n    payload: SetSANPayload;\n}\n\nexport const setSAN = (payload: SetSANPayload): SetSANAction => {\n    return {\n        payload,\n        type: 'SET_SAN',\n    };\n};","import { Action } from 'redux';\n\nexport type SetCharacterBackgroundPayload = {    // todoを追加する時に必要なのはtodoの内容くらい\n    background: string;\n};\n\nexport interface SetCharacterBackgroundAction extends Action {\n    type: 'SET_CHARACTER_BACKGROUND';\n    payload: SetCharacterBackgroundPayload;\n}\n\nexport const setCharacterBackground = (payload: SetCharacterBackgroundPayload): SetCharacterBackgroundAction => {\n    return {\n        payload,\n        type: 'SET_CHARACTER_BACKGROUND',\n    };\n};","import { combineReducers } from 'redux';\r\nimport * as Settings from './settings';\r\nimport * as Characters from './characters';\r\n\r\nexport type RootState = {\r\n    setting: Settings.State;\r\n    character: Characters.State;\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    setting: Settings.reducer,\r\n    character: Characters.reducer,\r\n});\r\n\r\nexport const actionCreator = {\r\n    setting: Settings.actionCreator,\r\n    character: Characters.actionCreator,\r\n};","interface Item {\r\n  name: string;\r\n  url: string;\r\n  user: string;\r\n  value: string;\r\n}\r\n\r\ninterface Result {\r\n  ok: string;\r\n  result: string;\r\n}\r\n\r\nexport function sendBCDice(item: Item) \r\n{\r\n  sendDice(sendDiscordText, item);\r\n}\r\n\r\nfunction ShakeDice(item: Item): Result\r\n{\r\n  let result: Result = {\r\n    ok :\"\",\r\n    result : \"\",\r\n  };\r\n  let _1d100Value: number = Math.round(Math.random() * 100) + 1;\r\n  if(_1d100Value <= 5){\r\n    result.ok = \"クリティカル\"\r\n  }else if(_1d100Value <= +item.value){\r\n    result.ok = \"成功\"\r\n  }else{\r\n    result.ok = \"失敗\"\r\n  }\r\n\r\n  result.result = \"技能:\" + item.name + \" \" + _1d100Value\r\n   + \" <= \" + item.value;\r\n\r\n   return result;\r\n}\r\n\r\nfunction sendDiscordText(result: Result, item: Item) {\r\n  if (result.ok) {\r\n    const webhook = require(\"webhook-discord\");\r\n\r\n    const Hook = new webhook.Webhook(item.url);\r\n    Hook.info(item.user, item.name + \" \" + result.result);\r\n  }\r\n}\r\n\r\nasync function sendDice(func: (json: Result, item: Item) => void, item: Item) {\r\n  const url =\r\n    \"https://www.taruki.com/bcdice-api\" +\r\n    \"/v1/diceroll?system=Cthulhu&command=\" +\r\n    \"CCB<=\" +\r\n    item.value; // リクエスト先URL\r\n\r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then(response => {\r\n      let json = response;\r\n      const jsonLog = JSON.stringify(json);\r\n      if (response.ok) {\r\n        return func(json, item);\r\n      }\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nexport function goodbye(name: string) {\r\n  return `Goodbye ${name}`;\r\n}\r\n\r\nexport default ShakeDice;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ShakeDice from '../modules/sendDiscord';\r\n\r\ninterface Item {\r\n    name: string;\r\n    url: string;\r\n    user: string;\r\n    value: string;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    item: Item;\r\n    setOpen(open :boolean) : void;\r\n};\r\n\r\nexport default function AlertDialog(props: Props) {\r\n  let result :Result = {\r\n    ok: \"\",\r\n    result: \"\",\r\n  }\r\n  if(props.open){\r\n    result = ShakeDice(props.item);\r\n  }\r\n\r\n  function handleClickOpen() {\r\n    props.setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Dice Result\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.ok }\r\n          </DialogContentText><br />\r\n          \r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.result }\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport clsx from 'clsx';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '75%',\r\n      margin: 'auto',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 500,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    fab: {\r\n      marginLeft: theme.spacing(5),\r\n      margin: theme.spacing(1),\r\n    },\r\n    chip: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype Props = {\r\n    skills: skill[];\r\n    setSkills(skills: skill[]) : void;\r\n};\r\n\r\nexport default function SimpleTable(props: Props) {\r\n  const classes = useStyles();\r\n  const [category, setCategory] = React.useState<string>(\"unique\");\r\n  const [skill, setSkill] = React.useState<string>(\"\");\r\n  const [value, setValue] = React.useState<number>(0);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const handleClick = (skillName: string ): void =>\r\n  {\r\n    const skill: skill | undefined = props.skills.find(s =>(s.skillName === skillName));\r\n    if(skill == null) return;\r\n    setItems(skillName, String(skill.skillValue));\r\n  }\r\n\r\n  function handleChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n    setCategory(event.target.value as string);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  const setSkills = (skill: string, value: number): void =>\r\n  {\r\n    const addSkill : skill = {\r\n      skillName: \"\",\r\n      skillValue: 0,\r\n      skillType: \"追加\",\r\n      skillUnique: true,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: 0\r\n  };\r\n  \r\n    const newSkills = JSON.parse(JSON.stringify(props.skills));\r\n\r\n    const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n      undefined : \r\n      newSkills.find((s: { skillName: string; }) => s.skillName === skill);\r\n\r\n    if(cSkill == null){\r\n      addSkill.skillName = skill;\r\n      addSkill.skillValue = value;\r\n      props.setSkills([...props.skills, addSkill]);\r\n    }else{\r\n      cSkill.skillValue = value;\r\n      props.setSkills(newSkills);\r\n    }\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    <Paper className={clsx(classes.root)}>\r\n      <br />\r\n      <Chip color=\"primary\" label=\"Skill\" />        \r\n      <TextField\r\n        id=\"san\"\r\n        label=\"Skill\"\r\n        type=\"text\"\r\n        defaultValue={skill}\r\n        className={classes.numberInfoField}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setSkill(event.target.value)}}\r\n        placeholder=\"Skill\"\r\n        margin=\"normal\"\r\n        />      \r\n        <Chip color=\"primary\" label=\"Value\" className={classes.chip}　/>    \r\n        <TextField\r\n          id=\"san\"\r\n          label=\"Value\"\r\n          type=\"number\"\r\n          defaultValue={value}\r\n          className={classes.numberInfoField}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setValue(+event.target.value)}}\r\n          placeholder=\"Value\"\r\n          margin=\"normal\"\r\n          />\r\n\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <AddIcon onClick={() => {setSkills(skill, value)}}/>\r\n        </Fab>\r\n      <br />\r\n      <br />\r\n\r\n      <InputLabel htmlFor=\"demo-controlled-open-select\">Category</InputLabel>\r\n      <Select\r\n        open={open}\r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        value={category}\r\n        onChange={handleChange}\r\n        inputProps={{\r\n          name: 'category',\r\n          id: 'demo-controlled-open-select',\r\n        }}\r\n      >\r\n        <MenuItem value=\"unique\">\r\n          <em>Unique</em>\r\n        </MenuItem>\r\n        <MenuItem value={\"戦闘\"}>Fight</MenuItem>\r\n        <MenuItem value={\"探索\"}>Search</MenuItem>\r\n        <MenuItem value={\"知識\"}>Wisdom</MenuItem>\r\n        <MenuItem value={\"行動\"}>Act</MenuItem>\r\n        <MenuItem value={\"交渉\"}>Negotiation</MenuItem>\r\n        <MenuItem value={\"all\"}>ALL</MenuItem>\r\n      </Select>\r\n      <br />\r\n      <br />\r\n    </Paper>\r\n\r\n    <Paper className={classes.root}>\r\n\r\n\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Skill</TableCell>\r\n            <TableCell align=\"right\">Value</TableCell>\r\n            <TableCell align=\"right\">Type</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.skills.map(row => {\r\n            if(category === \"unique\" && !row.skillUnique){ return };\r\n            if(category !== \"unique\" && category !== \"all\" && row.skillType !== category){ return };\r\n\r\n            return <TableRow key={row.skillName} \r\n              onClick={_ => {\r\n                console.log(\"onclick\");\r\n                handleClick(row.skillName)\r\n                setOpenDialog(true);}\r\n              }>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.skillName}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.skillValue}</TableCell>\r\n              <TableCell align=\"right\">{row.skillType}</TableCell>\r\n            </TableRow>\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <DiceDialog open={openDialog} setOpen={setOpenDialog} item={item} />\r\n    </Paper>\r\n    </div>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Skill from '../pages/Skill';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return { \r\n        skills: state.character.character.skills,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSkills: (skills: skill[]) => {\r\n            dispatch(actionCreator.character.setSkills({skills}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Skill);","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 360,\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: 78,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: 600,\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: 500,\r\n    }\r\n  }),\r\n);\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype Props = {\r\n  characterInfos: characterInfo;\r\n  abilityValues: abilityValue;\r\n  characterBackground: string | undefined;\r\n  setCharacterName: (characterName: string) => void;\r\n  setHP: (hp: number) => void;\r\n  setMP: (mp: number) => void;\r\n  setSAN: (san: number) => void;\r\n  setCharacterBackground: (background: string) => void;\r\n  setCharacterInfos: (characterInfos: characterInfo) => void;\r\n  setAbilityValues: (abilityValues: abilityValue) => void;\r\n};\r\n\r\nconst Character: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Infomation</h2>\r\n\r\n      <TextField\r\n        id=\"characterName\"\r\n        label=\"Character Name\"\r\n        value={props.characterInfos.characterName}\r\n        className={clsx(classes.textField, classes.dense)}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {props.setCharacterName(event.target.value);}}\r\n        margin=\"dense\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        id=\"background\"\r\n        label=\"Background\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={props.characterBackground}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setCharacterBackground(event.target.value)}}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        physical value\r\n        <br />\r\n        \r\n        <TextField\r\n        id=\"hp\"\r\n        label=\"HP\"\r\n        type=\"number\"\r\n        value={props.characterInfos.HP}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setHP(+event.target.value)}}\r\n        placeholder=\"HP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"mp\"\r\n        label=\"MP\"\r\n        type=\"number\"\r\n        value={props.characterInfos.MP}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setMP(+event.target.value)}}\r\n        placeholder=\"MP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"san\"\r\n        label=\"SAN\"\r\n        type=\"number\"\r\n        value={props.characterInfos.SAN}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {props.setSAN(+event.target.value)}}\r\n        placeholder=\"SAN\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n      <br />\r\n\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        ability value\r\n        <br />\r\n        <TextField\r\n        id=\"str\"\r\n        label=\"STR\"\r\n        type=\"number\"\r\n        value={props.abilityValues.STR}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={\r\n          (event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.STR = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);\r\n        }}\r\n        placeholder=\"STR\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"con\"\r\n        label=\"CON\"\r\n        type=\"number\"\r\n        value={props.abilityValues.CON}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={\r\n          (event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.CON = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"CON\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"pow\"\r\n        label=\"POW\"\r\n        type=\"number\"\r\n        value={props.abilityValues.POW}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.POW = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"POW\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"dex\"\r\n        label=\"DEX\"\r\n        type=\"number\"\r\n        value={props.abilityValues.DEX}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.DEX = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"DEX\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n\r\n        <TextField\r\n        id=\"app\"\r\n        label=\"APP\"\r\n        type=\"number\"\r\n        value={props.abilityValues.APP}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.APP = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"APP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"siz\"\r\n        label=\"SIZ\"\r\n        type=\"number\"\r\n        value={props.abilityValues.SIZ}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.SIZ = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"SIZ\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"int\"\r\n        label=\"INT\"\r\n        type=\"number\"\r\n        value={props.abilityValues.INT}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.INT = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"INT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"edu\"\r\n        label=\"EDU\"\r\n        type=\"number\"\r\n        value={props.abilityValues.EDU}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          let newAbilityValues : abilityValue = props.abilityValues;\r\n          newAbilityValues.EDU = +event.target.value;\r\n          props.setAbilityValues(newAbilityValues);}}\r\n        placeholder=\"EDU\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n\r\n      <br />\r\n    </Paper>\r\n  );\r\n}\r\nexport default Character;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Character from '../pages/Character';\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state.character);\r\n    return {\r\n        characterInfos: state.character.character.characterInfos,\r\n        abilityValues: state.character.character.abilityValues,\r\n        characterBackground: state.character.character.characterBackground,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacterName: (characterName: string) => {\r\n            dispatch(actionCreator.character.setCharacterName({characterName}));\r\n        },\r\n        setHP: (hp: number) => {\r\n            dispatch(actionCreator.character.setHP({hp}));\r\n        },\r\n        setMP: (mp: number) => {\r\n            dispatch(actionCreator.character.setMP({mp}));\r\n        },\r\n        setSAN: (san: number) => {\r\n            dispatch(actionCreator.character.setSAN({san}));\r\n        },\r\n        setCharacterBackground: (background: string) => {\r\n            dispatch(actionCreator.character.setCharacterBackground({background}));\r\n        },\r\n        setCharacterInfos: (characterInfos: characterInfo) => {\r\n            dispatch(actionCreator.character.setCharacterInfos({characterInfos}));\r\n        },\r\n        setAbilityValues: (abilityValues: abilityValue) => {\r\n            dispatch(actionCreator.character.setAbilityValues({abilityValues}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Character);","type abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n  };\r\n\r\nfunction getAbilityValue(item: string, abilityValue: abilityValue, power: number) : string{\r\n\r\n    return String(getAbility(item, abilityValue) * power);\r\n};\r\n\r\nfunction getAbility(item: string, abilityValue: abilityValue) : number{\r\n    const eq = <T>(val1: T) => (val2: T) => val1 === val2;\r\n        \r\n    const result = when(item)\r\n    .on(eq(\"STR\"), () => abilityValue.STR)\r\n    .on(eq(\"CON\"), () => abilityValue.CON)\r\n    .on(eq(\"POW\"), () => abilityValue.POW)\r\n    .on(eq(\"DEX\"), () => abilityValue.DEX)\r\n    .on(eq(\"APP\"), () => abilityValue.APP)\r\n    .on(eq(\"SIZ\"), () => abilityValue.SIZ)\r\n    .on(eq(\"INT\"), () => abilityValue.INT)\r\n    .on(eq(\"EDU\"), () => abilityValue.EDU)\r\n    .otherwise(() => -1)\r\n\r\n    return result;\r\n};\r\n\r\ntype ChainedWhen<T, R> = {\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) => ChainedWhen<T, R | A>;\r\n    otherwise: <A>(fn: () => A) => R | A;\r\n};\r\n\r\nconst match = <T, R>(val: any): ChainedWhen<T, R> => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) => match<T, R | A>(val),\r\n    otherwise: <A>(fn: () => A): A | R => val\r\n});\r\n\r\nconst chain = <T, R>(val: T): ChainedWhen<T, R> => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) =>\r\n        pred(val) ? match(fn()) : chain<T, A | R>(val),\r\n    otherwise: <A>(fn: () => A) => fn()\r\n});\r\n\r\nconst when = <T>(val: T) => ({\r\n    on: <A>(pred: (v: T) => boolean, fn: () => A) =>\r\n        pred(val) ? match<T, A>(fn()) : chain<T, A>(val)\r\n});\r\n\r\nexport default getAbilityValue;","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport STRIcon from '@material-ui/icons/FlashOn';\r\nimport CONIcon from '@material-ui/icons/Favorite';\r\nimport POWIcon from '@material-ui/icons/Visibility';\r\nimport DEXIcon from '@material-ui/icons/DirectionsRun';\r\nimport APPIcon from '@material-ui/icons/Face';\r\nimport SIZIcon from '@material-ui/icons/AccessibilityNewOutlined';\r\nimport INTIcon from '@material-ui/icons/WbIncandescentOutlined';\r\nimport EDUIcon from '@material-ui/icons/LocalLibrary';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Paper } from '@material-ui/core/';\r\n\r\nimport getAbilityValue from '../modules/getAbilityValue';\r\nimport DiceDialog from '../components/DiceDialog';\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ninterface Item {\r\n  name: string;\r\n  url: string;\r\n  user: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 500,\r\n      margin: \"auto\"\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: 78,\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      width:600,\r\n      padding: theme.spacing(3, 2),\r\n    }\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  abilityValues: abilityValue;\r\n};\r\n\r\nconst Ability: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"STR\");\r\n  const [power, setPower] = React.useState(5);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Ability Role</h2>\r\n\r\n      <Paper className = {classes.paper}>\r\n      ability\r\n      <BottomNavigation\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction value={\"STR\"} label=\"STR\" icon={<STRIcon />} />\r\n        <BottomNavigationAction value={\"CON\"} label=\"CON\" icon={<CONIcon />} />\r\n        <BottomNavigationAction value={\"POW\"} label=\"POW\" icon={<POWIcon />} />\r\n        <BottomNavigationAction value={\"DEX\"} label=\"DEX\" icon={<DEXIcon />} />\r\n      </BottomNavigation>\r\n      <BottomNavigation\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction value={\"APP\"} label=\"APP\" icon={<APPIcon />} />\r\n        <BottomNavigationAction value={\"SIZ\"} label=\"SIZ\" icon={<SIZIcon />} />\r\n        <BottomNavigationAction value={\"INT\"} label=\"INT\" icon={<INTIcon />} />\r\n        <BottomNavigationAction value={\"EDU\"} label=\"EDU\" icon={<EDUIcon />} />\r\n      </BottomNavigation>\r\n\r\n      <TextField\r\n        id=\"power\"\r\n        label=\"Power\"\r\n        type=\"number\"\r\n        defaultValue={power}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={\r\n          (event: React.ChangeEvent<HTMLInputElement>) => {setPower(+event.target.value);}}\r\n        placeholder=\"Power\"\r\n        margin=\"normal\"\r\n        />\r\n        </Paper>\r\n\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{\r\n          setItems(value, getAbilityValue(value, props.abilityValues, power));\r\n          setOpen(true);\r\n          }}>\r\n          Send\r\n        </Button>\r\n\r\n        <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n    </div>\r\n  );\r\n}\r\nexport default Ability;","import { connect } from 'react-redux';\r\n\r\nimport { RootState  } from '../states';\r\nimport Ability from '../pages/Ability';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state.character);\r\n    return {\r\n        abilityValues: state.character.character.abilityValues,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Ability);","interface ItemNDN {\r\n  count: number;\r\n  number: number;\r\n}\r\n\r\ninterface Result {\r\n  ok: string;\r\n  result: string;\r\n}\r\n\r\nfunction ShakeNDNDice(item: ItemNDN): Result\r\n{\r\n  let diceResults: number[] = [];\r\n\r\n  let result: Result = {\r\n    ok : String(item.count) + \"D\" + String(item.number),\r\n    result : \"\",\r\n  };\r\n\r\n  for(var i = 0; i < item.count ; i++){\r\n    diceResults.push(Math.round(Math.random() * item.number) + 1);\r\n  }\r\n\r\n  result.result = String(diceResults.reduce(function(total, data){return total + data}));\r\n\r\n  return result;\r\n}\r\n\r\nexport default ShakeNDNDice;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\n\r\ninterface ItemNDN {\r\n  count: number;\r\n  number: number;\r\n}\r\n\r\ninterface Result {\r\n    ok: string;\r\n    result: string;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    item: ItemNDN;\r\n    setOpen(open :boolean) : void;\r\n};\r\n\r\nexport default function AlertDialog(props: Props) {\r\n  let result :Result = {\r\n    ok: \"\",\r\n    result: \"\",\r\n  }\r\n  if(props.open){\r\n    result = ShakeNDNDice(props.item);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Dice Result\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.ok }\r\n          </DialogContentText><br />\r\n          \r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            { result.result }\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport DiceNDNDialog from '../components/DiceNDNDialog';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: 600,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(10),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    fab: {\r\n      marginLeft: theme.spacing(5),\r\n      margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype Props = {\r\n  skills: skill[],\r\n  SAN: number,\r\n  characterName: string,\r\n  setSAN: (san: number) => void,\r\n};\r\n\r\ntype PropsSAN = {\r\n  SAN: number,\r\n  characterName: string,\r\n  setSAN: (san: number) => void,\r\n};\r\n\r\ntype PropsIdea = {\r\n  skills: skill[],\r\n};\r\n\r\nconst SANValue: React.SFC<PropsSAN> = (props: PropsSAN) => {\r\n  const classes = useStyles();\r\n  const [diffSAN, setDiffSAN] = React.useState(1);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <Chip color=\"primary\" label=\"SAN\" /> {props.SAN}        \r\n      <TextField\r\n        id=\"san\"\r\n        label=\"SAN\"\r\n        type=\"number\"\r\n        defaultValue={diffSAN}\r\n        className={classes.numberInfoField}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setDiffSAN(+event.target.value)}}\r\n        placeholder=\"SAN\"\r\n        margin=\"normal\"\r\n        />\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <AddIcon onClick={() => {props.setSAN(props.SAN + diffSAN)}}/>\r\n        </Fab>\r\n\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{\r\n          setItems(\"SANチェック\", String(props.SAN));\r\n          setOpen(true);\r\n          }}>\r\n          SAN Check\r\n        </Button>\r\n\r\n        <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SANFunc: React.SFC<PropsSAN> = (props: PropsSAN) => {\r\n  const classes = useStyles();\r\n  const [countDice, setCountDice] = React.useState(1);\r\n  const [numberDice, setNumberDice] = React.useState(2);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    count: 0,\r\n    number: 0,\r\n  });\r\n\r\n  const setItems = (cou: number, num: number): void =>\r\n  {\r\n    setItem({\r\n      count: cou,\r\n      number: num,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Paper className = {clsx(classes.paper, classes.dense)}>       \r\n    <TextField\r\n      id=\"san\"\r\n      label=\"Count\"\r\n      type=\"number\"\r\n      defaultValue={countDice}\r\n      className={classes.numberInfoField}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setCountDice(+event.target.value)}}\r\n      placeholder=\"SAN\"\r\n      margin=\"normal\"\r\n    />       \r\n    <TextField\r\n      id=\"san\"\r\n      label=\"Number\"\r\n      type=\"number\"\r\n      defaultValue={numberDice}\r\n      className={classes.numberInfoField}\r\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setNumberDice(+event.target.value)}}\r\n      placeholder=\"SAN\"\r\n      margin=\"normal\"\r\n    />\r\n\r\n<br />\r\n      <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n      onClick = {():void =>{\r\n        setItems(countDice, numberDice);\r\n        setOpen(true);\r\n        }}>\r\n        Judge\r\n      </Button>\r\n\r\n    <DiceNDNDialog open={open} setOpen={setOpen} item={item} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SANIdea: React.SFC<PropsIdea> = (props: PropsIdea) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Paper className = {clsx(classes.paper, classes.dense)}>      \r\n\r\n    <br />\r\n    <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n    onClick = {():void =>{\r\n      let idea: skill | undefined = props.skills.find(s => s.skillName === 'アイデア');\r\n      if(idea == null) return;\r\n\r\n      setItems(\"アイデア\", String(idea.skillValue));\r\n      setOpen(true);\r\n      }}>\r\n      Idea\r\n    </Button>\r\n\r\n    <DiceDialog open={open} setOpen={setOpen} item={item} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SAN: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <SANValue SAN={props.SAN} characterName={props.characterName} setSAN={props.setSAN}/>\r\n      <SANFunc SAN={props.SAN} characterName={props.characterName} setSAN={props.setSAN} />\r\n      <SANIdea skills={props.skills}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SAN;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport SAN from '../pages/SAN';\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        SAN: state.character.character.characterInfos.SAN,\r\n        characterName: state.character.character.characterInfos.characterName, \r\n        skills: state.character.character.skills,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSAN: (san: number) => {\r\n            dispatch(actionCreator.character.setSAN({san}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SAN);","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport DiceDialog from '../components/DiceDialog';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '75%',\r\n      margin: 'auto',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 500,\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n      width: 120,\r\n    },\r\n    fab: {\r\n      marginLeft: theme.spacing(5),\r\n      margin: theme.spacing(1),\r\n    },\r\n    chip: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype Props = {\r\n    skills: skill[];\r\n    hp: number;\r\n    damageBonus: string;\r\n    setSkills(skills: skill[]) : void;\r\n    setHP(hp: number) : void;\r\n};\r\n\r\nexport default function SimpleTable(props: Props) {\r\n  const classes = useStyles();\r\n  const [skill, setSkill] = React.useState<string>(\"\");\r\n  const [value, setValue] = React.useState<number>(0);\r\n  const [HPDiff, setHPDiff] = React.useState<number>(0);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const handleClick = (skillName: string ): void =>\r\n  {\r\n    const skill: skill | undefined = props.skills.find(s =>(s.skillName === skillName));\r\n    if(skill == null) return;\r\n    setItems(skillName, String(skill.skillValue));\r\n  }\r\n\r\n  const [item, setItem] = React.useState({\r\n    name: \"\",\r\n    url: \"\",\r\n    user: \"\",\r\n    value: \"\",\r\n  });\r\n\r\n  const setItems = (ability: string, value: string): void =>\r\n  {\r\n    setItem({\r\n      name: ability,\r\n      url: \"\",\r\n      user: \"\",\r\n      value: value,\r\n    });\r\n  }\r\n\r\n  const setSkills = (skill: string, value: number): void =>\r\n  {\r\n    const addSkill : skill = {\r\n      skillName: \"\",\r\n      skillValue: 0,\r\n      skillType: \"戦闘\",\r\n      skillUnique: true,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: 0\r\n    };\r\n  \r\n    const newSkills = JSON.parse(JSON.stringify(props.skills));\r\n\r\n    const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n      undefined : \r\n      newSkills.find((s: { skillName: string; }) => s.skillName === skill);\r\n\r\n    if(cSkill == null){\r\n      addSkill.skillName = skill;\r\n      addSkill.skillValue = value;\r\n      props.setSkills([...props.skills, addSkill]);\r\n    }else{\r\n      cSkill.skillValue = value;\r\n      props.setSkills(newSkills);\r\n    }\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    <Paper className={clsx(classes.root)}>\r\n      <br />\r\n      <Chip color=\"primary\" label=\"Skill\" />        \r\n      <TextField\r\n        id=\"san\"\r\n        label=\"Skill\"\r\n        type=\"text\"\r\n        defaultValue={skill}\r\n        className={classes.numberInfoField}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setSkill(event.target.value)}}\r\n        placeholder=\"Skill\"\r\n        margin=\"normal\"\r\n        />      \r\n        <Chip color=\"primary\" label=\"Value\" className={classes.chip}　/>    \r\n        <TextField\r\n          id=\"san\"\r\n          label=\"Value\"\r\n          type=\"number\"\r\n          defaultValue={value}\r\n          className={classes.numberInfoField}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setValue(+event.target.value)}}\r\n          placeholder=\"Value\"\r\n          margin=\"normal\"\r\n          />\r\n\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <AddIcon onClick={() => {setSkills(skill, value)}}/>\r\n        </Fab>\r\n      <br />\r\n      <br />\r\n\r\n      <Chip color=\"primary\" label=\"HP\" className={classes.chip}　/> {props.hp}\r\n        <TextField\r\n          id=\"hp\"\r\n          label=\"HP\"\r\n          type=\"number\"\r\n          defaultValue={HPDiff}\r\n          className={classes.numberInfoField}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {setHPDiff(+event.target.value)}}\r\n          placeholder=\"Value\"\r\n          margin=\"normal\"\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" //className={classes.button}\r\n          onClick = {():void =>{props.setHP(props.hp + HPDiff)}}>\r\n        +/-</Button>\r\n\r\n      <br />\r\n      <br />\r\n    </Paper>\r\n\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Skill</TableCell>\r\n            <TableCell align=\"right\">Value</TableCell>\r\n            <TableCell align=\"right\">Type</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            props.skills.map(row => {\r\n            if(row.skillType !== \"戦闘\"){ return };\r\n\r\n            return <TableRow key={row.skillName} \r\n              onClick={_ => {\r\n                console.log(\"onclick\");\r\n                handleClick(row.skillName)\r\n                setOpenDialog(true);}\r\n              }>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.skillName}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.skillValue}</TableCell>\r\n              <TableCell align=\"right\">{row.skillType}</TableCell>\r\n            </TableRow>\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <DiceDialog open={openDialog} setOpen={setOpenDialog} item={item} />\r\n    </Paper>\r\n    </div>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Battle from '../pages/Battle';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n    return { \r\n        skills: state.character.character.skills,\r\n        damageBonus: state.character.character.characterInfos.damageBonus,\r\n        hp: state.character.character.characterInfos.HP,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setSkills: (skills: skill[]) => {\r\n            dispatch(actionCreator.character.setSkills({skills}));\r\n        },\r\n        setHP: (hp: number) => {\r\n            dispatch(actionCreator.character.setHP({hp}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Battle);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport onSubmit from '../modules/importPMJ.js';\r\nimport { Redirect } from 'react-router';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    setOpen(open :boolean) : void;\r\n    setCharacter(character: character) : void;\r\n};\r\n\r\nexport default function FormDialog(props: Props) {\r\n  const [file, setFile] = React.useState(new File([],\"\"));\r\n\r\n  function handleChangeFile(e: any) {\r\n    const target: HTMLInputElement = e.target as HTMLInputElement;\r\n    if(target == null) return;\r\n    if(target.files == null) return;\r\n\r\n    const file: File| null = target.files.item(0);\r\n    if(file == null) return;\r\n    setFile(file);\r\n  }\r\n\r\n  function setChara(character: any){\r\n    let chara: character = {\r\n        skills: character.skills,\r\n        characterBackground: character.characterBackground,\r\n        abilityValues: character.abilityValues,\r\n        characterInfos: character.characterInfos\r\n    };\r\n        \r\n    console.log(chara);\r\n    props.setCharacter(chara);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Import Character</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Import .pmj file\r\n          </DialogContentText>\r\n            <input type=\"file\" onChange={(e) => \r\n            {handleChangeFile(e)}\r\n        }/>\r\n\r\n            <button onClick={() => {\r\n                onSubmit(setChara, file);\r\n                handleClose();\r\n                }}>set</button>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","\r\nexport default function onSubmit(func, item) {\r\n    if(item == null) return;\r\n    let reader = new FileReader();\r\n\r\n    // CSVファイル以外は処理を止める\r\n    if(!item.name.match(\".json$\") && !item.name.match(\".pmj$\")) \r\n    {\r\n        alert('jsonファイル、またはchpファイルを選択してください');\r\n        return;\r\n    }\r\n\r\n        // ファイル読み取りに失敗したとき\r\n    reader.onerror = function() {\r\n        alert('ファイル読み取りに失敗しました')\r\n    }\r\n        //読み込んだファイルの中身を取得する\r\n    reader.readAsText( item , 'Shift_JIS');\r\n\r\n    // PMJファイル以外は処理を止める\r\n    if(!item.name.match(\".json$\") && !item.name.match(\".pmj$\")) {\r\n        alert('jsonファイル、またはchpファイルを選択してください');\r\n        return;\r\n    }\r\n    //ファイルの中身を取得後に処理を行う\r\n    if( item != null ){\r\n        reader.addEventListener( 'load', function() {\r\n            let json = JSON.parse(reader.result);\r\n            func(json);\r\n        })\r\n    }\r\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SkillIcon from '@material-ui/icons/Assignment';\nimport CharacterIcon from '@material-ui/icons/Info';\nimport AbillityIcon from '@material-ui/icons/Face';\nimport SANIcon from '@material-ui/icons/OfflineBolt';\nimport BattleIcon from '@material-ui/icons/Security';\nimport ImportIcon from '@material-ui/icons/AssignmentReturnedRounded';\n\nimport ImportPMJ from './ImportPMJDialog';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\n\ntype Props = {\n  setCharacter: (character: any) => void,\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nexport default function SimpleList(props: Props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <Hidden smUp implementation=\"css\">\n          <ListItem>\n            <ListItemText primary=\"\" />\n          </ListItem>\n          <ListItem>\n            <ListItemText primary=\"\" />\n          </ListItem>\n        </Hidden>\n        <ListItem button \n          component={Link}\n          to=\"/home/skill\">\n          <ListItemIcon>\n            <SkillIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Skill\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/character\">\n          <ListItemIcon>\n            <CharacterIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Character\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/abillity\">\n          <ListItemIcon>\n            <AbillityIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Abillity\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/san\">\n          <ListItemIcon>\n            <SANIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"SAN\" />\n        </ListItem>\n        <ListItem button\n          component={Link}\n          to=\"/home/battle\">\n          <ListItemIcon>\n            <BattleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Battle\" />\n        </ListItem>\n\n        <Divider />\n\n        <ListItem button\n          onClick={()=>{\n            setOpen(true);\n          }}>\n          <ListItemIcon>\n            <ImportIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </ListItem>\n      </List>\n\n      <ImportPMJ open={open} setOpen={setOpen} setCharacter={props.setCharacter}/>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport SideBar from '../components/SideBar';\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n};\r\n  \r\ntype characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n};\r\n\r\ntype character = {\r\n    skills: skill[];\r\n    characterBackground: string | undefined;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n}\r\n\r\n//空でも良いので、mapStateToPropsを記述\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacter: (chara: character) => {\r\n            dispatch(actionCreator.character.setCharacter({chara}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps, //ここでconnectするのも忘れない\r\n    mapDispatchToProps\r\n)(SideBar);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nimport Skill from '../containers/Skill';\r\nimport Character from '../containers/Character';\r\nimport Abillity from '../containers/Ability';\r\nimport SAN from '../containers/SAN';\r\nimport Battle from '../containers/Battle';\r\nimport SideBar from '../containers/SideBar';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'relative',\r\n      display: 'flex',\r\n      zIndex: 0,\r\n      [theme.breakpoints.up('sm')]: {\r\n        paddingTop: '100px'\r\n      }\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        paddingTop: '100px',\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ResponsiveDrawerProps {\r\n  container?: Element;\r\n  open: boolean;\r\n}\r\n\r\nexport default function ResponsiveDrawer(props: ResponsiveDrawerProps) {\r\n  const { container } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  console.log(props.open);\r\n  function handleDrawerToggle() {\r\n    setMobileOpen(!mobileOpen);\r\n  }\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      {/* <Divider /> */}\r\n      <SideBar />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        \r\n        {props.open &&/* The implementation can be swapped with js to avoid SEO duplication of links. */\r\n          (<Drawer\r\n            container={container}\r\n            variant=\"permanent\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>)\r\n        }\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />   \r\n          <Switch>     \r\n            <Route exact path='/home/skill' component={Skill} container={document.getElementById(\"app-main\")}/>\r\n            <Route path='/home/character' component={Character} />\r\n            <Route path='/home/abillity' component={Abillity} />\r\n            <Route path='/home/san' component={SAN} />\r\n            <Route path='/home/battle' component={Battle} />\r\n          </Switch>  \r\n      </main>\r\n    </div>\r\n  );\r\n}","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth'\r\nrequire('dotenv').config();\r\n\r\nconst config = {\r\n    apiKey:  process.env.REACT_APP_API_KEY,\r\n    authDomain:  process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL:  process.env.REACT_APP_DATABASE_URL,\r\n    projectId:  process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId:  process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport default firebase","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport firebase from '../modules/firebase'\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width:'50%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 200,\r\n      }\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width:'50%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 200,\r\n      }\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      width:'90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width:450,\r\n      },\r\n      padding: theme.spacing(3, 2),\r\n    },\r\n    mobile:{\r\n      paddingTop: '100'\r\n    },\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setUserName: (url: string) => void;\r\n  setPassword: (url: string) => void;\r\n};\r\n\r\nconst Login: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = React.useState(props.discordUrl);\r\n  const [password, setPassword] = React.useState(props.diceUrl);\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  const login = (email: string, password: string) => {\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then(\r\n      ()=>{setValue('login');}\r\n    );\r\n  }\r\n\r\n  const logout = ():void =>{\r\n    firebase.auth().signOut().then(\r\n      ()=>{setValue('logout');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id='login'>\r\n    <Hidden smUp implementation=\"css\">\r\n      <br className={classes.mobile}/>\r\n    </Hidden>\r\n    {(() => {\r\n        const user = firebase.auth().currentUser;\r\n        if (user) {\r\n            return <div>\r\n              { value }\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n              onClick = {():void =>{logout()}}>\r\n                Logout\r\n              </Button>\r\n            </div>;\r\n        }\r\n        return <div>\r\n        <h2>Login</h2>\r\n        <Paper className = {classes.paper}>\r\n        <TextField\r\n          id=\"userName\"\r\n          label=\"User Name\"\r\n          defaultValue={props.diceUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setUserName(event.target.value);}}\r\n          margin=\"dense\"\r\n        /><br />\r\n        <TextField\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          defaultValue={props.discordUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setPassword(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{login(userName, password)}}>\r\n          Login\r\n        </Button>\r\n        </Paper>\r\n        </div>;\r\n    })()}\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import * as React from 'react';\r\nimport logo from '../PM_Desine.png';\r\n\r\nconst Main: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n        <img\r\n        src={logo}\r\n        alt=\"\" width=\"500\" height=\"400\"\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width:'80%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 360,\r\n      },\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width:'80%',\r\n      [theme.breakpoints.up('sm')]: {\r\n      width: 360,\r\n    },\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      width:'90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width:450,\r\n      },\r\n      padding: theme.spacing(3, 2),\r\n    },\r\n    mobile:{\r\n      paddingTop: '100'\r\n    }\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  discordUrl: string;\r\n  diceUrl: string;\r\n  setDiceUrl: (url: string) => void;\r\n  setDiscordUrl: (url: string) => void;\r\n};\r\n\r\nconst Setting: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [nDiscord, setDisordValue] = React.useState(props.discordUrl);\r\n  const [nDice, setDiceValue] = React.useState(props.diceUrl);\r\n\r\n  const setUrl = (newDiceURL: string, newDiscordURL: string):void => {\r\n    props.setDiceUrl(newDiceURL);\r\n    props.setDiscordUrl(newDiscordURL);\r\n    console.log(newDiceURL);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Hidden smUp implementation=\"css\">\r\n        <br className={classes.mobile}/>\r\n      </Hidden>\r\n      <h2>Setting</h2>\r\n      <Paper className = {classes.paper}>\r\n        <TextField\r\n          id=\"diceURL\"\r\n          label=\"Dice API URL\"\r\n          defaultValue={props.diceUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setDiceValue(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <TextField\r\n          id=\"discordURL\"\r\n          label=\"Discord URL\"\r\n          defaultValue={props.discordUrl}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          onChange = {(event: React.ChangeEvent<HTMLInputElement>) => {setDisordValue(event.target.value);}}\r\n          margin=\"dense\"\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n        onClick = {():void =>{setUrl(nDice, nDiscord)}}>\r\n          SET\r\n        </Button>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Setting;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Setting from '../pages/Setting';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        discordUrl: state.setting.discordUrl,\r\n        diceUrl: state.setting.diceUrl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setDiceUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiceUrl({url}));\r\n        },\r\n        setDiscordUrl: (url: string) => {\r\n            dispatch(actionCreator.setting.setDiscordUrl({url}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Setting);","import React, { Dispatch } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: 360,\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: '20%',\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: '30%',\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: '90%',\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: '80%',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\nconst setAbilityToDice = (character: character):character =>{\r\n  interface ItemNDN {\r\n    count: number;\r\n    number: number;\r\n  }\r\n  const itemNDN: ItemNDN ={\r\n    count: 3,\r\n    number: 6,\r\n  }\r\n\r\n  const newCharacter = JSON.parse(JSON.stringify(character));\r\n\r\n  newCharacter.abilityValues.STR = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.CON = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.POW = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.DEX = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.APP = +ShakeNDNDice(itemNDN).result - 1;\r\n  newCharacter.abilityValues.EDU = +ShakeNDNDice(itemNDN).result + 3 - 1;\r\n  \r\n  itemNDN.count = 2;\r\n  newCharacter.abilityValues.SIZ = +ShakeNDNDice(itemNDN).result + 6 - 1;\r\n  newCharacter.abilityValues.INT = +ShakeNDNDice(itemNDN).result + 6 - 1;\r\n  return newCharacter;\r\n}\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Create</h2>\r\n    \r\n    <Button variant=\"contained\" color=\"primary\" //className={classes.button}\r\n        onClick = {\r\n            ():void => {\r\n            props.setCharacter(setAbilityToDice(props.character));\r\n            }\r\n            }>\r\n        Dice</Button>\r\n      <br />\r\n      \r\n      <Card className = {classes.card}>\r\n        <br />\r\n        physical value\r\n        <br />\r\n        \r\n        <TextField\r\n        id=\"hp\"\r\n        label=\"HP\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.HP}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos:{\r\n              ...props.character.characterInfos,\r\n              HP: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"HP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"mp\"\r\n        label=\"MP\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.MP}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos:{\r\n              ...props.character.characterInfos,\r\n              MP: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"MP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"san\"\r\n        label=\"SAN\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.SAN}\r\n        className={clsx(classes.numberInfoField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos:{\r\n              ...props.character.characterInfos,\r\n              SAN: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"SAN\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n      <br />\r\n\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        ability value\r\n        <br />\r\n        <TextField\r\n        id=\"str\"\r\n        label=\"STR\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.STR}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              STR: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"STR\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"con\"\r\n        label=\"CON\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.CON}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              CON: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"CON\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"pow\"\r\n        label=\"POW\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.POW}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              POW: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"POW\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"dex\"\r\n        label=\"DEX\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.DEX}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {\r\n            props.setCharacter({\r\n              ...props.character,\r\n              abilityValues : {\r\n                ...props.character.abilityValues,\r\n                DEX: +event.target.value,\r\n              }\r\n            })\r\n          ;}\r\n        }\r\n        placeholder=\"DEX\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n\r\n        <TextField\r\n        id=\"app\"\r\n        label=\"APP\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.APP}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              APP: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"APP\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"siz\"\r\n        label=\"SIZ\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.SIZ}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              SIZ: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"SIZ\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"int\"\r\n        label=\"INT\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.INT}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              INT: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"INT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"edu\"\r\n        label=\"EDU\"\r\n        type=\"number\"\r\n        value={props.character.abilityValues.EDU}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            abilityValues : {\r\n              ...props.character.abilityValues,\r\n              EDU: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"EDU\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n\r\n      <br />\r\n    </Paper>\r\n  );\r\n}\r\nexport default Making;","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport clsx from 'clsx';\nimport Hidden from '@material-ui/core/Hidden';\n\ntype skill = {\n  skillName: string,\n  skillValue: number,\n  skillType: string,\n  skillUnique: boolean,\n  skillWorkValue: number,\n  skillInterestValue: number,\n  defaultValue: number\n};\n\ntype abilityValue = {\n  STR: number,\n  CON: number,\n  POW: number,\n  DEX: number,\n  APP: number,\n  SIZ: number,\n  INT: number,\n  EDU: number\n};\n\ntype characterInfo = {\n  characterName: string,\n  HP: number,\n  MP: number,\n  SAN: number,\n  damageBonus: string,\n  job: string,\n  age: number,\n  sex: string,\n  height: number,\n  weight: number,\n  origin: string\n};\n\ntype character = {\n  skills: skill[];\n  characterBackground: string;\n  abilityValues: abilityValue;\n  characterInfos: characterInfo;\n}\n\ntype Props = {\n  skills: skill[],\n  setCharacter: (character: character) => void;\n  setSkillWorkValue: (name: string, work: number) => void;\n  setSkillInterestValue: (name: string, interest: number) => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n    },\n    table: {\n      width: '90%',\n    },\n    numberInfoField: {\n      marginLeft: theme.spacing(5),\n      marginRight: 'auto',\n      width: '30%',\n    },\n    name: {\n      width: '30%',\n    },\n    head: {\n      width: '100%',\n    },\n    body: {\n      width: '100%',\n    },\n  }),\n);\n\nexport default function SimpleList(props: Props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n  <Table className={classes.table} size=\"small\">\n        <TableHead className={classes.head}><div>\n          <TableRow>\n            <TableCell className={classes.name} rowSpan={2}>Skill</TableCell>\n            <TableCell className={classes.name} align=\"right\">Value</TableCell>\n            <TableCell className={classes.name} align=\"right\">Type</TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell className={classes.name} align=\"right\">Work</TableCell>\n            <TableCell className={classes.name} align=\"right\">Interest</TableCell>\n          </TableRow></div>\n        </TableHead>\n        <TableBody className={classes.body}>\n          {props.skills.map(row => {\n            if(row == null) return;\n\n            return (<div>\n            <TableRow>\n              <TableCell className={classes.name} rowSpan={2} component=\"th\" scope=\"row\">\n                {row.skillName}\n              </TableCell>\n              <TableCell className={classes.name} align=\"right\">{row.skillValue}</TableCell>\n              <TableCell className={classes.name} align=\"right\">{row.skillType}</TableCell>\n              </TableRow>\n              <TableRow>\n              <TableCell className={classes.name} align=\"right\">       \n                <TextField\n                  id=\"work\"\n                  label=\"Work\"\n                  type=\"number\"\n                  defaultValue={row.skillWorkValue}\n                  className={classes.numberInfoField}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => \n                    {props.setSkillWorkValue(row.skillName, +event.target.value);}\n                  }\n                  placeholder=\"Work\"\n                  margin=\"normal\"\n                  />\n                </TableCell>\n              <TableCell className={classes.name} align=\"right\">       \n                <TextField\n                  id=\"interest\"\n                  label=\"Interest\"\n                  type=\"number\"\n                  defaultValue={row.skillWorkValue}\n                  className={classes.numberInfoField}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => \n                    {props.setSkillInterestValue(row.skillName, +event.target.value);}\n                  }\n                  placeholder=\"Interest\"\n                  margin=\"normal\"\n                  />\n                </TableCell>\n            </TableRow></div>\n            )\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n","import React, { Dispatch } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport SkillList from '../components/SkillList'\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Hidden } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: '90%',\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: '90%',\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: '90%',\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: '90%',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    chip: {\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\nconst initSkill = ():skill => {\r\n  return({\r\n      skillName: \"\",\r\n      skillValue: 0,\r\n      skillType: \"\",\r\n      skillUnique: false,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: 0\r\n    }\r\n  )\r\n}\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst skillTypes = [\r\n  ['戦闘','Fight'],\r\n  ['探索','Search'],\r\n  ['行動','Act'],\r\n  ['交渉','Negotiate'],\r\n  ['知識','Wisdom'],\r\n];\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const getWorkPoint = () => {\r\n    if(props.character.skills.length === 0) return 0;\r\n    return props.character.skills.map(s=>s.skillWorkValue).reduce(function(total, data)\r\n    {return total + data});\r\n  };\r\n\r\n  const getInterestPoint = () => {\r\n    if(props.character.skills.length === 0) return 0;\r\n    return props.character.skills.map(s=>s.skillInterestValue).reduce(function(total, data)\r\n    {return total + data});\r\n  };\r\n\r\n  const getRemainingWorkPoint = () => {\r\n    return props.character.abilityValues.EDU * 20 - getWorkPoint();\r\n  };\r\n\r\n  const getRemainingInterestPoint = () => {\r\n    return props.character.abilityValues.INT * 10 - getInterestPoint();\r\n  };\r\n\r\n  const getSkills = (type: string): skill[] =>{\r\n    const s = props.character.skills.filter(e => e.skillType=== type);\r\n    if(s == null) return[initSkill()];\r\n    return s;\r\n  }\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Create</h2>\r\n      <Card>\r\n        <Chip color=\"primary\" label=\"Work Point\" className={classes.chip}　/> {getRemainingWorkPoint()}\r\n        <Chip color=\"primary\" label=\"Interest Point\" className={classes.chip}　/> {getRemainingInterestPoint()}\r\n        <br />\r\n      </Card>\r\n\r\n      {skillTypes.map(element => {\r\n        return(\r\n          <div>\r\n            <br />\r\n            <br />\r\n            {element[1]}\r\n            <br />\r\n            <Card>\r\n              <SkillList \r\n                skills={getSkills(element[0])} \r\n                setCharacter={props.setCharacter} \r\n                setSkillInterestValue={\r\n                  (name: string, value: number)=>{\r\n                    if(value < 0 || getRemainingInterestPoint() - value < 0) return;\r\n                  const newSkills = JSON.parse(JSON.stringify(props.character.skills));\r\n\r\n                  const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n                    undefined : \r\n                    newSkills.find((s: { skillName: string; }) => s.skillName === name);\r\n\r\n                  if(cSkill == null) return;\r\n                    cSkill.skillInterestValue = value;\r\n                    cSkill.skillValue = cSkill.defaultValue + value;\r\n                    props.setCharacter({\r\n                      ...props.character,\r\n                      skills: newSkills\r\n                      }\r\n                    );\r\n                  }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \r\n                } \r\n                setSkillWorkValue={\r\n                  (name: string, value: number)=>{\r\n                    console.log( getWorkPoint() )\r\n                    if(value < 0 || getRemainingWorkPoint() - value < 0) return;\r\n                  const newSkills = JSON.parse(JSON.stringify(props.character.skills));\r\n\r\n                  const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n                    undefined : \r\n                    newSkills.find((s: { skillName: string; }) => s.skillName === name);\r\n\r\n                  if(cSkill == null) return;\r\n                    cSkill.skillWorkValue = value;\r\n                    cSkill.skillValue = cSkill.defaultValue + value;\r\n                    props.setCharacter({\r\n                      ...props.character,\r\n                      skills: newSkills\r\n                      }\r\n                    );\r\n                  }      \r\n                }\r\n                />\r\n            </Card>\r\n          </div>\r\n          );\r\n      })}\r\n    </Paper>\r\n  );\r\n}\r\nexport default Making;","import React, { Dispatch } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport ShakeNDNDice from '../modules/shakeNDNDice';\r\nimport Button from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: '90%',\r\n    },\r\n    numberAbilityField: {\r\n      marginLeft: 0,\r\n      marginRight: 6,\r\n      width: '30%',\r\n    },\r\n    numberInfoField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: 'auto',\r\n      width: '30%',\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width: '90%',\r\n    },\r\n    card: {\r\n      margin:'auto',\r\n      width: '90%',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    chip: {\r\n      marginLeft: theme.spacing(5),\r\n      marginRight: 'auto',\r\n    }\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\ntype Props = {\r\n    character: character;\r\n    setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [count, setCount]= React.useState(0);\r\n\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <h2>Character Create</h2>\r\n      <br />\r\n      <TextField\r\n        id=\"characterName\"\r\n        label=\"Character Name\"\r\n        value={props.character.characterInfos.characterName}\r\n        className={clsx(classes.textField, classes.dense)}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos:{\r\n              ...props.character.characterInfos,\r\n              characterName: event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        margin=\"dense\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        id=\"background\"\r\n        label=\"Background\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={props.character.characterBackground}\r\n        onChange = {(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterBackground: event.target.value,\r\n          });}\r\n        }\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <Card className = {classes.card}>\r\n        <br />\r\n        infomation value\r\n        <br />\r\n        \r\n        <Chip color=\"primary\" label=\"HP\" className={classes.chip}　/> {props.character.characterInfos.HP}\r\n        <Chip color=\"primary\" label=\"MP\" className={classes.chip}　/> {props.character.characterInfos.MP}\r\n        <Chip color=\"primary\" label=\"SAN\" className={classes.chip}　/> {props.character.characterInfos.SAN}\r\n\r\n        <br />\r\n        <br />\r\n      </Card>\r\n      <br />\r\n\r\n      <Card className = {classes.card}>\r\n        <TextField\r\n        id=\"job\"\r\n        label=\"job\"\r\n        value={props.character.characterInfos.job}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              job: event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"JOB\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"age\"\r\n        label=\"age\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.age}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              age: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"AGE\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"sex\"\r\n        label=\"sex\"\r\n        value={props.character.characterInfos.sex}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              sex: event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"SEX\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n        \r\n        <TextField\r\n        id=\"height\"\r\n        label=\"height\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.height}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              height: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"HEIGHT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"weight\"\r\n        label=\"weight\"\r\n        type=\"number\"\r\n        value={props.character.characterInfos.weight}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              weight: +event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"WEIGHT\"\r\n        margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"origin\"\r\n        label=\"origin\"\r\n        value={props.character.characterInfos.origin}\r\n        className={clsx(classes.numberAbilityField, classes.dense)}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => \r\n          {props.setCharacter({\r\n            ...props.character,\r\n            characterInfos : {\r\n              ...props.character.characterInfos,\r\n              origin: event.target.value,\r\n            }\r\n          });}\r\n        }\r\n        placeholder=\"ORIGIN\"\r\n        margin=\"normal\"\r\n        />\r\n        <br />\r\n      </Card>\r\n\r\n      <br />\r\n    </Paper>\r\n  );\r\n}\r\nexport default Making;","import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport CreateAbility from './CreateAbility';\r\nimport CreateSkills from './CreateSkills';\r\nimport CreateInfos from './CreateInfos';\r\nimport defaultSkills from '../characterMakingSkills.json';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      margin:'auto',\r\n      padding: theme.spacing(3, 2),\r\n      width:'90%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 600,\r\n      },\r\n    },\r\n    root: {\r\n      margin:'auto',\r\n      width: '80%',\r\n    },\r\n    button: {\r\n      margin:'auto',\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n      margin:'auto',\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\ntype skill = {\r\n  skillName: string,\r\n  skillValue: number,\r\n  skillType: string,\r\n  skillUnique: boolean,\r\n  skillWorkValue: number,\r\n  skillInterestValue: number,\r\n  defaultValue: number\r\n};\r\n\r\ntype abilityValue = {\r\n  STR: number,\r\n  CON: number,\r\n  POW: number,\r\n  DEX: number,\r\n  APP: number,\r\n  SIZ: number,\r\n  INT: number,\r\n  EDU: number\r\n};\r\n\r\ntype characterInfo = {\r\n  characterName: string,\r\n  HP: number,\r\n  MP: number,\r\n  SAN: number,\r\n  damageBonus: string,\r\n  job: string,\r\n  age: number,\r\n  sex: string,\r\n  height: number,\r\n  weight: number,\r\n  origin: string\r\n};\r\n\r\ntype character = {\r\n  skills: skill[];\r\n  characterBackground: string;\r\n  abilityValues: abilityValue;\r\n  characterInfos: characterInfo;\r\n}\r\n\r\nconst init = (): character => {\r\n  return {\r\n\r\n    skills: defaultSkills.skills.map(s => {\r\n      return{\r\n        skillName: s.skillName,\r\n        skillValue: s.skillValue,\r\n        skillType: s.skillType,\r\n        skillUnique: false,\r\n        skillWorkValue: 0,\r\n        skillInterestValue: 0,\r\n        defaultValue: s.skillValue\r\n      }\r\n    }),\r\n\r\n    characterBackground: \"\",\r\n    abilityValues: {\r\n        STR: 0,\r\n        CON: 0,\r\n        POW: 0,\r\n        DEX: 0,\r\n        APP: 0,\r\n        SIZ: 0,\r\n        INT: 0,\r\n        EDU: 0\r\n    },\r\n    characterInfos: {\r\n        characterName: \"\",\r\n        HP: 0,\r\n        MP: 0,\r\n        SAN: 0,\r\n        damageBonus: \"\",\r\n        job: \"\",\r\n        age: 0,\r\n        sex: \"\",\r\n        height: 0,\r\n        weight: 0,\r\n        origin: \"\"\r\n    },\r\n  };\r\n};\r\n\r\nfunction getSteps() {\r\n  return ['Select character abilitys', 'Setting skills', 'Create character infomation'];\r\n}\r\n\r\nfunction getStepContent(step: number) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'abilitys';\r\n    case 1:\r\n      return 'skills';\r\n    case 2:\r\n      return 'infomation';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\ntype Props = {\r\n  setCharacter: (character: character) => void;\r\n};\r\n\r\nconst Making: React.SFC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [character, setCharacter] = React.useState(init());\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set<number>());\r\n  const steps = getSteps();\r\n\r\n  function isStepSkipped(step: number) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function handleNext() {\r\n    setSkill({\r\n      skillName: \"回避\",\r\n      skillValue: character.abilityValues.DEX * 2,\r\n      skillType: \"戦闘\",\r\n      skillUnique: true,\r\n      skillWorkValue: 0,\r\n      skillInterestValue: 0,\r\n      defaultValue: character.abilityValues.DEX * 2\r\n    })\r\n\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n  \r\n  const setSkills = (skill: skill[]): void =>\r\n  {\r\n    setCharacter(\r\n    {\r\n      ...character,\r\n      skills: skill,\r\n    });\r\n  }\r\n  \r\n  const setSkill = (skill: skill): void =>\r\n  {\r\n    const newSkills = JSON.parse(JSON.stringify(character.skills));\r\n    \r\n    const cSkill = (newSkills.length == null || newSkills.length === 0) ? \r\n      undefined : \r\n      newSkills.find((s: { skillName: string; }) => s.skillName === skill.skillName);\r\n\r\n    //if(cSkill.skillValue !== 0) return;\r\n    if(cSkill == null){\r\n      setCharacter(\r\n      {\r\n        ...character,\r\n        skills: [...character.skills, skill]\r\n      });\r\n    }else{\r\n      cSkill.skillValue = skill.skillValue;\r\n      cSkill.defaultValue = skill.defaultValue;\r\n      setCharacter(\r\n      {\r\n        ...character,\r\n        skills: newSkills\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps: { completed?: boolean } = {};\r\n          const labelProps: { optional?: React.ReactNode } = {};\r\n\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n\r\n        {(activeStep === 0) && (\r\n          <CreateAbility character={character} setCharacter={setCharacter}/>\r\n        )}\r\n        {(activeStep === 1) && (\r\n          <CreateSkills character={character} setCharacter={setCharacter}/>\r\n        )}\r\n        {(activeStep === 2) && (\r\n          <CreateInfos character={character} setCharacter={setCharacter}/>\r\n        )}\r\n\r\n      <div>\r\n        {\r\n          activeStep === steps.length ? (\r\n          <div>\r\n            {character.skills.filter(e=> e.skillWorkValue !== 0 || e.skillInterestValue !== 0 ).forEach(e=> e.skillUnique = true)}\r\n            {props.setCharacter(character)}\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Making;","import { connect } from 'react-redux';\r\nimport { Action, Dispatch } from 'redux';\r\n\r\nimport { actionCreator, RootState  } from '../states';\r\nimport Making from '../pages/Making';\r\n\r\n\r\ntype skill = {\r\n    skillName: string,\r\n    skillValue: number,\r\n    skillType: string,\r\n    skillUnique: boolean,\r\n    skillWorkValue: number,\r\n    skillInterestValue: number,\r\n    defaultValue: number\r\n  };\r\n  \r\n  type abilityValue = {\r\n    STR: number,\r\n    CON: number,\r\n    POW: number,\r\n    DEX: number,\r\n    APP: number,\r\n    SIZ: number,\r\n    INT: number,\r\n    EDU: number\r\n  };\r\n  \r\n  type characterInfo = {\r\n    characterName: string,\r\n    HP: number,\r\n    MP: number,\r\n    SAN: number,\r\n    damageBonus: string,\r\n    job: string,\r\n    age: number,\r\n    sex: string,\r\n    height: number,\r\n    weight: number,\r\n    origin: string\r\n  };\r\n  \r\n  type character = {\r\n    skills: skill[];\r\n    characterBackground: string;\r\n    abilityValues: abilityValue;\r\n    characterInfos: characterInfo;\r\n  }\r\n  \r\nconst mapStateToProps = (state: RootState) => {\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        setCharacter: (chara: character) => {\r\n            dispatch(actionCreator.character.setCharacter({chara}));\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Making);","import * as React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Main from './pages/Main';\nimport Setting from './containers/Setting';\nimport Making from './containers/Making';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [open, setOpen] = React.useState(true);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <header className=\"App-header\">\n          <NavBar \n          //mobile={navigator.userAgent.match(/(iPhone|iPad|iPod|Android)/i) == null}\n          open={open}\n          setOpen={setOpen}\n          />\n        </header>\n\n        <div className='App-main' id='app-main'>\n          <Route exact path='/' component={Main}/>\n          \n          <Route path='/home' render={() => <Home open={open} />}/>\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/setting' component={Setting} />\n          <Route exact path='/making' component={Making} />\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport './index.css';\n\nimport App from './App';\nimport { rootReducer } from './states';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App />\n    </Provider>,\n     document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}